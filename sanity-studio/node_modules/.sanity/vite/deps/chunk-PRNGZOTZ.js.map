{
  "version": 3,
  "sources": ["../../../sanity/src/desk/components/Delay.tsx", "../../../sanity/src/desk/components/RenderActionCollectionState.tsx", "../../../sanity/src/desk/components/RenderBadgeCollectionState.tsx", "../../../sanity/src/desk/components/paneRouter/PaneRouterProvider.tsx", "../../../sanity/src/desk/components/pane/helpers/_calcPaneResize.ts", "../../../sanity/src/desk/components/pane/helpers/_getDOMPath.ts", "../../../sanity/src/desk/components/pane/helpers/_sortElements.ts", "../../../sanity/src/desk/components/pane/paneLayoutController.ts", "../../../sanity/src/desk/components/pane/PaneLayout.tsx", "../../../sanity/src/desk/structureResolvers/PaneResolutionError.ts", "../../../sanity/src/desk/structureResolvers/assignId.ts", "../../../sanity/src/desk/structureResolvers/memoBind.ts", "../../../sanity/src/desk/structureResolvers/createPaneResolver.ts", "../../../sanity/src/desk/structureResolvers/resolveIntent.ts", "../../../sanity/src/desk/useDeskTool.ts", "../../../sanity/src/desk/structureResolvers/createResolvedPaneNodeStream.ts", "../../../sanity/src/desk/structureResolvers/useResolvedPanes.ts", "../../../sanity/src/desk/components/deskTool/intentResolver/Redirect.tsx", "../../../sanity/src/desk/components/deskTool/intentResolver/utils.ts", "../../../sanity/src/desk/components/deskTool/intentResolver/IntentResolver.tsx", "../../../sanity/src/desk/components/deskTool/StructureError.tsx", "../../../sanity/src/desk/panes/unknown/UnknownPaneType.tsx", "../../../sanity/src/desk/panes/loading/getWaitMessages.ts", "../../../sanity/src/desk/panes/loading/LoadingPane.tsx", "../../../sanity/src/desk/panes/DeskToolPane.tsx", "../../../sanity/src/desk/panes/error/ErrorPane.tsx", "../../../sanity/src/desk/panes/document/DocumentOperationResults.tsx", "../../../sanity/src/desk/panes/document/menuItems.ts", "../../../sanity/src/desk/panes/document/usePreviewUrl.ts", "../../../sanity/src/desk/panes/document/getInitialValueTemplateOpts.ts", "../../../sanity/src/desk/panes/document/DocumentPaneProvider.tsx", "../../../sanity/src/desk/panes/document/timeline/constants.ts", "../../../sanity/src/desk/panes/document/timeline/helpers.ts", "../../../sanity/src/desk/panes/document/timeline/userAvatarStack.tsx", "../../../sanity/src/desk/panes/document/timeline/timelineItem.styled.tsx", "../../../sanity/src/desk/panes/document/timeline/timelineItem.tsx", "../../../sanity/src/desk/panes/document/timeline/timeline.styled.tsx", "../../../sanity/src/desk/panes/document/timeline/timeline.tsx", "../../../sanity/src/desk/panes/document/timeline/timelineMenu.tsx", "../../../sanity/src/desk/panes/document/changesPanel/content/LoadingContent.tsx", "../../../sanity/src/desk/panes/document/changesPanel/helpers.ts", "../../../sanity/src/desk/panes/document/changesPanel/ChangesPanel.tsx", "../../../sanity/src/desk/useDeskToolSetting.ts", "../../../sanity/src/desk/panes/document/inspectDialog/constants.ts", "../../../sanity/src/desk/panes/document/inspectDialog/helpers.ts", "../../../sanity/src/desk/panes/document/inspectDialog/InspectDialog.styles.tsx", "../../../sanity/src/desk/panes/document/inspectDialog/Search.tsx", "../../../sanity/src/desk/panes/document/inspectDialog/InspectDialog.tsx", "../../../sanity/src/desk/panes/document/documentPanel/ReferenceChangedBanner.tsx", "../../../sanity/src/desk/panes/document/documentPanel/PermissionCheckBanner.tsx", "../../../sanity/src/desk/panes/document/documentPanel/documentViews/useConditionalToast.ts", "../../../sanity/src/desk/panes/document/documentPanel/documentViews/FormView.tsx", "../../../sanity/src/desk/panes/document/documentPanel/header/DocumentHeaderTabs.tsx", "../../../sanity/src/desk/panes/document/documentPanel/header/ValidationMenu.tsx", "../../../sanity/src/desk/panes/document/documentPanel/header/DocumentHeaderTitle.tsx", "../../../sanity/src/desk/panes/document/documentPanel/header/DocumentPanelHeader.tsx", "../../../sanity/src/desk/panes/document/documentPanel/DocumentPanel.tsx", "../../../sanity/src/desk/panes/document/statusBar/dialogs/constants.ts", "../../../sanity/src/desk/panes/document/statusBar/dialogs/ConfirmDialog.tsx", "../../../sanity/src/desk/panes/document/statusBar/dialogs/ModalDialog.tsx", "../../../sanity/src/desk/panes/document/statusBar/dialogs/PopoverDialog.tsx", "../../../sanity/src/desk/panes/document/statusBar/ActionStateDialog.tsx", "../../../sanity/src/desk/panes/document/statusBar/ActionMenuButton.tsx", "../../../sanity/src/desk/panes/document/statusBar/DocumentStatusBarActions.tsx", "../../../sanity/src/desk/panes/document/statusBar/sparkline/DocumentBadges.tsx", "../../../sanity/src/desk/panes/document/statusBar/sparkline/PublishStatus.tsx", "../../../sanity/src/desk/panes/document/statusBar/sparkline/ReviewChangesButton/AnimatedStatusIcon.tsx", "../../../sanity/src/desk/panes/document/statusBar/sparkline/ReviewChangesButton/ReviewChangesButton.tsx", "../../../sanity/src/desk/panes/document/statusBar/sparkline/DocumentSparkline.tsx", "../../../sanity/src/desk/panes/document/statusBar/DocumentStatusBar.tsx", "../../../sanity/src/desk/panes/document/keyboardShortcuts/DocumentActionShortcuts.tsx", "../../../sanity/src/desk/panes/document/DocumentPane.tsx", "../../../sanity/src/desk/components/deskTool/NoDocumentTypesScreen.tsx", "../../../sanity/src/desk/components/deskTool/DeskTool.tsx", "../../../sanity/src/desk/components/deskTool/DeskToolBoundary.tsx"],
  "sourcesContent": ["import React, {useEffect, useState} from 'react'\n\nexport function Delay({\n  children,\n  ms = 0,\n}: {\n  children?: React.ReactElement | (() => React.ReactElement)\n  ms?: number\n}): React.ReactElement {\n  const [ready, setReady] = useState(ms <= 0)\n\n  useEffect(() => {\n    if (ms <= 0) {\n      return undefined\n    }\n\n    const timeoutId = setTimeout(() => setReady(true), ms)\n\n    return () => {\n      clearTimeout(timeoutId)\n    }\n  }, [ms])\n\n  if (!ready || !children) {\n    return <></>\n  }\n\n  return typeof children === 'function' ? children() : children\n}\n", "import React from 'react'\nimport {\n  type DocumentActionDescription,\n  type DocumentActionProps,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Action<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderActionCollectionProps {\n  actions: Action<DocumentActionProps, DocumentActionDescription>[]\n  actionProps: DocumentActionProps\n  children: (props: {states: DocumentActionDescription[]}) => React.ReactNode\n  onActionComplete?: () => void\n}\n\n/** @internal */\nexport const RenderActionCollectionState = (props: RenderActionCollectionProps) => {\n  const {actions, children, actionProps, onActionComplete} = props\n\n  return (\n    <GetHookCollectionState onReset={onActionComplete} hooks={actions} args={actionProps}>\n      {children}\n    </GetHookCollectionState>\n  )\n}\n", "import React from 'react'\nimport {\n  type DocumentBadgeDescription,\n  type DocumentBadgeProps,\n  type EditStateFor,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Badge<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderBadgeCollectionProps {\n  badges: Badge<DocumentBadgeProps, DocumentBadgeDescription>[]\n  badgeProps: EditStateFor\n  children: (props: {states: DocumentBadgeDescription[]}) => React.ReactNode\n  onActionComplete?: () => void\n}\n\n/** @internal */\nexport const RenderBadgeCollectionState = (props: RenderBadgeCollectionProps) => {\n  const {badges, children, badgeProps, ...rest} = props\n\n  return (\n    <GetHookCollectionState {...rest} hooks={badges} args={badgeProps}>\n      {children}\n    </GetHookCollectionState>\n  )\n}\n", "import {omit} from 'lodash'\nimport React, {useCallback, useMemo} from 'react'\nimport {toString as pathToString} from '@sanity/util/paths'\nimport {RouterPaneGroup, RouterPanes, RouterPaneSibling} from '../../types'\nimport {ChildLink} from './ChildLink'\nimport {BackLink} from './BackLink'\nimport {ReferenceChildLink} from './ReferenceChildLink'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {ParameterizedLink} from './ParameterizedLink'\nimport {PaneRouterContextValue} from './types'\nimport {useRouter, useRouterState} from 'sanity/router'\n\nconst emptyArray: never[] = []\n\n/**\n * @internal\n */\nexport function PaneRouterProvider(props: {\n  children: React.ReactNode\n  flatIndex: number\n  index: number\n  params: Record<string, string | undefined>\n  payload: unknown\n  siblingIndex: number\n}) {\n  const {children, flatIndex, index, params, payload, siblingIndex} = props\n  const {navigate, navigateIntent} = useRouter()\n  const routerState = useRouterState()\n  const routerPaneGroups: RouterPaneGroup[] = useMemo(\n    () => (routerState?.panes || emptyArray) as RouterPanes,\n    [routerState?.panes]\n  )\n\n  const groupIndex = index - 1\n\n  const modifyCurrentGroup = useCallback(\n    (modifier: (siblings: RouterPaneGroup, item: RouterPaneSibling) => RouterPaneGroup) => {\n      const currentGroup = routerPaneGroups[groupIndex] || []\n      const currentItem = currentGroup[siblingIndex]\n      const nextGroup = modifier(currentGroup, currentItem)\n      const nextPanes = [\n        ...routerPaneGroups.slice(0, groupIndex),\n        nextGroup,\n        ...routerPaneGroups.slice(groupIndex + 1),\n      ]\n      const nextRouterState = {...(routerState || {}), panes: nextPanes}\n\n      setTimeout(() => navigate(nextRouterState), 0)\n\n      return nextRouterState\n    },\n    [groupIndex, navigate, routerPaneGroups, routerState, siblingIndex]\n  )\n\n  const setPayload: PaneRouterContextValue['setPayload'] = useCallback(\n    (nextPayload) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, payload: nextPayload},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex]\n  )\n\n  const setParams: PaneRouterContextValue['setParams'] = useCallback(\n    (nextParams) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, params: nextParams},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex]\n  )\n\n  const handleEditReference: PaneRouterContextValue['handleEditReference'] = useCallback(\n    ({id, parentRefPath, type, template}) => {\n      navigate({\n        panes: [\n          ...routerPaneGroups.slice(0, groupIndex + 1),\n          [\n            {\n              id,\n              params: {template: template.id, parentRefPath: pathToString(parentRefPath), type},\n              payload: template.params,\n            },\n          ],\n        ],\n      })\n    },\n    [groupIndex, navigate, routerPaneGroups]\n  )\n\n  const ctx: PaneRouterContextValue = useMemo(\n    () => ({\n      // Zero-based index (position) of pane, visually\n      index: flatIndex,\n\n      // Zero-based index of pane group (within URL structure)\n      groupIndex,\n\n      // Zero-based index of pane within sibling group\n      siblingIndex,\n\n      // Payload of the current pane\n      payload,\n\n      // Params of the current pane\n      params,\n\n      // Whether or not the pane has any siblings (within the same group)\n      hasGroupSiblings: routerPaneGroups[groupIndex]\n        ? routerPaneGroups[groupIndex].length > 1\n        : false,\n\n      // The length of the current group\n      groupLength: routerPaneGroups[groupIndex] ? routerPaneGroups[groupIndex].length : 0,\n\n      // Current router state for the \"panes\" property\n      routerPanesState: routerPaneGroups,\n\n      // Curried StateLink that passes the correct state automatically\n      ChildLink,\n\n      // Curried StateLink that pops off the last pane group\n      BackLink,\n\n      // A specialized `ChildLink` that takes in the needed props to open a\n      // referenced document to the right\n      ReferenceChildLink,\n\n      // Similar to `ReferenceChildLink` expect without the wrapping component\n      handleEditReference,\n\n      // Curried StateLink that passed the correct state, but merges params/payload\n      ParameterizedLink,\n\n      // Replaces the current pane with a new one\n      replaceCurrent: (opts = {}): void => {\n        modifyCurrentGroup(() => [\n          {id: opts.id || '', payload: opts.payload, params: opts.params || {}},\n        ])\n      },\n\n      // Removes the current pane from the group\n      closeCurrent: (): void => {\n        modifyCurrentGroup((siblings, item) =>\n          siblings.length > 1 ? siblings.filter((sibling) => sibling !== item) : siblings\n        )\n      },\n\n      // Duplicate the current pane, with optional overrides for payload, parameters\n      duplicateCurrent: (options): void => {\n        modifyCurrentGroup((siblings, item) => {\n          const duplicatedItem = {\n            ...item,\n            payload: options?.payload || item.payload,\n            params: options?.params || item.params,\n          }\n\n          return [\n            ...siblings.slice(0, siblingIndex),\n            duplicatedItem,\n            ...siblings.slice(siblingIndex),\n          ]\n        })\n      },\n\n      // Set the view for the current pane\n      setView: (viewId) => {\n        const restParams = omit(params, 'view')\n        return setParams(viewId ? {...restParams, view: viewId} : restParams)\n      },\n\n      // Set the parameters for the current pane\n      setParams,\n\n      // Set the payload for the current pane\n      setPayload,\n\n      // Proxied navigation to a given intent. Consider just exposing `router` instead?\n      navigateIntent,\n    }),\n    [\n      flatIndex,\n      groupIndex,\n      handleEditReference,\n      modifyCurrentGroup,\n      navigateIntent,\n      params,\n      payload,\n      routerPaneGroups,\n      setParams,\n      setPayload,\n      siblingIndex,\n    ]\n  )\n\n  return <PaneRouterContext.Provider value={ctx}>{children}</PaneRouterContext.Provider>\n}\n", "import {PANE_DEFAULT_MIN_WIDTH} from '../constants'\nimport {PaneConfigOpts, PaneResizeCache} from '../types'\n\nexport function _calcPaneResize(\n  cache: PaneResizeCache,\n  left: PaneConfigOpts,\n  right: PaneConfigOpts,\n  deltaX: number\n): {leftFlex: number; leftW: number; rightFlex: number; rightW: number} {\n  const sum = {\n    flex: cache.left.flex + cache.right.flex,\n    width: cache.left.width + cache.right.width,\n  }\n\n  const leftMinWidth = left.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n  const rightMinWidth = right.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n\n  const leftMaxWidth = Math.min(left.maxWidth || Infinity, sum.width - rightMinWidth)\n  const rightMaxWidth = Math.min(right.maxWidth || Infinity, sum.width - leftMinWidth)\n\n  // Get min. delta X\n  let minDeltaX = leftMinWidth - cache.left.width\n  const rightMinDeltaX = cache.right.width - rightMaxWidth\n  if (minDeltaX < rightMinDeltaX) {\n    minDeltaX = rightMinDeltaX\n  }\n\n  // Get max. delta X\n  let maxDeltaX = cache.right.width - rightMinWidth\n  const leftMaxDeltaX = leftMaxWidth - cache.left.width\n  if (maxDeltaX > leftMaxDeltaX) {\n    maxDeltaX = leftMaxDeltaX\n  }\n\n  const _deltaX = Math.min(Math.max(deltaX, minDeltaX), maxDeltaX)\n\n  const leftW = cache.left.width + _deltaX\n  const rightW = cache.right.width - _deltaX\n\n  const leftFlex = (leftW / sum.width) * sum.flex\n  const rightFlex = (rightW / sum.width) * sum.flex\n\n  return {leftFlex, leftW, rightFlex, rightW}\n}\n", "/**\n * @internal\n */\nexport function _getDOMPath(rootElement: HTMLElement, el: HTMLElement): number[] {\n  const path: number[] = []\n\n  let e = el\n\n  while (e !== rootElement) {\n    const parentElement = e.parentElement\n\n    if (!parentElement) return path\n\n    const children = Array.from(parentElement.childNodes)\n    const index = children.indexOf(e)\n\n    path.unshift(index)\n\n    if (parentElement === rootElement) {\n      return path\n    }\n\n    e = parentElement\n  }\n\n  return path\n}\n", "import {_getDOMPath} from './_getDOMPath'\n\nconst EMPTY_PATH: number[] = []\n\n/**\n * @internal\n */\nexport function _sortElements(rootElement: HTMLElement, elements: HTMLElement[]): void {\n  // Create a map containing the DOM path of each pane element.\n  // The DOM path is relative to the `rootElement`, and is used in the next step for sorting.\n  const map = new WeakMap<HTMLElement, number[]>()\n\n  for (const element of elements) {\n    map.set(element, _getDOMPath(rootElement, element))\n  }\n\n  const _sortByElementPath = (a: HTMLElement, b: HTMLElement) => {\n    const _a = map.get(a) || EMPTY_PATH\n    const _b = map.get(b) || EMPTY_PATH\n\n    const len = Math.max(_a.length, _b.length)\n\n    // Loop until there are different indexes\n    for (let i = 0; i < len; i += 1) {\n      const aIndex = _a[i] || -1\n      const bIndex = _b[i] || -1\n\n      if (aIndex !== bIndex) {\n        return aIndex - bIndex\n      }\n    }\n\n    return 0\n  }\n\n  elements.sort(_sortByElementPath)\n}\n", "import {PANE_COLLAPSED_WIDTH, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {_calcPaneResize, _sortElements} from './helpers'\nimport {PaneConfigOpts, PaneData, PaneResizeCache, PaneResizeData} from './types'\n\nexport interface PaneLayoutState {\n  expandedElement: HTMLElement | null\n  panes: PaneData[]\n  resizing: boolean\n}\n\nexport type PaneLayoutStateObserver = (state: PaneLayoutState) => void\n\nexport interface PaneLayoutController {\n  collapse: (element: HTMLElement) => void\n  expand: (element: HTMLElement) => void\n  mount: (element: HTMLElement, options: PaneConfigOpts) => () => void\n  resize: (type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) => void\n  setRootElement: (nextRootElement: HTMLElement | null) => void\n  setRootWidth: (nextRootWidth: number) => void\n  subscribe: (observer: PaneLayoutStateObserver) => () => void\n}\n\nexport function createPaneLayoutController(): PaneLayoutController {\n  const observers: PaneLayoutStateObserver[] = []\n  const elements: HTMLElement[] = []\n  const optionsMap = new WeakMap<HTMLElement, PaneConfigOpts & {original: PaneConfigOpts}>()\n  const userCollapsedElementSet = new Set<HTMLElement>()\n  const cache: Partial<PaneResizeCache> = {}\n\n  // Mutable internal state\n  let rootElement: HTMLElement | null = null\n  let rootWidth = 0\n  let expandedElement: HTMLElement | null = null\n  let resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n  let resizing = false\n\n  function collapse(element: HTMLElement) {\n    userCollapsedElementSet.add(element)\n\n    if (expandedElement === element) {\n      expandedElement = null\n    }\n\n    _notifyObservers()\n  }\n\n  function expand(element: HTMLElement) {\n    userCollapsedElementSet.delete(element)\n\n    expandedElement = element\n\n    _notifyObservers()\n  }\n\n  function mount(element: HTMLElement, options: PaneConfigOpts) {\n    optionsMap.set(element, {...options, original: options})\n\n    elements.push(element)\n\n    if (rootElement) {\n      _sortElements(rootElement, elements)\n    }\n\n    expand(element)\n\n    return () => {\n      const idx = elements.indexOf(element)\n\n      if (idx > -1) {\n        elements.splice(idx, 1)\n      }\n\n      optionsMap.delete(element)\n\n      _notifyObservers()\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  function resize(type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) {\n    const leftIndex = elements.indexOf(leftElement)\n    const leftOptions = optionsMap.get(leftElement)\n\n    if (!leftOptions) return\n\n    const rightElement = elements[leftIndex + 1]\n    const rightOptions = optionsMap.get(rightElement)\n\n    if (!rightOptions) return\n\n    if (type === 'start') {\n      resizing = true\n\n      cache.left = {\n        element: leftElement,\n        flex: leftOptions.flex || 1,\n        width: leftElement.offsetWidth,\n      }\n\n      cache.right = {\n        element: rightElement,\n        flex: rightOptions.flex || 1,\n        width: rightElement.offsetWidth,\n      }\n\n      _notifyObservers()\n    }\n\n    if (type === 'move' && cache.left && cache.right) {\n      resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n\n      const {leftW, rightW, leftFlex, rightFlex} = _calcPaneResize(\n        cache as PaneResizeCache,\n        leftOptions,\n        rightOptions,\n        deltaX\n      )\n\n      // update resize cache\n      resizeDataMap.set(leftElement, {flex: leftFlex, width: leftW})\n      resizeDataMap.set(rightElement, {flex: rightFlex, width: rightW})\n\n      _notifyObservers()\n    }\n\n    if (type === 'end') {\n      resizing = false\n\n      const leftResizeData = resizeDataMap.get(leftElement)\n      const rightResizeData = resizeDataMap.get(rightElement)\n\n      // Update left options\n      optionsMap.set(leftElement, {\n        ...leftOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: leftResizeData?.flex ?? leftOptions.flex,\n      })\n\n      // Update right options\n      optionsMap.set(rightElement, {\n        ...rightOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: rightResizeData?.flex ?? rightOptions.flex,\n      })\n\n      // Reset resize data map\n      resizeDataMap = new Map()\n\n      // Reset cache\n      delete cache.left\n      delete cache.right\n\n      _notifyObservers()\n    }\n  }\n\n  function setRootElement(nextRootElement: HTMLElement | null) {\n    rootElement = nextRootElement\n  }\n\n  function setRootWidth(nextRootWidth: number) {\n    rootWidth = nextRootWidth\n    _notifyObservers()\n  }\n\n  function subscribe(observer: PaneLayoutStateObserver) {\n    observers.push(observer)\n\n    return () => {\n      const idx = observers.push(observer)\n\n      if (idx > -1) {\n        observers.splice(idx, 1)\n      }\n    }\n  }\n\n  return {collapse, expand, mount, resize, setRootElement, setRootWidth, subscribe}\n\n  // eslint-disable-next-line complexity\n  function _notifyObservers() {\n    if (!rootWidth) return\n\n    // Create a reversed array of pane elements, so we can loop over them backwards.\n    // Place the expanded element first (so it has the least chance of being collapsed).\n    const _elements: HTMLElement[] = []\n    for (const element of elements) {\n      if (element !== expandedElement) {\n        _elements.unshift(element)\n      }\n    }\n    if (expandedElement) {\n      _elements.unshift(expandedElement)\n    }\n\n    const dataMap = new WeakMap<HTMLElement, PaneData>()\n    const len = _elements.length\n    const lastElement = _elements[0]\n    const collapsedWidth = (len - 1) * PANE_COLLAPSED_WIDTH\n\n    let remaingWidth = rootWidth - collapsedWidth\n\n    for (const element of _elements) {\n      const options = optionsMap.get(element)\n\n      if (!options) {\n        continue\n      }\n\n      const minWidth = options.currentMinWidth || options.minWidth || PANE_DEFAULT_MIN_WIDTH\n      const isLast = element === lastElement\n\n      // A pane is collapsed if:\n      // - it’s explictly collapsed by the user\n      const userCollapsed = userCollapsedElementSet.has(element)\n      // - it’s minimum width is larger than the remaining width\n      const sizeCollapsed = minWidth > remaingWidth\n      // - if the element is not the last (expanded pane)\n      const collapsed = isLast ? false : userCollapsed || sizeCollapsed\n\n      const resizeData = resizeDataMap.get(element)\n\n      // Collect pane data\n      dataMap.set(element, {\n        element: element,\n        collapsed: collapsed,\n        currentMinWidth: resizeData?.width ?? options.currentMinWidth,\n        currentMaxWidth: resizeData?.width ?? options.currentMaxWidth,\n        flex: resizeData?.flex ?? options.flex ?? 1,\n      })\n\n      // Update remaining width\n      if (collapsed) {\n        remaingWidth -= PANE_COLLAPSED_WIDTH\n      } else {\n        remaingWidth -= minWidth - PANE_COLLAPSED_WIDTH\n      }\n    }\n\n    const panes: PaneData[] = []\n\n    for (const element of elements) {\n      const data = dataMap.get(element)\n\n      if (data) panes.push(data)\n    }\n\n    for (const observer of observers) {\n      observer({\n        expandedElement: expandedElement || elements[elements.length - 1] || null,\n        panes,\n        resizing,\n      })\n    }\n  }\n}\n", "import {CardProps, useElementRect} from '@sanity/ui'\nimport React, {useMemo, useState, useEffect} from 'react'\nimport {PaneLayoutContext} from './PaneLayoutContext'\nimport {PaneLayoutContextValue} from './types'\nimport {Root} from './PaneLayout.styles'\nimport {createPaneLayoutController, PaneLayoutState} from './paneLayoutController'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneLayoutProps {\n  minWidth?: number\n  onCollapse?: () => void\n  onExpand?: () => void\n}\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneLayout(\n  props: PaneLayoutProps &\n    CardProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'wrap'>\n) {\n  const {children, minWidth, onCollapse, onExpand, ...restProps} = props\n  const controller = useMemo(() => createPaneLayoutController(), [])\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const rootRect = useElementRect(rootElement)\n  const width = rootRect?.width || 0\n  const collapsed = width === undefined || !minWidth ? undefined : width < minWidth\n  const [state, setState] = useState<PaneLayoutState>({\n    expandedElement: null,\n    panes: [],\n    resizing: false,\n  })\n\n  // Set root element\n  useEffect(() => controller.setRootElement(rootElement), [controller, rootElement])\n\n  // Set root size\n  useEffect(() => controller.setRootWidth(width), [controller, width])\n\n  // Subscribe to state changes\n  useEffect(() => controller.subscribe(setState), [controller])\n\n  // Call the `onCollapse` and `onExpand` callbacks as the `collapsed` boolean changes\n  useEffect(() => {\n    if (collapsed === undefined) return\n    if (collapsed && onCollapse) onCollapse()\n    if (!collapsed && onExpand) onExpand()\n  }, [collapsed, onCollapse, onExpand])\n\n  // This is the context value that gives each pane the information they need\n  const paneLayout: PaneLayoutContextValue = useMemo(\n    () => ({\n      collapse: controller.collapse,\n      collapsed,\n      expand: controller.expand,\n      expandedElement: state.expandedElement,\n      mount: controller.mount,\n      panes: state.panes,\n      resize: controller.resize,\n      resizing: state.resizing,\n    }),\n    [collapsed, controller, state.expandedElement, state.panes, state.resizing]\n  )\n\n  return (\n    <PaneLayoutContext.Provider value={paneLayout}>\n      <Root\n        data-ui=\"PaneLayout\"\n        {...restProps}\n        data-collapsed={collapsed ? '' : undefined}\n        // The `data-resizing` attribute is used to improve cursor behavior\n        data-resizing={state.resizing ? '' : undefined}\n        // The `data-mounted` attribute is used to fade in the layout and prevent flash of\n        // non-collapsed panes\n        data-mounted={width ? '' : undefined}\n        ref={setRootElement}\n      >\n        {children}\n      </Root>\n    </PaneLayoutContext.Provider>\n  )\n}\n", "import {RouterPaneSiblingContext} from '../types'\n\nexport interface PaneResolutionErrorOptions {\n  message: string\n  context?: RouterPaneSiblingContext\n  helpId?: string\n  cause?: Error\n}\n\n/**\n * An error thrown during pane resolving. This error is meant to be bubbled up\n * through react and handled in an error boundary. It includes a `cause`\n * property which is the original error caught\n */\nexport class PaneResolutionError extends Error {\n  cause: Error | undefined\n  context: RouterPaneSiblingContext | undefined\n  helpId: string | undefined\n\n  constructor({message, context, helpId, cause}: PaneResolutionErrorOptions) {\n    super(message)\n    this.context = context\n    this.helpId = helpId\n    this.cause = cause\n  }\n}\n", "import {nanoid} from 'nanoid'\n\n// `WeakMap`s require the first type param to extend `object`\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst randomIdCache = new WeakMap<object, string>()\n\n/**\n * given an object, this function randomly generates an ID and returns it. this\n * result is then saved in a WeakMap so subsequent requests for the same object\n * will receive the same ID\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function assignId(obj: object): string {\n  const cachedValue = randomIdCache.get(obj)\n  if (cachedValue) return cachedValue\n\n  const id = nanoid()\n  randomIdCache.set(obj, id)\n  return id\n}\n", "/* eslint-disable @typescript-eslint/ban-types */\n\n// `WeakMap`s require the first type param to extend `object`\nconst bindCache = new WeakMap<object, Map<string, Function>>()\n\n/**\n * An alternative to `obj.method.bind(obj)` that utilizes a weakmap to return\n * the same memory reference for sequent binds.\n */\nexport function memoBind<\n  T extends object,\n  K extends keyof {[P in keyof T]: T[P] extends Function ? T[P] : never}\n>(obj: T, methodKey: K): T[K]\nexport function memoBind(obj: Record<string, unknown>, methodKey: string): Function {\n  const boundMethods = bindCache.get(obj) || new Map<string, Function>()\n  if (boundMethods) {\n    const bound = boundMethods.get(methodKey)\n    if (bound) return bound\n  }\n\n  const method = obj[methodKey]\n\n  if (typeof method !== 'function') {\n    throw new Error(\n      `Expected property \\`${methodKey}\\` to be a function but got ${typeof method} instead.`\n    )\n  }\n\n  const bound = method.bind(obj)\n  boundMethods.set(methodKey, bound)\n  bindCache.set(obj, boundMethods)\n\n  return bound\n}\n", "import {from, isObservable, Observable, of as observableOf, Subscribable} from 'rxjs'\n\nimport {publishReplay, refCount, switchMap} from 'rxjs/operators'\n\nimport {PaneNode, RouterPaneSiblingContext, UnresolvedPaneNode} from '../types'\nimport {PaneResolutionError} from './PaneResolutionError'\nimport {isRecord} from 'sanity'\n\ninterface Serializable {\n  serialize: (...args: never[]) => unknown\n}\n\nconst isPromise = (thing: any): thing is PromiseLike<unknown> => {\n  return !!thing && typeof thing?.then === 'function'\n}\nconst isSerializable = (thing: unknown): thing is Serializable => {\n  if (!isRecord(thing)) return false\n  return typeof thing.serialize === 'function'\n}\n\n/**\n * The signature of the function used to take an `UnresolvedPaneNode` and turn\n * it into an `Observable<PaneNode>`.\n */\nexport type PaneResolver = (\n  unresolvedPane: UnresolvedPaneNode | undefined,\n  context: RouterPaneSiblingContext,\n  flatIndex: number\n) => Observable<PaneNode>\n\nexport type PaneResolverMiddleware = (paneResolveFn: PaneResolver) => PaneResolver\n\nconst rethrowWithPaneResolutionErrors: PaneResolverMiddleware =\n  (next) => (unresolvedPane, context, flatIndex) => {\n    try {\n      return next(unresolvedPane, context, flatIndex)\n    } catch (e) {\n      // re-throw errors that are already `PaneResolutionError`s\n      if (e instanceof PaneResolutionError) {\n        throw e\n      }\n\n      // anything else, wrap with `PaneResolutionError` and set the underlying\n      // error as a the `cause`\n      throw new PaneResolutionError({\n        message: typeof e?.message === 'string' ? e.message : '',\n        context,\n        cause: e,\n      })\n    }\n  }\n\nconst wrapWithPublishReplay: PaneResolverMiddleware =\n  (next) =>\n  (...args) => {\n    return next(...args).pipe(\n      // need to add publishReplay + refCount to ensure new subscribers always\n      // get an emission. without this, memoized observables may get stuck\n      // waiting for their first emissions resulting in a loading pane\n      publishReplay(1),\n      refCount()\n    )\n  }\n\nexport function createPaneResolver(middleware: PaneResolverMiddleware): PaneResolver {\n  // note: this API includes a middleware/wrapper function because the function\n  // is recursive. we want to call the wrapped version of the function always\n  // (even inside of nested calls) so the identifier invoked for the recursion\n  // should be the wrapped version\n  const resolvePane = rethrowWithPaneResolutionErrors(\n    wrapWithPublishReplay(\n      middleware((unresolvedPane, context, flatIndex) => {\n        if (!unresolvedPane) {\n          throw new PaneResolutionError({\n            message: 'Pane returned no child',\n            context,\n            helpId: 'structure-item-returned-no-child',\n          })\n        }\n\n        if (isPromise(unresolvedPane) || isObservable(unresolvedPane)) {\n          return from(unresolvedPane).pipe(\n            switchMap((result) => resolvePane(result, context, flatIndex))\n          )\n        }\n\n        if (isSerializable(unresolvedPane)) {\n          return resolvePane(unresolvedPane.serialize(context), context, flatIndex)\n        }\n\n        if (typeof unresolvedPane === 'function') {\n          return resolvePane(unresolvedPane(context.id, context), context, flatIndex)\n        }\n\n        return observableOf(unresolvedPane)\n      })\n    )\n  )\n\n  return resolvePane\n}\n", "import {omit} from 'lodash'\nimport {firstValueFrom, Observable} from 'rxjs'\nimport {first} from 'rxjs/operators'\nimport {PaneNode, RouterPanes, RouterPaneSiblingContext, UnresolvedPaneNode} from '../types'\nimport {StructureContext} from '../structureBuilder'\nimport {assignId} from './assignId'\nimport {memoBind} from './memoBind'\nimport {createPaneResolver, PaneResolverMiddleware} from './createPaneResolver'\n\ninterface TraverseOptions {\n  unresolvedPane: UnresolvedPaneNode | undefined\n  intent: string\n  params: {type: string; id: string; [key: string]: string | undefined}\n  payload: unknown\n  parent: PaneNode | null\n  path: string[]\n  currentId: string\n  flatIndex: number\n  levelIndex: number\n  structureContext: StructureContext\n}\n\nexport interface ResolveIntentOptions {\n  rootPaneNode?: UnresolvedPaneNode\n  intent: string\n  params: {type: string; id: string; [key: string]: string | undefined}\n  payload: unknown\n  structureContext: StructureContext\n}\n\n/**\n * Resolves an intent request using breadth first search. If a match is not\n * found, the intent will resolve to the fallback editor.\n *\n * A match is found if:\n * 1. the `PaneNode` is of type `document` and the its ID matches the intent ID\n * 2. the `PaneNode` is of type `documentList` and the `schemaTypeName` matches\n * 3. the `PaneNode`'s `canHandleIntent` method returns true\n *\n * If a `PaneNode` of type `list` is found, it will be searched for a match.\n *\n * @see PaneNode\n */\nexport async function resolveIntent(options: ResolveIntentOptions): Promise<RouterPanes> {\n  const resolvedPaneCache = new Map<string, Observable<PaneNode>>()\n\n  // this is a simple version of the memoizer in `createResolvedPaneNodeStream`\n  const memoize: PaneResolverMiddleware = (nextFn) => (unresolvedPane, context, flatIndex) => {\n    const key = unresolvedPane && `${assignId(unresolvedPane)}-${context.path.join('__')}`\n    const cachedResolvedPane = key && resolvedPaneCache.get(key)\n    if (cachedResolvedPane) return cachedResolvedPane\n\n    const result = nextFn(unresolvedPane, context, flatIndex)\n    if (key) resolvedPaneCache.set(key, result)\n    return result\n  }\n\n  const resolvePane = createPaneResolver(memoize)\n\n  const fallbackEditorPanes: RouterPanes = [\n    [\n      {\n        id: `__edit__${options.params.id}`,\n        params: {...omit(options.params, ['id']), type: options.params.type},\n        payload: options.payload,\n      },\n    ],\n  ]\n\n  async function traverse({\n    currentId,\n    flatIndex,\n    intent,\n    params,\n    parent,\n    path,\n    payload,\n    unresolvedPane,\n    levelIndex,\n    structureContext,\n  }: TraverseOptions): Promise<\n    Array<{panes: RouterPanes; depthIndex: number; levelIndex: number}>\n  > {\n    if (!unresolvedPane) return []\n\n    const {id: targetId, type: schemaTypeName, ...otherParams} = params\n    const context: RouterPaneSiblingContext = {\n      id: currentId,\n      splitIndex: 0,\n      parent,\n      path,\n      index: flatIndex,\n      params: {},\n      payload: undefined,\n      structureContext,\n    }\n    const resolvedPane = await firstValueFrom(resolvePane(unresolvedPane, context, flatIndex))\n\n    // if the resolved pane is a document pane and the pane's ID matches then\n    // resolve the intent to the current path\n    if (resolvedPane.type === 'document' && resolvedPane.id === targetId) {\n      return [\n        {\n          panes: [\n            ...path.slice(0, path.length - 1).map((i) => [{id: i}]),\n            [{id: targetId, params: otherParams, payload}],\n          ],\n          depthIndex: path.length,\n          levelIndex,\n        },\n      ]\n    }\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `getIntentState.ts`\n    if (\n      // if the resolve pane's `canHandleIntent` returns true, then resolve\n      resolvedPane.canHandleIntent?.(intent, params, {\n        pane: resolvedPane,\n        index: flatIndex,\n      }) ||\n      // if the pane's `canHandleIntent` did not return true, then match against\n      // this default case. we will resolve the intent if:\n      (resolvedPane.type === 'documentList' &&\n        // 1. the schema type matches (this required for the document to render)\n        resolvedPane.schemaTypeName === schemaTypeName &&\n        // 2. the filter is the default filter.\n        //\n        // NOTE: this case is to prevent false positive matches where the user\n        // has configured a more specific filter for a particular type. In that\n        // case, the user can implement their own `canHandleIntent` function\n        resolvedPane.options.filter === '_type == $type')\n    ) {\n      return [\n        {\n          panes: [\n            // map the current path to router panes\n            ...path.map((id) => [{id}]),\n            // then augment with the intents IDs and params\n            [{id: params.id, params: otherParams, payload}],\n          ],\n          depthIndex: path.length,\n          levelIndex,\n        },\n      ]\n    }\n\n    if (resolvedPane.type === 'list' && resolvedPane.child && resolvedPane.items) {\n      return (\n        await Promise.all(\n          resolvedPane.items.map((item, nextLevelIndex) => {\n            if (item.type === 'divider') return Promise.resolve([])\n\n            return traverse({\n              currentId: item._id || item.id,\n              flatIndex: flatIndex + 1,\n              intent,\n              params,\n              parent: resolvedPane,\n              path: [...path, item.id],\n              payload,\n              unresolvedPane:\n                typeof resolvedPane.child === 'function'\n                  ? memoBind(resolvedPane, 'child')\n                  : resolvedPane.child,\n              levelIndex: nextLevelIndex,\n              structureContext,\n            })\n          })\n        )\n      ).flat()\n    }\n\n    return []\n  }\n\n  const matchingPanes = await traverse({\n    currentId: 'root',\n    flatIndex: 0,\n    levelIndex: 0,\n    intent: options.intent,\n    params: options.params,\n    parent: null,\n    path: [],\n    payload: options.payload,\n    unresolvedPane: options.rootPaneNode,\n    structureContext: options.structureContext,\n  })\n\n  const closestPaneToRoot = matchingPanes.sort((a, b) => {\n    // break ties with the level index\n    if (a.depthIndex === b.depthIndex) return a.levelIndex - b.levelIndex\n    return a.depthIndex - b.depthIndex\n  })[0]\n\n  if (closestPaneToRoot) {\n    return closestPaneToRoot.panes\n  }\n\n  return fallbackEditorPanes\n}\n", "import {useContext} from 'react'\nimport {DeskToolContext} from './DeskToolContext'\nimport {DeskToolContextValue} from './types'\n\nexport function useDeskTool(): DeskToolContextValue {\n  const deskTool = useContext(DeskToolContext)\n\n  if (!deskTool) throw new Error(`DeskTool: missing context value`)\n\n  return deskTool\n}\n", "import {generateHelpUrl} from '@sanity/generate-help-url'\nimport {isEqual} from 'lodash'\nimport {Observable, NEVER, of as observableOf, concat} from 'rxjs'\nimport {switchMap, map, scan, distinctUntilChanged, pairwise, startWith} from 'rxjs/operators'\nimport {\n  DocumentPaneNode,\n  PaneNode,\n  RouterPaneSiblingContext,\n  RouterPanes,\n  RouterPaneSibling,\n  PaneNodeResolver,\n  UnresolvedPaneNode,\n} from '../types'\nimport {StructureContext} from '../structureBuilder'\nimport {assignId} from './assignId'\nimport {createPaneResolver, PaneResolver, PaneResolverMiddleware} from './createPaneResolver'\nimport {memoBind} from './memoBind'\nimport {PaneResolutionError} from './PaneResolutionError'\n\n/**\n * the fallback editor child that is implicitly inserted into the structure tree\n * if the id starts with `__edit__`\n */\nconst fallbackEditorChild: PaneNodeResolver = (nodeId, context): DocumentPaneNode => {\n  const id = nodeId.replace(/^__edit__/, '')\n  const {\n    params,\n    payload,\n    structureContext: {resolveDocumentNode},\n  } = context\n  const {type, template} = params\n\n  if (!type) {\n    throw new Error(\n      `Document type for document with ID ${id} was not provided in the router params.`\n    )\n  }\n\n  let defaultDocumentBuilder = resolveDocumentNode({schemaType: type, documentId: id})\n\n  defaultDocumentBuilder = defaultDocumentBuilder.id('editor').title('Editor')\n\n  if (template) {\n    defaultDocumentBuilder = defaultDocumentBuilder.initialValueTemplate(\n      template,\n      payload as {[key: string]: unknown}\n    )\n  }\n\n  return defaultDocumentBuilder.serialize() as DocumentPaneNode\n}\n\n/**\n * takes in a `RouterPaneSiblingContext` and returns a normalized string\n * representation that can be used for comparisons\n */\nfunction hashContext(context: RouterPaneSiblingContext): string {\n  return `contextHash(${JSON.stringify({\n    id: context.id,\n    parentId: parent && assignId(parent),\n    path: context.path,\n    index: context.index,\n    splitIndex: context.splitIndex,\n    serializeOptionsIndex: context.serializeOptions?.index,\n    serializeOptionsPath: context.serializeOptions?.path,\n  })})`\n}\n\n/**\n * takes in `ResolvedPaneMeta` and returns a normalized string representation\n * that can be used for comparisons\n */\nconst hashResolvedPaneMeta = (meta: ResolvedPaneMeta): string => {\n  const normalized = {\n    type: meta.type,\n    id: meta.routerPaneSibling.id,\n    params: meta.routerPaneSibling.params || {},\n    payload: meta.routerPaneSibling.payload || null,\n    flatIndex: meta.flatIndex,\n    groupIndex: meta.groupIndex,\n    siblingIndex: meta.siblingIndex,\n    path: meta.path,\n    paneNode: meta.type === 'resolvedMeta' ? assignId(meta.paneNode) : null,\n  }\n\n  return `metaHash(${JSON.stringify(normalized)})`\n}\n\n/**\n * Represents one flattened \"router pane\", including the source group and\n * sibling indexes.\n *\n * @see RouterPanes\n */\ninterface FlattenedRouterPane {\n  routerPaneSibling: RouterPaneSibling\n  flatIndex: number\n  groupIndex: number\n  siblingIndex: number\n}\n\n/**\n * The state of the accumulator used to store and manage memo cache state\n */\ninterface CacheState {\n  /**\n   * Holds the memoization results keyed by a combination of `assignId` and a\n   * context hash.\n   */\n  resolvedPaneCache: Map<string, Observable<PaneNode>>\n  /**\n   * Acts as a dictionary that stores cache keys by their flat index. This is\n   * used to clean up the cache between different branches in the pane\n   * structure.\n   *\n   * @see createResolvedPaneNodeStream look inside the `scan` where `wrapFn` is\n   * defined\n   */\n  cacheKeysByFlatIndex: Array<Set<string>>\n  /**\n   * The resulting memoized `PaneResolver` function. This function closes over\n   * the `resolvedPaneCache`.\n   */\n  resolvePane: PaneResolver\n  flattenedRouterPanes: FlattenedRouterPane[]\n}\n\nexport interface CreateResolvedPaneNodeStreamOptions {\n  /**\n   * an input stream of `RouterPanes`\n   * @see RouterPanes\n   */\n  routerPanesStream: Observable<RouterPanes>\n  /**\n   * any `UnresolvedPaneNode` (could be an observable, promise, pane resolver etc)\n   */\n  rootPaneNode: UnresolvedPaneNode\n  /** used primarily for testing */\n  initialCacheState?: CacheState\n\n  structureContext: StructureContext\n}\n\n/**\n * The result of pane resolving\n */\nexport type ResolvedPaneMeta = {\n  groupIndex: number\n  siblingIndex: number\n  flatIndex: number\n  routerPaneSibling: RouterPaneSibling\n  path: string[]\n} & ({type: 'loading'; paneNode: null} | {type: 'resolvedMeta'; paneNode: PaneNode})\n\ninterface ResolvePaneTreeOptions {\n  resolvePane: PaneResolver\n  flattenedRouterPanes: FlattenedRouterPane[]\n  unresolvedPane: UnresolvedPaneNode | undefined\n  parent: PaneNode | null\n  path: string[]\n  structureContext: StructureContext\n}\n\n/**\n * A recursive pane resolving function. Starts at one unresolved pane node and\n * continues until there is no more flattened router panes that can be used as\n * input to the unresolved panes.\n */\nfunction resolvePaneTree({\n  unresolvedPane,\n  flattenedRouterPanes,\n  parent,\n  path,\n  resolvePane,\n  structureContext,\n}: ResolvePaneTreeOptions): Observable<ResolvedPaneMeta[]> {\n  const [current, ...rest] = flattenedRouterPanes\n  const next = rest[0] as FlattenedRouterPane | undefined\n\n  const context: RouterPaneSiblingContext = {\n    id: current.routerPaneSibling.id,\n    splitIndex: current.siblingIndex,\n    parent,\n    path: [...path, current.routerPaneSibling.id],\n    index: current.flatIndex,\n    params: current.routerPaneSibling.params || {},\n    payload: current.routerPaneSibling.payload,\n    structureContext,\n  }\n\n  try {\n    return resolvePane(unresolvedPane, context, current.flatIndex).pipe(\n      // this switch map receives a resolved pane\n      switchMap((paneNode) => {\n        // we can create a `resolvedMeta` type using it\n        const resolvedPaneMeta: ResolvedPaneMeta = {\n          type: 'resolvedMeta',\n          ...current,\n          paneNode: paneNode,\n          path: context.path,\n        }\n\n        // for the other unresolved panes, we can create \"loading panes\"\n        const loadingPanes = rest.map((i, restIndex) => {\n          const loadingPanePath = [\n            ...context.path,\n            ...rest.slice(restIndex).map((_, currentIndex) => `[${i.flatIndex + currentIndex}]`),\n          ]\n\n          const loadingPane: ResolvedPaneMeta = {\n            type: 'loading',\n            path: loadingPanePath,\n            paneNode: null,\n            ...i,\n          }\n\n          return loadingPane\n        })\n\n        if (!rest.length) {\n          return observableOf([resolvedPaneMeta])\n        }\n\n        let nextStream\n\n        if (\n          // the fallback editor case\n          next?.routerPaneSibling.id.startsWith('__edit__')\n        ) {\n          nextStream = resolvePaneTree({\n            unresolvedPane: fallbackEditorChild,\n            flattenedRouterPanes: rest,\n            parent,\n            path: context.path,\n            resolvePane,\n            structureContext,\n          })\n        } else if (current.groupIndex === next?.groupIndex) {\n          // if the next flattened router pane has the same group index as the\n          // current flattened router pane, then the next flattened router pane\n          // belongs to the same group (i.e. it is a split pane)\n          nextStream = resolvePaneTree({\n            unresolvedPane,\n            flattenedRouterPanes: rest,\n            parent,\n            path,\n            resolvePane,\n            structureContext,\n          })\n        } else {\n          // normal children resolving\n          nextStream = resolvePaneTree({\n            unresolvedPane:\n              typeof paneNode.child === 'function'\n                ? (memoBind(paneNode, 'child') as PaneNodeResolver)\n                : paneNode.child,\n            flattenedRouterPanes: rest,\n            parent: paneNode,\n            path: context.path,\n            resolvePane,\n            structureContext,\n          })\n        }\n\n        return concat(\n          // we emit the loading panes first in a concat (this emits immediately)\n          observableOf([resolvedPaneMeta, ...loadingPanes]),\n          // then whenever the next stream is done, the results will be combined.\n          nextStream.pipe(map((nextResolvedPanes) => [resolvedPaneMeta, ...nextResolvedPanes]))\n        )\n      })\n    )\n  } catch (e) {\n    if (e instanceof PaneResolutionError) {\n      if (e.context) {\n        console.warn(\n          `Pane resolution error at index ${e.context.index}${\n            e.context.splitIndex > 0 ? ` for split pane index ${e.context.splitIndex}` : ''\n          }: ${e.message}${e.helpId ? ` - see ${generateHelpUrl(e.helpId)}` : ''}`,\n          e\n        )\n      }\n\n      if (e.helpId === 'structure-item-returned-no-child') {\n        // returning an observable of an empty array will remove loading panes\n        // note: this one intentionally does not throw\n        return observableOf([])\n      }\n    }\n\n    throw e\n  }\n}\n\n/**\n * Takes in a stream of `RouterPanes` and an unresolved root pane and returns\n * a stream of `ResolvedPaneMeta`\n */\nexport function createResolvedPaneNodeStream({\n  routerPanesStream,\n  rootPaneNode,\n  initialCacheState = {\n    cacheKeysByFlatIndex: [],\n    flattenedRouterPanes: [],\n    resolvedPaneCache: new Map(),\n    resolvePane: () => NEVER,\n  },\n  structureContext,\n}: CreateResolvedPaneNodeStreamOptions): Observable<ResolvedPaneMeta[]> {\n  const resolvedPanes$ = routerPanesStream.pipe(\n    // add in implicit \"root\" router pane\n    map((rawRouterPanes) => [[{id: 'root'}], ...rawRouterPanes]),\n    // create flattened router panes\n    map((routerPanes) => {\n      const flattenedRouterPanes: FlattenedRouterPane[] = routerPanes\n        .flatMap((routerPaneGroup, groupIndex) =>\n          routerPaneGroup.map((routerPaneSibling, siblingIndex) => ({\n            routerPaneSibling,\n            groupIndex,\n            siblingIndex,\n          }))\n        )\n        // add in the flat index\n        .map((i, index) => ({...i, flatIndex: index}))\n\n      return flattenedRouterPanes\n    }),\n    // calculate a \"diffIndex\" used for clearing the memo cache\n    startWith([] as FlattenedRouterPane[]),\n    pairwise(),\n    map(([prev, curr]) => {\n      for (let i = 0; i < curr.length; i++) {\n        const prevValue = prev[i]\n        const currValue = curr[i]\n\n        if (!isEqual(prevValue, currValue)) {\n          return {\n            flattenedRouterPanes: curr,\n            diffIndex: i,\n          }\n        }\n      }\n\n      return {\n        flattenedRouterPanes: curr,\n        diffIndex: curr.length,\n      }\n    }),\n    // create the memoized `resolvePane` function and manage the memo cache\n    scan((acc, next) => {\n      const {cacheKeysByFlatIndex, resolvedPaneCache} = acc\n      const {flattenedRouterPanes, diffIndex} = next\n\n      // use the `cacheKeysByFlatIndex` like a dictionary to find cache keys to\n      // and cache keys to delete\n      const beforeDiffIndex = cacheKeysByFlatIndex.slice(0, diffIndex + 1)\n      const afterDiffIndex = cacheKeysByFlatIndex.slice(diffIndex + 1)\n\n      const keysToKeep = new Set(beforeDiffIndex.flatMap((keySet) => Array.from(keySet)))\n      const keysToDelete = afterDiffIndex\n        .flatMap((keySet) => Array.from(keySet))\n        .filter((key) => !keysToKeep.has(key))\n\n      for (const key of keysToDelete) {\n        resolvedPaneCache.delete(key)\n      }\n\n      // create a memoizing pane resolver middleware that utilizes the cache\n      // maintained above. this keeps the cache from growing indefinitely\n      const memoize: PaneResolverMiddleware = (nextFn) => (unresolvedPane, context, flatIndex) => {\n        const key = unresolvedPane && `${assignId(unresolvedPane)}-${hashContext(context)}`\n        const cachedResolvedPane = key && resolvedPaneCache.get(key)\n        if (cachedResolvedPane) return cachedResolvedPane\n\n        const result = nextFn(unresolvedPane, context, flatIndex)\n        if (!key) return result\n\n        const cacheKeySet = cacheKeysByFlatIndex[flatIndex] || new Set()\n        cacheKeySet.add(key)\n        cacheKeysByFlatIndex[flatIndex] = cacheKeySet\n        resolvedPaneCache.set(key, result)\n        return result\n      }\n\n      return {\n        flattenedRouterPanes,\n        cacheKeysByFlatIndex,\n        resolvedPaneCache,\n        resolvePane: createPaneResolver(memoize),\n      }\n    }, initialCacheState),\n    // run the memoized, recursive resolving\n    switchMap(({flattenedRouterPanes, resolvePane}) =>\n      resolvePaneTree({\n        unresolvedPane: rootPaneNode,\n        flattenedRouterPanes,\n        parent: null,\n        path: [],\n        resolvePane,\n        structureContext,\n      })\n    )\n  )\n\n  // after we've created a stream of `ResolvedPaneMeta[]`, we need to clean up\n  // the results to remove unwanted loading panes and prevent unnecessary\n  // emissions\n  return resolvedPanes$.pipe(\n    // this diffs the previous emission with the current one. if there is a new\n    // loading pane at the same position where a previous pane already had a\n    // resolved value (looking at the IDs to compare), then return the previous\n    // pane instead of the loading pane\n    scan(\n      (prev, next) =>\n        next.map((nextPane, index) => {\n          const prevPane = prev[index] as ResolvedPaneMeta | undefined\n          if (!prevPane) return nextPane\n          if (nextPane.type !== 'loading') return nextPane\n\n          if (prevPane.routerPaneSibling.id === nextPane.routerPaneSibling.id) {\n            return prevPane\n          }\n          return nextPane\n        }),\n      [] as ResolvedPaneMeta[]\n    ),\n    // this prevents duplicate emissions\n    distinctUntilChanged((prev, next) => {\n      if (prev.length !== next.length) return false\n\n      for (let i = 0; i < next.length; i++) {\n        const prevValue = prev[i]\n        const nextValue = next[i]\n        if (hashResolvedPaneMeta(prevValue) !== hashResolvedPaneMeta(nextValue)) {\n          return false\n        }\n      }\n\n      return true\n    })\n  )\n}\n", "import {useEffect, useMemo, useState} from 'react'\nimport {ReplaySubject} from 'rxjs'\nimport {map} from 'rxjs/operators'\nimport {LOADING_PANE} from '../constants'\nimport {RouterPanes, PaneNode, RouterPaneGroup} from '../types'\nimport {useDeskTool} from '../useDeskTool'\nimport {createResolvedPaneNodeStream} from './createResolvedPaneNodeStream'\nimport {RouterState, useRouter} from 'sanity/router'\n\ninterface PaneData {\n  active: boolean\n  childItemId: string | null\n  groupIndex: number\n  index: number\n  itemId: string\n  key: string\n  pane: PaneNode | typeof LOADING_PANE\n  params: Record<string, string | undefined>\n  path: string\n  payload: unknown\n  selected: boolean\n  siblingIndex: number\n}\n\ninterface Panes {\n  paneDataItems: PaneData[]\n  routerPanes: RouterPanes\n  resolvedPanes: (PaneNode | typeof LOADING_PANE)[]\n}\n\nfunction useRouterPanesStream() {\n  const routerStateSubject = useMemo(() => new ReplaySubject<RouterState>(1), [])\n  const routerPanes$ = useMemo(\n    () =>\n      routerStateSubject\n        .asObservable()\n        .pipe(map((_routerState) => (_routerState?.panes || []) as RouterPanes)),\n    [routerStateSubject]\n  )\n  const {state: routerState} = useRouter()\n  useEffect(() => {\n    routerStateSubject.next(routerState)\n  }, [routerState, routerStateSubject])\n\n  return routerPanes$\n}\n\nexport function useResolvedPanes(): Panes {\n  // used to propagate errors from async effect. throwing inside of the render\n  // will bubble the error to react where it can be picked up by standard error\n  // boundaries\n  const [error, setError] = useState<unknown>()\n  if (error) throw error\n\n  const {structureContext, rootPaneNode} = useDeskTool()\n\n  const [data, setData] = useState<Panes>({\n    paneDataItems: [],\n    resolvedPanes: [],\n    routerPanes: [],\n  })\n\n  const routerPanesStream = useRouterPanesStream()\n\n  useEffect(() => {\n    const resolvedPanes$ = createResolvedPaneNodeStream({\n      rootPaneNode,\n      routerPanesStream,\n      structureContext,\n    }).pipe(\n      map((resolvedPanes) => {\n        const routerPanes = resolvedPanes.reduce<RouterPanes>((acc, next) => {\n          const currentGroup = acc[next.groupIndex] || []\n          currentGroup[next.siblingIndex] = next.routerPaneSibling\n          acc[next.groupIndex] = currentGroup\n          return acc\n        }, [])\n\n        const groupsLen = routerPanes.length\n\n        const paneDataItems = resolvedPanes.map((pane) => {\n          const {groupIndex, flatIndex, siblingIndex, routerPaneSibling, path} = pane\n          const itemId = routerPaneSibling.id\n          const nextGroup = routerPanes[groupIndex + 1] as RouterPaneGroup | undefined\n\n          const paneDataItem: PaneData = {\n            active: groupIndex === groupsLen - 2,\n            childItemId: nextGroup?.[0].id ?? null,\n            index: flatIndex,\n            itemId: routerPaneSibling.id,\n            groupIndex,\n            key: `${\n              pane.type === 'loading' ? 'unknown' : pane.paneNode.id\n            }-${itemId}-${siblingIndex}`,\n            pane: pane.type === 'loading' ? LOADING_PANE : pane.paneNode,\n            params: routerPaneSibling.params || {},\n            path: path.join(';'),\n            payload: routerPaneSibling.payload,\n            selected: flatIndex === resolvedPanes.length - 1,\n            siblingIndex,\n          }\n\n          return paneDataItem\n        })\n\n        return {\n          paneDataItems,\n          routerPanes,\n          resolvedPanes: paneDataItems.map((pane) => pane.pane),\n        }\n      })\n    )\n\n    const subscription = resolvedPanes$.subscribe({\n      next: (result) => setData(result),\n      error: (e) => setError(e),\n    })\n\n    return () => subscription.unsubscribe()\n  }, [rootPaneNode, routerPanesStream, structureContext])\n\n  return data\n}\n", "import {Box, Card, Flex, Spinner, Text} from '@sanity/ui'\nimport React, {useEffect} from 'react'\nimport {RouterPanes} from '../../../types'\nimport {Delay} from '../../Delay'\nimport {useRouter} from 'sanity/router'\n\ninterface RedirectProps {\n  panes: RouterPanes\n}\n\nexport function Redirect({panes}: RedirectProps) {\n  const {navigate} = useRouter()\n\n  useEffect(() => {\n    // Navigates to passed router panes state on mount\n    navigate({panes}, {replace: true})\n  }, [navigate, panes])\n\n  return (\n    <Card height=\"fill\">\n      <Delay ms={300}>\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Spinner muted />\n          <Box marginTop={3}>\n            <Text muted size={1}>\n              Redirecting…\n            </Text>\n          </Box>\n        </Flex>\n      </Delay>\n    </Card>\n  )\n}\n", "import {uuid} from '@sanity/uuid'\nimport {first} from 'rxjs/operators'\nimport {firstValueFrom, Observable} from 'rxjs'\nimport {PaneResolutionError} from '../../../structureResolvers'\nimport {getPublishedId, DocumentStore} from 'sanity'\n\nexport function removeDraftPrefix(documentId: string): string {\n  const publishedId = getPublishedId(documentId)\n\n  if (publishedId !== documentId) {\n    console.warn(\n      'Removed unexpected draft id in document link: All links to documents should have the ' +\n        '`drafts.`-prefix removed and something appears to have made an intent link to `%s`',\n      documentId\n    )\n  }\n\n  return publishedId\n}\n\nexport async function ensureDocumentIdAndType(\n  documentStore: DocumentStore,\n  id: string | undefined,\n  type: string | undefined\n): Promise<{id: string; type: string}> {\n  if (id && type) return {id, type}\n  if (!id && type) return {id: uuid(), type}\n  if (id && !type) {\n    const resolvedType = await firstValueFrom(\n      documentStore.resolveTypeForDocument(id) as Observable<string>\n    )\n\n    return {id, type: resolvedType}\n  }\n\n  throw new PaneResolutionError({\n    message: 'Neither document `id` or `type` was provided when trying to resolve intent.',\n  })\n}\n", "import {Box, Card, Flex, Spinner, Text} from '@sanity/ui'\nimport React, {useEffect, useState} from 'react'\nimport {resolveIntent} from '../../../structureResolvers'\nimport {RouterPanes} from '../../../types'\nimport {useDeskTool} from '../../../useDeskTool'\nimport {Delay} from '../../Delay'\nimport {Redirect} from './Redirect'\nimport {ensureDocumentIdAndType} from './utils'\nimport {useDocumentStore, useUnique} from 'sanity'\n\nexport interface IntentResolverProps {\n  intent: string\n  params: Record<string, unknown> // {type: string; id: string; [key: string]: string | undefined}\n  payload: unknown\n}\n\n/**\n * A component that receives an intent from props and redirects to the resolved\n * intent location (while showing a loading spinner during the process)\n */\nexport function IntentResolver({\n  intent,\n  params: paramsProp = {},\n  payload: payloadProp,\n}: IntentResolverProps) {\n  const {rootPaneNode, structureContext} = useDeskTool()\n  const documentStore = useDocumentStore()\n  const params = useUnique(paramsProp)\n  const payload = useUnique(payloadProp)\n  const [nextRouterPanes, setNextRouterPanes] = useState<RouterPanes | null>(null)\n  const [error, setError] = useState<unknown>(null)\n  const idParam = typeof params.id === 'string' ? params.id : undefined\n  const typeParam = typeof params.type === 'string' ? params.type : undefined\n\n  useEffect(() => {\n    const cancelledRef = {current: false}\n\n    async function getNextRouterPanes() {\n      const {id, type} = await ensureDocumentIdAndType(documentStore, idParam, typeParam)\n\n      return resolveIntent({\n        intent,\n        params: {...params, id, type},\n        payload,\n        rootPaneNode,\n        structureContext,\n      })\n    }\n\n    getNextRouterPanes()\n      .then((result) => {\n        if (!cancelledRef.current) {\n          setNextRouterPanes(result)\n        }\n      })\n      .catch(setError)\n\n    return () => {\n      cancelledRef.current = true\n    }\n  }, [documentStore, idParam, intent, params, payload, rootPaneNode, structureContext, typeParam])\n\n  // throwing here bubbles the error up to the error boundary inside of the\n  // `DeskToolRoot` component\n  if (error) throw error\n  if (nextRouterPanes) return <Redirect panes={nextRouterPanes} />\n\n  return (\n    <Card height=\"fill\">\n      <Delay ms={300}>\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Spinner muted />\n          <Box marginTop={3}>\n            <Text align=\"center\" muted size={1}>\n              Loading…\n            </Text>\n          </Box>\n        </Flex>\n      </Delay>\n    </Card>\n  )\n}\n", "import {generateHelpUrl} from '@sanity/generate-help-url'\nimport {Box, Button, Card, Code, Container, Heading, Label, Stack, Text} from '@sanity/ui'\nimport React, {useCallback} from 'react'\nimport styled from 'styled-components'\nimport {SyncIcon} from '@sanity/icons'\nimport {SerializeError} from '../../structureBuilder'\nimport {PaneResolutionError} from '../../structureResolvers'\n\nconst PathSegment = styled.span`\n  &:not(:last-child)::after {\n    content: ' ➝ ';\n    opacity: 0.5;\n  }\n`\n\nfunction formatStack(stack: string) {\n  return (\n    stack\n      // Prettify builder functions\n      .replace(/\\(\\.\\.\\.\\)\\./g, '(...)\\n  .')\n      // Remove webpack cruft from function names\n      .replace(/__WEBPACK_IMPORTED_MODULE_\\d+_+/g, '')\n      // Remove default export postfix from function names\n      .replace(/___default\\./g, '.')\n      // Replace full host path, leave only path to JS-file\n      .replace(new RegExp(` \\\\(https?:\\\\/\\\\/${window.location.host}`, 'g'), ' (')\n  )\n}\n\ninterface StructureErrorProps {\n  error: unknown\n}\n\nexport function StructureError({error}: StructureErrorProps) {\n  if (!(error instanceof PaneResolutionError)) {\n    throw error\n  }\n  const {cause} = error\n\n  // Serialize errors are well-formatted and should be readable, in these cases a stack trace is\n  // usually not helpful. Build errors in dev (with HMR) usually also contains a bunch of garbage\n  // instead of an actual error message, so make sure we show the message in these cases as well\n  const stack = cause?.stack || error.stack\n  const showStack =\n    stack && !(cause instanceof SerializeError) && !error.message.includes('Module build failed:')\n\n  const path = cause instanceof SerializeError ? cause.path : []\n  const helpId = (cause instanceof SerializeError && cause.helpId) || error.helpId\n\n  const handleReload = useCallback(() => {\n    window.location.reload()\n  }, [])\n\n  return (\n    <Card height=\"fill\" overflow=\"auto\" padding={4} sizing=\"border\" tone=\"critical\">\n      <Container>\n        <Heading as=\"h2\">Encountered an error while reading structure</Heading>\n\n        <Card marginTop={4} padding={4} radius={2} overflow=\"auto\" shadow={1} tone=\"inherit\">\n          {path.length > 0 && (\n            <Stack space={2}>\n              <Label>Structure path</Label>\n              <Code>\n                {/* TODO: it seems like the path is off by one and includes */}\n                {/* `root` twice  */}\n                {path.slice(1).map((segment, i) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <PathSegment key={`${segment}-${i}`}>{segment}</PathSegment>\n                ))}\n              </Code>\n            </Stack>\n          )}\n\n          <Stack marginTop={4} space={2}>\n            <Label>Error</Label>\n            <Code>{showStack ? formatStack(stack) : error.message}</Code>\n          </Stack>\n\n          {helpId && (\n            <Box marginTop={4}>\n              <Text>\n                <a href={generateHelpUrl(helpId)} rel=\"noopener noreferrer\" target=\"_blank\">\n                  View documentation\n                </a>\n              </Text>\n            </Box>\n          )}\n\n          <Box marginTop={4}>\n            <Button text=\"Reload\" icon={SyncIcon} tone=\"primary\" onClick={handleReload} />\n          </Box>\n        </Card>\n      </Container>\n    </Card>\n  )\n}\n", "import {Box, Text} from '@sanity/ui'\nimport React from 'react'\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\nimport {isRecord} from 'sanity'\n\ninterface UnknownPaneProps {\n  isSelected: boolean\n  pane: unknown\n  paneKey: string\n}\n\n/**\n * @internal\n */\nexport function UnknownPane(props: UnknownPaneProps) {\n  const {isSelected, pane, paneKey} = props\n  const type = (isRecord(pane) && pane.type) || null\n\n  return (\n    <Pane id={paneKey} selected={isSelected}>\n      <PaneHeader title=\"Unknown pane type\" />\n      <PaneContent>\n        <Box padding={4}>\n          {typeof type === 'string' ? (\n            <Text as=\"p\" muted>\n              Structure item of type <code>{type}</code> is not a known entity.\n            </Text>\n          ) : (\n            <Text as=\"p\" muted>\n              Structure item is missing required <code>type</code> property.\n            </Text>\n          )}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n", "import {Observable, of, merge} from 'rxjs'\nimport {mapTo, delay} from 'rxjs/operators'\nimport {isDev} from 'sanity'\n\n/**\n * @internal\n */\nexport function getWaitMessages(path: string[]): Observable<string> {\n  const thresholds = [\n    {ms: 300, message: 'Loading…'},\n    {ms: 5000, message: 'Still loading…'},\n  ]\n\n  if (isDev) {\n    const message = [\n      'Check console for errors?',\n      'Is your observable/promise resolving?',\n      path.length > 0 ? `Structure path: ${path.join(' ➝ ')}` : '',\n    ]\n\n    thresholds.push({\n      ms: 10000,\n      message: message.join('\\n'),\n    })\n  }\n\n  const src = of(null)\n\n  return merge(...thresholds.map(({ms, message}) => src.pipe(mapTo(message), delay(ms))))\n}\n", "import {Box, CardTone, Flex, Spinner, Text, _raf2} from '@sanity/ui'\nimport React, {memo, useMemo, useState, useEffect} from 'react'\nimport {Observable} from 'rxjs'\nimport styled from 'styled-components'\nimport {Delay} from '../../components/Delay'\nimport {Pane, PaneContent} from '../../components/pane'\nimport {getWaitMessages} from './getWaitMessages'\n\ninterface LoadingPaneProps {\n  delay?: number\n  flex?: number\n  message?: string | ((p: string[]) => string | Observable<string>)\n  minWidth?: number\n  paneKey: string\n  path?: string\n  selected?: boolean\n  title?: string\n  tone?: CardTone\n}\n\nconst DELAY = false\nconst DEFAULT_MESSAGE = 'Loading…'\n\nconst Content = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n`\n\n/**\n * @internal\n */\nexport const LoadingPane = memo((props: LoadingPaneProps) => {\n  const {\n    delay = 300,\n    flex,\n    message: messageProp = getWaitMessages,\n    minWidth,\n    paneKey,\n    path,\n    selected,\n    title,\n    tone,\n  } = props\n\n  const resolvedMessage = useMemo(() => {\n    if (typeof messageProp === 'function') {\n      return messageProp(path ? path.split(';') : [])\n    }\n\n    return messageProp\n  }, [messageProp, path])\n\n  const [currentMessage, setCurrentMessage] = useState<string | null>(() => {\n    if (typeof resolvedMessage === 'string') return resolvedMessage\n    return DEFAULT_MESSAGE\n  })\n\n  useEffect(() => {\n    if (typeof resolvedMessage !== 'object') return undefined\n    if (typeof resolvedMessage.subscribe === 'function') return undefined\n\n    const sub = resolvedMessage.subscribe(setCurrentMessage)\n\n    return () => sub.unsubscribe()\n  }, [resolvedMessage])\n\n  const [contentElement, setContentElement] = useState<HTMLDivElement | null>(null)\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    if (!contentElement) return undefined\n    return _raf2(() => setMounted(true))\n  }, [contentElement])\n\n  const content = (\n    <Content\n      align=\"center\"\n      data-mounted={mounted ? '' : undefined}\n      direction=\"column\"\n      height=\"fill\"\n      justify=\"center\"\n      ref={setContentElement}\n    >\n      <Spinner muted />\n\n      {(title || currentMessage) && (\n        <Box marginTop={3}>\n          <Text align=\"center\" muted size={1}>\n            {title || currentMessage}\n          </Text>\n        </Box>\n      )}\n    </Content>\n  )\n\n  return (\n    <Pane flex={flex} id={paneKey} minWidth={minWidth} selected={selected} tone={tone}>\n      <PaneContent>{DELAY ? <Delay ms={delay}>{content}</Delay> : content}</PaneContent>\n    </Pane>\n  )\n})\n\nLoadingPane.displayName = 'LoadingPane'\n", "import React, {memo, lazy, Suspense} from 'react'\nimport {isEqual} from 'lodash'\nimport {PaneNode} from '../types'\nimport {PaneRouterProvider} from '../components/paneRouter'\nimport {UnknownPane} from './unknown'\nimport {LoadingPane} from './loading'\n\ninterface DeskToolPaneProps {\n  active: boolean\n  childItemId: string | null\n  groupIndex: number\n  index: number\n  itemId: string\n  pane: PaneNode\n  paneKey: string\n  params: Record<string, string | undefined>\n  payload: unknown\n  selected: boolean\n  siblingIndex: number\n}\n\n// TODO: audit this creates separate chunks\nconst paneMap = {\n  component: lazy(() => import('./userComponent')),\n  document: lazy(() => import('./document')),\n  documentList: lazy(() => import('./documentList')),\n  list: lazy(() => import('./list')),\n}\n\n/**\n * NOTE: The same pane might appear multiple times (split pane), so use index as tiebreaker\n *\n * @internal\n */\nexport const DeskToolPane = memo(\n  function DeskToolPane(props: DeskToolPaneProps) {\n    const {\n      active,\n      childItemId,\n      groupIndex,\n      index,\n      itemId,\n      pane,\n      paneKey,\n      params,\n      payload,\n      selected,\n      siblingIndex,\n    } = props\n\n    const PaneComponent = paneMap[pane.type] || UnknownPane\n\n    return (\n      <PaneRouterProvider\n        flatIndex={index}\n        index={groupIndex}\n        params={params}\n        payload={payload}\n        siblingIndex={siblingIndex}\n      >\n        <Suspense fallback={<LoadingPane paneKey={paneKey} />}>\n          <PaneComponent\n            childItemId={childItemId || ''}\n            index={index}\n            itemId={itemId}\n            isActive={active}\n            isSelected={selected}\n            paneKey={paneKey}\n            // @ts-expect-error TS doesn't know how to handle this intersection\n            pane={pane}\n          />\n        </Suspense>\n      </PaneRouterProvider>\n    )\n  },\n  (\n    {params: prevParams = {}, payload: prevPayload = null, ...prev},\n    {params: nextParams = {}, payload: nextPayload = null, ...next}\n  ) => {\n    // deeply compare these objects (it's okay, they're small)\n    if (!isEqual(prevParams, nextParams)) return false\n    if (!isEqual(prevPayload, nextPayload)) return false\n\n    const keys = new Set([...Object.keys(prev), ...Object.keys(next)]) as Set<\n      keyof typeof next | keyof typeof prev\n    >\n\n    // then shallow equal the rest\n    for (const key of keys) {\n      if (prev[key] !== next[key]) return false\n    }\n\n    return true\n  }\n)\n", "import React from 'react'\nimport {Box, CardTone} from '@sanity/ui'\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\n\n/**\n * @internal\n */\nexport function ErrorPane(props: {\n  children?: React.ReactNode\n  flex?: number\n  minWidth?: number\n  paneKey: string\n  title?: React.ReactNode\n  tone?: CardTone\n}) {\n  const {children, flex, minWidth, paneKey, title = 'Error', tone = 'critical'} = props\n\n  return (\n    <Pane flex={flex} id={paneKey} minWidth={minWidth} tone={tone}>\n      <PaneHeader title={title} />\n      <PaneContent overflow=\"auto\">\n        <Box paddingX={4} paddingY={5}>\n          {children}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n", "import {useToast} from '@sanity/ui'\nimport React, {memo, useEffect, useRef} from 'react'\nimport {useDocumentPane} from './useDocumentPane'\nimport {useDocumentOperationEvent} from 'sanity'\n\nfunction getOpErrorTitle(op: string): string {\n  if (op === 'delete') {\n    return `An error occurred while attempting to delete this document.\n      This usually means that there are other documents that refers to it.`\n  }\n  if (op === 'unpublish') {\n    return `An error occurred while attempting to unpublish this document.\n      This usually means that there are other documents that refers to it.`\n  }\n  return `An error occurred during ${op}`\n}\n\nfunction getOpSuccessTitle(op: string): string {\n  if (op === 'publish') {\n    return `The document was published`\n  }\n  if (op === 'unpublish') {\n    return `The document was unpublished. A draft has been created from the latest published version.`\n  }\n  if (op === 'discardChanges') {\n    return `All changes since last publish has now been discarded. The discarded draft can still be recovered from history`\n  }\n  if (op === 'delete') {\n    return `This document was deleted. It can still be recovered from history and if you continue editing it will be recreated.`\n  }\n  return `Successfully performed ${op} on document`\n}\n\nconst IGNORE_OPS = ['patch', 'commit']\n\nexport const DocumentOperationResults = memo(function DocumentOperationResults() {\n  const {push: pushToast} = useToast()\n  const {documentId, documentType} = useDocumentPane()\n  const event: any = useDocumentOperationEvent(documentId, documentType)\n  const prevEvent = useRef(event)\n\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    if (event.type === 'error') {\n      pushToast({\n        closable: true,\n        duration: 30000, // 30s\n        status: 'error',\n        title: getOpErrorTitle(event.op),\n        description: (\n          <details>\n            <summary>Details</summary>\n            {event.error.message}\n          </details>\n        ),\n      })\n    }\n\n    if (event.type === 'success' && !IGNORE_OPS.includes(event.op)) {\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: getOpSuccessTitle(event.op),\n      })\n    }\n\n    prevEvent.current = event\n  }, [event, pushToast])\n\n  return null\n})\n", "import {EarthAmericasIcon, BinaryDocumentIcon, RestoreIcon} from '@sanity/icons'\nimport {DeskToolFeatures, PaneMenuItem} from '../../types'\n\ninterface Params {\n  features: DeskToolFeatures\n  changesOpen: boolean\n  hasValue: boolean\n  previewUrl?: string | null\n}\n\nconst getHistoryMenuItem = (params: Params): PaneMenuItem | null => {\n  const {features, hasValue, changesOpen} = params\n\n  if (!features.reviewChanges) return null\n\n  return {\n    action: 'reviewChanges',\n    title: 'Review changes',\n    icon: RestoreIcon,\n    isDisabled: changesOpen || !hasValue,\n  }\n}\n\nconst getInspectItem = ({hasValue}: Params): PaneMenuItem => ({\n  action: 'inspect',\n  title: 'Inspect',\n  icon: BinaryDocumentIcon,\n  isDisabled: !hasValue,\n  shortcut: 'Ctrl+Alt+I',\n})\n\nexport const getProductionPreviewItem = ({previewUrl}: Params): PaneMenuItem | null => {\n  if (!previewUrl) return null\n\n  return {\n    action: 'production-preview',\n    title: 'Open preview',\n    icon: EarthAmericasIcon,\n    shortcut: 'Ctrl+Alt+O',\n  }\n}\n\nexport const getMenuItems = (params: Params): PaneMenuItem[] => {\n  const items = [getProductionPreviewItem, getHistoryMenuItem, getInspectItem]\n    .filter(Boolean)\n    .map((fn) => fn(params))\n\n  return items.filter((i) => i !== null) as PaneMenuItem[]\n}\n", "import {useEffect, useState} from 'react'\nimport {SanityDocument} from '@sanity/types'\nimport {useAsObservable} from 'react-rx'\nimport {debounceTime, switchMap, catchError} from 'rxjs/operators'\nimport {from, of} from 'rxjs'\nimport {useSource, isRecord} from 'sanity'\n\nconst isSanityDocument = (value: unknown): value is SanityDocument =>\n  isRecord(value) && typeof value._id === 'string' && typeof value._type === 'string'\n\nexport function usePreviewUrl(value: Partial<SanityDocument> | undefined): string | undefined {\n  const [previewUrl, setPreviewUrl] = useState<string | undefined>(undefined)\n  const [error, setError] = useState<unknown>(null)\n  const {resolveProductionUrl} = useSource().document\n  // @todo refactor out of useAsObservable, and instead use `of() + useMemoObservable` like we did for `useLoadableFromCreateLoadable`\n  const value$ = useAsObservable(value)\n\n  if (error) throw error\n\n  useEffect(() => {\n    value$\n      .pipe(\n        // this so that the preview URL isn't fetched on every keystroke\n        debounceTime(500),\n        switchMap((document) =>\n          isSanityDocument(document) ? from(resolveProductionUrl({document})) : of(undefined)\n        ),\n        catchError((e) => {\n          const message = isRecord(e) && typeof e.message === 'string' ? e.message : 'Unknown error'\n          throw new Error(`An error was thrown while trying to get your preview url: ${message}`)\n        })\n      )\n      .subscribe({\n        next: setPreviewUrl,\n        error: setError,\n      })\n  }, [resolveProductionUrl, value$])\n\n  return previewUrl\n}\n", "import {Template} from 'sanity'\n\ninterface InitialValueOptions {\n  documentType: string\n  panePayload?: unknown\n  templateName?: string\n  templateParams?: Record<string, unknown>\n  urlTemplate?: string\n}\n\n/**\n * @internal\n */\nexport function getInitialValueTemplateOpts(\n  templates: Template[],\n  opts: InitialValueOptions\n): {templateName: string; templateParams: Record<string, unknown>} {\n  const payload = opts.panePayload || {}\n  const structureNodeTemplate = opts.templateName\n\n  if (opts.urlTemplate && structureNodeTemplate && structureNodeTemplate !== opts.urlTemplate) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Conflicting templates: URL says \"${opts.urlTemplate}\", structure node says \"${structureNodeTemplate}\". Using \"${structureNodeTemplate}\".`\n    )\n  }\n\n  const template = structureNodeTemplate || opts.urlTemplate\n  const typeTemplates = templates.filter((t) => t.schemaType === opts.documentType)\n\n  const templateParams = {\n    ...opts.templateParams,\n    ...(typeof payload === 'object' ? payload || {} : {}),\n  }\n\n  let templateName = template\n\n  // If we have not specified a specific template, and we only have a single\n  // template available for a schema type, use it\n  if (!template && typeTemplates.length === 1) {\n    templateName = typeTemplates[0].id\n  }\n\n  return {templateName: templateName!, templateParams}\n}\n", "import React, {memo, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {ObjectSchemaType, Path, SanityDocument, SanityDocumentLike} from '@sanity/types'\nimport {omit} from 'lodash'\nimport {useToast} from '@sanity/ui'\nimport {fromString as pathFromString} from '@sanity/util/paths'\nimport isHotkey from 'is-hotkey'\nimport {useMemoObservable} from 'react-rx'\nimport {isActionEnabled} from '@sanity/schema/_internal'\nimport {usePaneRouter} from '../../components'\nimport {PaneMenuItem} from '../../types'\nimport {useDeskTool} from '../../useDeskTool'\nimport {DocumentPaneContext, DocumentPaneContextValue} from './DocumentPaneContext'\nimport {getMenuItems} from './menuItems'\nimport {DocumentPaneProviderProps} from './types'\nimport {usePreviewUrl} from './usePreviewUrl'\nimport {getInitialValueTemplateOpts} from './getInitialValueTemplateOpts'\nimport {\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  DocumentPresence,\n  PatchEvent,\n  StateTree,\n  toMutationPatches,\n  getExpandOperations,\n  getPublishedId,\n  isDev,\n  setAtPath,\n  useClient,\n  useConnectionState,\n  useDocumentOperation,\n  useEditState,\n  useFormState,\n  useHistoryStore,\n  useInitialValue,\n  usePresenceStore,\n  useSchema,\n  useSource,\n  useTemplates,\n  useUnique,\n  useValidationStatus,\n  getDraftId,\n  useDocumentValuePermissions,\n} from 'sanity'\n\nconst emptyObject = {} as Record<string, string | undefined>\n\n/**\n * @internal\n */\n// eslint-disable-next-line complexity, max-statements\nexport const DocumentPaneProvider = memo((props: DocumentPaneProviderProps) => {\n  const {children, index, pane, paneKey} = props\n  const client = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n  const schema = useSchema()\n  const templates = useTemplates()\n  const {\n    actions: documentActions,\n    badges: documentBadges,\n    unstable_languageFilter: languageFilterResolver,\n  } = useSource().document\n  const historyStore = useHistoryStore()\n  const presenceStore = usePresenceStore()\n  const paneRouter = usePaneRouter()\n  const {features} = useDeskTool()\n  const {push: pushToast} = useToast()\n  const {options, menuItemGroups, title = null, views: viewsProp = []} = pane\n  const paneOptions = useUnique(options)\n  const documentIdRaw = paneOptions.id\n  const documentId = getPublishedId(documentIdRaw)\n  const documentType = options.type\n  const paneParams = useUnique(paneRouter.params)\n  const panePayload = useUnique(paneRouter.payload)\n  const {templateName, templateParams} = useMemo(\n    () =>\n      getInitialValueTemplateOpts(templates, {\n        documentType,\n        templateName: paneOptions.template,\n        templateParams: paneOptions.templateParameters,\n        panePayload,\n        urlTemplate: paneParams?.template,\n      }),\n    [documentType, paneOptions, paneParams, panePayload, templates]\n  )\n  const initialValueRaw = useInitialValue({\n    documentId,\n    documentType,\n    templateName,\n    templateParams,\n  })\n  const initialValue = useUnique(initialValueRaw)\n  const {patch}: any = useDocumentOperation(documentId, documentType)\n  const editState = useEditState(documentId, documentType)\n  const {validation: validationRaw} = useValidationStatus(documentId, documentType)\n  const connectionState = useConnectionState(documentId, documentType)\n  const schemaType = schema.get(documentType) as ObjectSchemaType | undefined\n  const value: SanityDocumentLike = editState?.draft || editState?.published || initialValue.value\n\n  // Resolve document actions\n  const actions = useMemo(\n    () => documentActions({schemaType: documentType, documentId}),\n    [documentActions, documentId, documentType]\n  )\n\n  // Resolve document badges\n  const badges = useMemo(\n    () => documentBadges({schemaType: documentType, documentId}),\n    [documentBadges, documentId, documentType]\n  )\n\n  // Resolve document language filter\n  const languageFilter = useMemo(\n    () => languageFilterResolver({schemaType: documentType, documentId}),\n    [documentId, documentType, languageFilterResolver]\n  )\n\n  const validation = useUnique(validationRaw)\n  const views = useUnique(viewsProp)\n  const params = paneRouter.params || emptyObject\n  const [focusPath, setFocusPath] = useState<Path>(() =>\n    params.path ? pathFromString(params.path) : []\n  )\n  const activeViewId = params.view || (views[0] && views[0].id) || null\n  const timeline = useMemo(\n    () => historyStore.getTimeline({publishedId: documentId, enableTrace: isDev}),\n    [documentId, historyStore]\n  )\n  const [timelineMode, setTimelineMode] = useState<'since' | 'rev' | 'closed'>('closed')\n  // NOTE: this emits sync so can never be null\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const {historyController} = useMemoObservable(\n    () => historyStore.getTimelineController({client, documentId, documentType, timeline}),\n    [client, documentId, documentType, timeline]\n  )!\n\n  // @todo: this will now happen on each render, but should be refactored so it happens only when\n  // the `rev`, `since` or `historyController` values change.\n  historyController.setRange(params.since || null, params.rev || null)\n  const changesOpen = historyController.changesPanelActive()\n\n  // TODO: this may cause a lot of churn. May be a good idea to prevent these\n  // requests unless the menu is open somehow\n  const previewUrl = usePreviewUrl(value)\n\n  const [presence, setPresence] = useState<DocumentPresence[]>([])\n  useEffect(() => {\n    const subscription = presenceStore.documentPresence(documentId).subscribe((nextPresence) => {\n      setPresence(nextPresence)\n    })\n    return () => {\n      subscription.unsubscribe()\n    }\n  }, [documentId, presenceStore])\n\n  const hasValue = Boolean(value)\n  const menuItems = useMemo(\n    () => getMenuItems({features, hasValue, changesOpen, previewUrl}),\n    [features, hasValue, changesOpen, previewUrl]\n  )\n  const inspectOpen = params.inspect === 'on'\n  const compareValue: Partial<SanityDocument> | null = changesOpen\n    ? historyController.sinceAttributes()\n    : editState?.published || null\n  const ready = connectionState === 'connected' && editState.ready\n  const viewOlderVersion = historyController.onOlderRevision()\n\n  const displayed: Partial<SanityDocument> | undefined = useMemo(\n    () =>\n      viewOlderVersion\n        ? historyController.displayed() || {_id: value._id, _type: value._type}\n        : value,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [historyController, params.rev, params.since, value, viewOlderVersion]\n  )\n\n  const setTimelineRange = useCallback(\n    (newSince: string, newRev: string | null) => {\n      paneRouter.setParams({\n        ...paneRouter.params,\n        since: newSince,\n        rev: newRev || undefined,\n      })\n    },\n    [paneRouter]\n  )\n\n  const handleFocus = useCallback(\n    (nextFocusPath: Path) => {\n      setFocusPath(nextFocusPath)\n      presenceStore.setLocation([\n        {\n          type: 'document',\n          documentId,\n          path: nextFocusPath,\n          lastActiveAt: new Date().toISOString(),\n        },\n      ])\n    },\n    [documentId, presenceStore, setFocusPath]\n  )\n\n  const handleBlur = useCallback(\n    (blurredPath: Path) => {\n      setFocusPath([])\n      // note: we're deliberately not syncing presence here since it would make the user avatar disappear when a\n      // user clicks outside a field without focusing another one\n    },\n    [setFocusPath]\n  )\n\n  const patchRef = useRef<(event: PatchEvent) => void>(() => {\n    throw new Error('Nope')\n  })\n\n  patchRef.current = (event: PatchEvent) => {\n    patch.execute(toMutationPatches(event.patches), initialValue.value)\n  }\n\n  const handleChange = useCallback((event: any) => patchRef.current(event), [])\n\n  const handleHistoryClose = useCallback(() => {\n    paneRouter.setParams({...params, since: undefined})\n  }, [paneRouter, params])\n\n  const handleHistoryOpen = useCallback(() => {\n    paneRouter.setParams({...params, since: '@lastPublished'})\n  }, [paneRouter, params])\n\n  const handlePaneClose = useCallback(() => paneRouter.closeCurrent(), [paneRouter])\n\n  const handlePaneSplit = useCallback(() => paneRouter.duplicateCurrent(), [paneRouter])\n\n  const toggleInspect = useCallback(\n    (toggle = !inspectOpen) => {\n      if (toggle) {\n        paneRouter.setParams({...params, inspect: 'on'})\n      } else {\n        paneRouter.setParams(omit(params, 'inspect'))\n      }\n    },\n    [inspectOpen, paneRouter, params]\n  )\n\n  const handleMenuAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'production-preview' && previewUrl) {\n        window.open(previewUrl)\n        return true\n      }\n\n      if (item.action === 'inspect') {\n        toggleInspect(true)\n        return true\n      }\n\n      if (item.action === 'reviewChanges') {\n        handleHistoryOpen()\n        return true\n      }\n\n      return false\n    },\n    [handleHistoryOpen, previewUrl, toggleInspect]\n  )\n\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      for (const item of menuItems) {\n        if (item.shortcut) {\n          if (isHotkey(item.shortcut, event)) {\n            event.preventDefault()\n            event.stopPropagation()\n            handleMenuAction(item)\n            return\n          }\n        }\n      }\n    },\n    [handleMenuAction, menuItems]\n  )\n\n  const handleInspectClose = useCallback(() => toggleInspect(false), [toggleInspect])\n\n  const [openPath, onSetOpenPath] = useState<Path>([])\n  const [fieldGroupState, onSetFieldGroupState] = useState<StateTree<string>>()\n  const [collapsedPaths, onSetCollapsedPath] = useState<StateTree<boolean>>()\n  const [collapsedFieldSets, onSetCollapsedFieldSets] = useState<StateTree<boolean>>()\n\n  const handleOnSetCollapsedPath = useCallback((path: Path, collapsed: boolean) => {\n    onSetCollapsedPath((prevState) => setAtPath(prevState, path, collapsed))\n  }, [])\n\n  const handleOnSetCollapsedFieldSet = useCallback((path: Path, collapsed: boolean) => {\n    onSetCollapsedFieldSets((prevState) => setAtPath(prevState, path, collapsed))\n  }, [])\n\n  const handleSetActiveFieldGroup = useCallback(\n    (path: Path, groupName: string) =>\n      onSetFieldGroupState((prevState) => setAtPath(prevState, path, groupName)),\n    []\n  )\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n  const liveEdit = useMemo(() => Boolean(schemaType?.liveEdit), [documentType, schema])\n  const docId = value._id ? value._id : 'dummy-id'\n  const docPermissionsInput = useMemo(() => {\n    return {\n      ...value,\n      _id: liveEdit ? getPublishedId(docId) : getDraftId(docId),\n    }\n  }, [liveEdit, value, docId])\n\n  const [permissions, isPermissionsLoading] = useDocumentValuePermissions({\n    document: docPermissionsInput,\n    permission: requiredPermission,\n  })\n  const {revTime: rev} = historyController\n\n  const isNonExistent = !value?._id\n\n  const readOnly = useMemo(() => {\n    const hasNoPermission = !isPermissionsLoading && !permissions?.granted\n    const updateActionDisabled = !isActionEnabled(schemaType!, 'update')\n    const createActionDisabled = isNonExistent && !isActionEnabled(schemaType!, 'create')\n    const reconnecting = connectionState === 'reconnecting'\n\n    return (\n      !ready ||\n      rev !== null ||\n      hasNoPermission ||\n      updateActionDisabled ||\n      createActionDisabled ||\n      reconnecting\n    )\n  }, [\n    connectionState,\n    isNonExistent,\n    isPermissionsLoading,\n    permissions?.granted,\n    ready,\n    rev,\n    schemaType,\n  ])\n\n  const formState = useFormState(schemaType!, {\n    value: displayed,\n    readOnly,\n    comparisonValue: compareValue,\n    focusPath,\n    openPath,\n    collapsedPaths,\n    presence,\n    validation,\n    collapsedFieldSets,\n    fieldGroupState,\n    changesOpen,\n  })\n\n  const formStateRef = useRef(formState)\n  formStateRef.current = formState\n\n  const handleOpenPath = useCallback(\n    (path: Path) => {\n      const ops = getExpandOperations(formStateRef.current!, path)\n      ops.forEach((op) => {\n        if (op.type === 'expandPath') {\n          onSetCollapsedPath((prevState) => setAtPath(prevState, op.path, false))\n        }\n        if (op.type === 'expandFieldSet') {\n          onSetCollapsedFieldSets((prevState) => setAtPath(prevState, op.path, false))\n        }\n        if (op.type === 'setSelectedGroup') {\n          onSetFieldGroupState((prevState) => setAtPath(prevState, op.path, op.groupName))\n        }\n      })\n      onSetOpenPath(path)\n    },\n    [formStateRef]\n  )\n\n  const documentPane: DocumentPaneContextValue = {\n    actions,\n    activeViewId,\n    badges,\n    changesOpen,\n    collapsedFieldSets,\n    collapsedPaths,\n    compareValue,\n    connectionState,\n    displayed,\n    documentId,\n    documentIdRaw,\n    documentType,\n    editState,\n    focusPath,\n    menuItems,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onFocus: handleFocus,\n    onPathOpen: handleOpenPath,\n    onHistoryClose: handleHistoryClose,\n    onHistoryOpen: handleHistoryOpen,\n    onInspectClose: handleInspectClose,\n    onKeyUp: handleKeyUp,\n    onMenuAction: handleMenuAction,\n    onPaneClose: handlePaneClose,\n    onPaneSplit: handlePaneSplit,\n    onSetActiveFieldGroup: handleSetActiveFieldGroup,\n    onSetCollapsedPath: handleOnSetCollapsedPath,\n    onSetCollapsedFieldSet: handleOnSetCollapsedFieldSet,\n    historyController,\n    index,\n    inspectOpen,\n    validation,\n    menuItemGroups: menuItemGroups || [],\n    paneKey,\n    previewUrl,\n    ready,\n    schemaType: schemaType!,\n    isPermissionsLoading,\n    permissions,\n    setTimelineMode,\n    setTimelineRange,\n    timeline,\n    timelineMode,\n    title,\n    value,\n    views,\n    formState,\n    unstable_languageFilter: languageFilter,\n  }\n\n  useEffect(() => {\n    if (connectionState === 'reconnecting') {\n      pushToast({\n        id: 'sanity/desk/reconnecting',\n        status: 'warning',\n        title: <>Connection lost. Reconnecting…</>,\n      })\n    }\n  }, [connectionState, pushToast])\n\n  // Reset `focusPath` when `documentId` or `params.path` changes\n  useEffect(() => {\n    // Reset focus path\n    setFocusPath(params.path ? pathFromString(params.path) : [])\n    onSetOpenPath([])\n  }, [params.path, documentId])\n\n  return (\n    <DocumentPaneContext.Provider value={documentPane}>{children}</DocumentPaneContext.Provider>\n  )\n})\n\nDocumentPaneProvider.displayName = 'DocumentPaneProvider'\n", "import {\n  TrashIcon,\n  EditIcon,\n  IconComponent,\n  PublishIcon,\n  UnpublishIcon,\n  CloseIcon,\n  AddCircleIcon,\n} from '@sanity/icons'\n\nexport const TIMELINE_LABELS: {[key: string]: string | undefined} = {\n  create: 'created',\n  delete: 'deleted',\n  discardDraft: 'discarded draft',\n  initial: 'created',\n  editDraft: 'edited',\n  editLive: 'live edited',\n  publish: 'published',\n  unpublish: 'unpublished',\n}\n\nexport const TIMELINE_ICON_COMPONENTS: {[key: string]: IconComponent | undefined} = {\n  create: AddCircleIcon,\n  delete: TrashIcon,\n  discardDraft: CloseIcon,\n  initial: AddCircleIcon,\n  editDraft: EditIcon,\n  editLive: EditIcon,\n  publish: PublishIcon,\n  unpublish: UnpublishIcon,\n}\n", "import {IconComponent} from '@sanity/icons'\nimport {TIMELINE_ICON_COMPONENTS, TIMELINE_LABELS} from './constants'\nimport {ChunkType, Chunk} from 'sanity'\n\nexport function formatTimelineEventLabel(type: ChunkType): string | undefined {\n  return TIMELINE_LABELS[type]\n}\n\nexport function getTimelineEventIconComponent(type: ChunkType): IconComponent | undefined {\n  return TIMELINE_ICON_COMPONENTS[type]\n}\n\nexport function sinceTimelineProps(\n  since: Chunk,\n  rev: Chunk\n): {\n  topSelection: Chunk\n  bottomSelection: Chunk\n  disabledBeforeSelection: boolean\n} {\n  return {\n    topSelection: rev,\n    bottomSelection: since,\n    disabledBeforeSelection: true,\n  }\n}\n\nexport function revTimelineProps(rev: Chunk): {\n  topSelection: Chunk\n  bottomSelection: Chunk\n} {\n  return {\n    topSelection: rev,\n    bottomSelection: rev,\n  }\n}\n", "import React from 'react'\nimport {AvatarStack} from '@sanity/ui'\nimport {UserAvatar} from 'sanity'\n\ninterface UserAvatarStackProps {\n  maxLength?: number\n  userIds: string[]\n}\n\nexport function UserAvatarStack({maxLength, userIds}: UserAvatarStackProps) {\n  return (\n    <AvatarStack maxLength={maxLength}>\n      {userIds.map((userId) => (\n        <UserAvatar key={userId} user={userId} withTooltip />\n      ))}\n    </AvatarStack>\n  )\n}\n", "import {Text, Box, MenuItem, Theme, Flex, rem} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\nimport {TimelineItemState} from './types'\n\nexport interface IconWrapperProps {\n  theme: Theme\n}\n\nexport interface TimelineItemProps {\n  state: TimelineItemState\n  theme: Theme\n  isHovered: boolean\n}\n\nexport const IconWrapper = styled(Flex)(({theme}: IconWrapperProps) => {\n  const borderColor = theme.sanity.color.base.skeleton?.from\n\n  return css`\n    --timeline-hairline-width: 1px;\n    position: relative;\n    z-index: 2;\n    margin: 0;\n    padding: 0;\n\n    &::before {\n      position: absolute;\n      content: '';\n      height: 100%;\n      width: var(--timeline-hairline-width);\n      background: ${borderColor};\n      top: 0;\n      left: calc((100% - var(--timeline-hairline-width)) / 2);\n      z-index: 1;\n    }\n  `\n})\n\nexport const Root = styled(MenuItem)(({state = 'enabled', isHovered, theme}: TimelineItemProps) => {\n  const {color} = theme.sanity\n\n  const selectedState = color.button.default.primary.enabled\n  return css`\n    position: relative;\n    min-width: 244px;\n\n    ${state === 'selected' &&\n    css`\n      --card-bg-color: ${selectedState.bg};\n      --card-fg-color: ${selectedState.fg};\n      --card-muted-fg-color: ${selectedState.muted};\n      --card-border-color: ${selectedState.bg};\n      &:not([data-selection-bottom='true']) {\n        border-top-left-radius: 0;\n        border-top-right-radius: 0;\n      }\n    `}\n\n    ${state === 'withinSelection' &&\n    css`\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n      box-shadow: 0px 3px 0px 0px var(--card-bg-color);\n      &:not([data-selection-top='true']) {\n        border-radius: 0;\n      }\n\n      ${IconWrapper} {\n        &::before {\n          background: var(--card-hairline-soft-color);\n        }\n      }\n    `}\n\n      ${state === 'disabled' &&\n    css`\n      [data-ui='Avatar'] {\n        opacity: 0.2;\n      }\n    `}\n\n    // line styling 👇\n      &:first-child ${IconWrapper}::before {\n      height: 50%;\n      top: unset;\n      bottom: 0;\n    }\n\n    &:last-child ${IconWrapper}::before {\n      height: 50%;\n    }\n\n    ${(isHovered || state === 'selected') &&\n    css`\n      ${IconWrapper}::before {\n        background: transparent;\n      }\n    `}\n\n    // Remove timeline lines when using the keyboard to navigate timeline items\n    &:focus ${IconWrapper}::before {\n      background: transparent;\n    }\n  `\n})\n\nexport const IconBox = styled(Box)`\n  background: var(--card-bg-color);\n  border-radius: 50px;\n  position: relative;\n  z-index: 2;\n`\n\nexport const EventLabel = styled(Text)`\n  text-transform: capitalize;\n`\n\nexport const TimestampBox = styled(Box)`\n  min-width: 1rem;\n  margin-left: ${({theme}) => `-${rem(theme.sanity.space[1])}`};\n`\n", "import React, {useCallback, createElement, useMemo, useState} from 'react'\nimport {Box, ButtonTone, Flex, Stack, Text, Tooltip} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {formatTimelineEventLabel, getTimelineEventIconComponent} from './helpers'\nimport {TimelineItemState} from './types'\nimport {UserAvatarStack} from './userAvatarStack'\n\nimport {EventLabel, IconBox, IconWrapper, Root, TimestampBox} from './timelineItem.styled'\nimport {ChunkType, Chunk, useTimeAgo} from 'sanity'\n\nconst TIMELINE_ITEM_EVENT_TONE: Record<ChunkType | 'withinSelection', ButtonTone> = {\n  initial: 'primary',\n  create: 'primary',\n  publish: 'positive',\n  editLive: 'caution',\n  editDraft: 'caution',\n  unpublish: 'critical',\n  discardDraft: 'critical',\n  delete: 'critical',\n  withinSelection: 'primary',\n}\n\nexport function TimelineItem(props: {\n  isSelectionBottom: boolean\n  isSelectionTop: boolean\n  state: TimelineItemState\n  onSelect: (chunk: Chunk) => void\n  chunk: Chunk\n  timestamp: string\n  type: ChunkType\n}) {\n  const {isSelectionBottom, isSelectionTop, state, onSelect, timestamp, chunk, type} = props\n  const iconComponent = getTimelineEventIconComponent(type)\n  const authorUserIds = Array.from(chunk.authors)\n  const timeAgo = useTimeAgo(timestamp, {minimal: true})\n  const formattedTimestamp = useMemo(() => {\n    const parsedDate = new Date(timestamp)\n    const formattedDate = format(parsedDate, 'MMM d, yyyy, hh:mm a')\n\n    return formattedDate\n  }, [timestamp])\n\n  const isSelected = state === 'selected'\n  const isWithinSelection = state === 'withinSelection'\n\n  const [isHovered, setHovered] = useState(false)\n\n  const handleClick = useCallback(\n    (evt: React.MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n      onSelect(chunk)\n    },\n    [onSelect, chunk]\n  )\n\n  // @todo: ensure that tooltips are correctly displayed when navigating the parent <Menu> component with the keyboard.\n  return (\n    <Root\n      data-ui=\"timelineItem\"\n      radius={2}\n      data-chunk-id={chunk.id}\n      padding={0}\n      tone={\n        isHovered || isSelected || isWithinSelection ? 'default' : TIMELINE_ITEM_EVENT_TONE[type]\n      }\n      pressed={isWithinSelection}\n      state={state}\n      selected={isSelected}\n      isHovered={isHovered}\n      disabled={state === 'disabled'}\n      data-selection-bottom={isSelectionBottom}\n      data-selection-top={isSelectionTop}\n      onClick={handleClick}\n    >\n      <Tooltip\n        portal\n        placement=\"left\"\n        fallbackPlacements={['bottom']}\n        content={\n          <Stack padding={3} space={3}>\n            <Text size={1}>{formattedTimestamp}</Text>\n          </Stack>\n        }\n      >\n        <Box\n          // eslint-disable-next-line react/jsx-no-bind\n          onMouseEnter={() => setHovered(true)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onMouseLeave={() => setHovered(false)}\n          paddingX={2}\n        >\n          <Flex align=\"stretch\">\n            <IconWrapper align=\"center\">\n              <IconBox padding={2}>\n                <Text size={2}>{iconComponent && createElement(iconComponent)}</Text>\n              </IconBox>\n            </IconWrapper>\n\n            <Stack space={2} margin={2}>\n              <Box>\n                <EventLabel size={1} weight=\"medium\">\n                  {formatTimelineEventLabel(type) || <code>{type}</code>}\n                </EventLabel>\n              </Box>\n              <TimestampBox paddingX={1}>\n                <Text size={0} muted>\n                  {timeAgo}\n                </Text>\n              </TimestampBox>\n            </Stack>\n            <Flex flex={1} justify=\"flex-end\" align=\"center\">\n              <UserAvatarStack maxLength={3} userIds={authorUserIds} />\n            </Flex>\n          </Flex>\n        </Box>\n      </Tooltip>\n    </Root>\n  )\n}\n", "import {Box, Menu, Stack} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Box)`\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n`\nexport const StackWrapper = styled(Stack)`\n  max-width: 200px;\n`\n\nexport const MenuWrapper = styled(Menu)`\n  overflow: auto;\n  box-sizing: border-box;\n  max-height: calc(100vh - 198px);\n`\n", "import React, {useCallback, useEffect, useRef, useState} from 'react'\nimport {Text, Spinner, Flex} from '@sanity/ui'\nimport {TimelineItem} from './timelineItem'\nimport {TimelineItemState} from './types'\nimport {Root, StackWrapper, MenuWrapper} from './timeline.styled'\nimport {Chunk, Timeline as TimelineModel} from 'sanity'\n\ninterface TimelineProps {\n  timeline: TimelineModel\n  onSelect: (chunk: Chunk) => void\n  onLoadMore: (state: boolean) => void\n\n  /** Are the chunks above the topSelection enabled? */\n  disabledBeforeSelection?: boolean\n  /** The first chunk of the selection. */\n  topSelection: Chunk\n  /** The final chunk of the selection. */\n  bottomSelection: Chunk\n}\n\n// Must be a positive number\nconst LOAD_MORE_OFFSET = 20\n\nexport const Timeline = ({\n  timeline,\n  disabledBeforeSelection,\n  topSelection,\n  bottomSelection,\n  onSelect,\n  onLoadMore,\n}: TimelineProps) => {\n  const rootRef = useRef<HTMLDivElement | null>(null)\n  const listRef = useRef<HTMLDivElement | null>(null)\n  const [loadingElement, setLoadingElement] = useState<HTMLDivElement | null>(null)\n\n  let state: TimelineItemState = disabledBeforeSelection ? 'disabled' : 'enabled'\n\n  const checkIfLoadIsNeeded = useCallback(() => {\n    const rootEl = rootRef.current\n\n    if (loadingElement && rootEl) {\n      const {offsetHeight, scrollTop} = rootEl\n      const bottomPosition = offsetHeight + scrollTop + LOAD_MORE_OFFSET\n      const isVisible = loadingElement.offsetTop < bottomPosition\n\n      if (isVisible) {\n        // @todo: find out why, for some reason, it won't load without RAF wrapper\n        requestAnimationFrame(() => onLoadMore(isVisible))\n      }\n    }\n  }, [onLoadMore, loadingElement])\n\n  // Load whenever it's needed\n  useEffect(checkIfLoadIsNeeded, [checkIfLoadIsNeeded])\n\n  return (\n    <Root ref={rootRef as any} onScroll={checkIfLoadIsNeeded} data-ui=\"timeline\">\n      {timeline.chunkCount === 0 && (\n        <StackWrapper padding={3} space={3}>\n          <Text size={1} weight=\"semibold\">\n            No document history\n          </Text>\n          <Text muted size={1}>\n            When changing the content of the document, the document versions will appear in this\n            menu.\n          </Text>\n        </StackWrapper>\n      )}\n\n      {timeline.chunkCount > 0 && (\n        <MenuWrapper ref={listRef} padding={1} space={0}>\n          {timeline.mapChunks((chunk) => {\n            const isSelectionTop = topSelection === chunk\n            const isSelectionBottom = bottomSelection === chunk\n\n            if (isSelectionTop) {\n              state = 'withinSelection'\n            }\n\n            if (isSelectionBottom) {\n              state = 'selected'\n            }\n\n            const item = (\n              <TimelineItem\n                chunk={chunk}\n                isSelectionBottom={isSelectionBottom}\n                isSelectionTop={isSelectionTop}\n                key={chunk.id}\n                state={state}\n                onSelect={onSelect}\n                type={chunk.type}\n                timestamp={chunk.endTimestamp}\n              />\n            )\n\n            // Flip it back to normal after we've rendered the active one.\n            if (state === 'selected') {\n              state = 'enabled'\n            }\n\n            return item\n          })}\n        </MenuWrapper>\n      )}\n\n      {!timeline.reachedEarliestEntry && (\n        <Flex align=\"center\" justify=\"center\" padding={4} ref={setLoadingElement}>\n          <Spinner muted />\n        </Flex>\n      )}\n    </Root>\n  )\n}\n\nTimeline.displayName = 'Timeline'\n", "import {SelectIcon} from '@sanity/icons'\nimport {useClickOutside, Button, Popover, Placement, useGlobalKeyDown} from '@sanity/ui'\nimport {upperFirst} from 'lodash'\nimport React, {useCallback, useState} from 'react'\nimport styled from 'styled-components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {sinceTimelineProps, revTimelineProps, formatTimelineEventLabel} from './helpers'\nimport {Timeline} from './timeline'\nimport {Chunk, useTimeAgo} from 'sanity'\n\ninterface TimelineMenuProps {\n  chunk: Chunk | null\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  & > div {\n    display: flex;\n    flex-direction: column;\n\n    & > [data-ui='Card'] {\n      flex: 1;\n      min-height: 0;\n      display: flex;\n      flex-direction: column;\n\n      /* This is the scrollable container rendered by <Timeline /> */\n      & > div {\n        flex: 1;\n        min-height: 0;\n      }\n    }\n  }\n`\n\nexport function TimelineMenu({chunk, mode, placement}: TimelineMenuProps) {\n  const {historyController, setTimelineRange, setTimelineMode, timeline, ready} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [menuContent, setMenuContent] = useState<HTMLDivElement | null>(null)\n\n  const handleOpen = useCallback(() => {\n    setTimelineMode(mode)\n    setOpen(true)\n  }, [mode, setTimelineMode])\n\n  const handleClose = useCallback(() => {\n    setTimelineMode('closed')\n    setOpen(false)\n  }, [setTimelineMode])\n\n  const handleClickOutside = useCallback(() => {\n    handleClose()\n  }, [handleClose])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (open && (event.key === 'Escape' || event.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open]\n  )\n\n  useClickOutside(handleClickOutside, [menuContent, button])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      const [sinceId, revId] = historyController.findRangeForNewRev(revChunk)\n      setTimelineMode('closed')\n      setOpen(false)\n      setTimelineRange(sinceId, revId)\n    },\n    [historyController, setTimelineMode, setTimelineRange]\n  )\n\n  const selectSince = useCallback(\n    (sinceChunk: Chunk) => {\n      const [sinceId, revId] = historyController.findRangeForNewSince(sinceChunk)\n      setTimelineMode('closed')\n      setOpen(false)\n      setTimelineRange(sinceId, revId)\n    },\n    [historyController, setTimelineMode, setTimelineRange]\n  )\n\n  const loadMoreHistory = useCallback(\n    (state: boolean) => {\n      historyController.setLoadMore(state)\n    },\n    [historyController]\n  )\n\n  const content = open && (\n    <div ref={setMenuContent}>\n      {mode === 'rev' ? (\n        <Timeline\n          onSelect={selectRev}\n          onLoadMore={loadMoreHistory}\n          timeline={timeline}\n          {...revTimelineProps(historyController.realRevChunk)}\n        />\n      ) : (\n        <Timeline\n          onSelect={selectSince}\n          onLoadMore={loadMoreHistory}\n          timeline={timeline}\n          {...sinceTimelineProps(historyController.sinceTime!, historyController.realRevChunk)}\n        />\n      )}\n    </div>\n  )\n\n  const timeAgo = useTimeAgo(chunk?.endTimestamp || '', {agoSuffix: true})\n\n  const revLabel = chunk\n    ? `${upperFirst(formatTimelineEventLabel(chunk.type))} ${timeAgo}`\n    : 'Current version'\n\n  const sinceLabel = chunk\n    ? `Since ${formatTimelineEventLabel(chunk.type)} ${timeAgo}`\n    : 'Since unknown version'\n\n  const openLabel = mode === 'rev' ? 'Select version' : 'Review changes since'\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n\n  return (\n    <Root\n      constrainSize\n      content={content}\n      data-ui=\"versionMenu\"\n      open={open}\n      placement={placement}\n      portal\n    >\n      <Button\n        disabled={!ready}\n        mode=\"bleed\"\n        fontSize={1}\n        padding={2}\n        iconRight={SelectIcon}\n        onClick={open ? handleClose : handleOpen}\n        ref={setButton}\n        selected={open}\n        text={open ? openLabel : buttonLabel}\n      />\n    </Root>\n  )\n}\n", "import React from 'react'\nimport {Box, Flex, Spinner, Text} from '@sanity/ui'\n\nexport function LoadingContent() {\n  return (\n    <Flex align=\"center\" justify=\"center\">\n      <Spinner muted />\n      <Box marginTop={3}>\n        <Text align=\"center\">Loading changes…</Text>\n      </Box>\n    </Flex>\n  )\n}\n", "import {AnnotationDetails, visitDiff, Diff} from 'sanity'\n\nexport function collectLatestAuthorAnnotations(diff: Diff): AnnotationDetails[] {\n  const authorMap = new Map<string, AnnotationDetails>()\n  visitDiff(diff, (child) => {\n    if (child.action === 'unchanged' || !('annotation' in child) || !child.annotation) {\n      return true\n    }\n\n    const {author, timestamp} = child.annotation\n    const previous = authorMap.get(author)\n    if (!previous || previous.timestamp < timestamp) {\n      authorMap.set(author, child.annotation)\n    }\n\n    return true\n  })\n\n  return Array.from(authorMap.values()).sort((a, b) => (a.timestamp < b.timestamp ? 1 : -1))\n}\n", "import {ObjectDiff} from '@sanity/diff'\nimport {CloseIcon} from '@sanity/icons'\nimport {AvatarStack, BoundaryElementProvider, Box, Button, Flex} from '@sanity/ui'\nimport React, {useRef} from 'react'\nimport styled from 'styled-components'\nimport {PaneContent, PaneHeader, usePane} from '../../../components'\nimport {TimelineMenu} from '../timeline'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {LoadingContent} from './content/LoadingContent'\nimport {collectLatestAuthorAnnotations} from './helpers'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  DiffTooltip,\n  DocumentChangeContext,\n  DocumentChangeContextInstance,\n  NoChanges,\n  ScrollContainer,\n  UserAvatar,\n} from 'sanity'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function ChangesPanel(): React.ReactElement | null {\n  const {documentId, onHistoryClose, historyController, schemaType, value} = useDocumentPane()\n  const {collapsed} = usePane()\n  const scrollRef = useRef<HTMLDivElement | null>(null)\n  const historyState = historyController.selectionState\n  const loading = historyState === 'loading'\n  const since = historyController.sinceTime\n  const diff: ObjectDiff<any> | null = historyController.currentObjectDiff()\n  const isComparingCurrent = !historyController.onOlderRevision()\n\n  const documentContext: DocumentChangeContextInstance = React.useMemo(\n    () => ({\n      documentId,\n      schemaType,\n      FieldWrapper: ChangeFieldWrapper,\n      rootDiff: diff,\n      isComparingCurrent,\n      value,\n    }),\n    [documentId, diff, isComparingCurrent, schemaType, value]\n  )\n\n  const changeAnnotations = React.useMemo(\n    () => (diff ? collectLatestAuthorAnnotations(diff) : []),\n    [diff]\n  )\n\n  if (collapsed) {\n    return null\n  }\n\n  return (\n    <Flex\n      direction=\"column\"\n      flex={1}\n      style={{\n        borderLeft: '1px dashed var(--card-border-color)',\n        overflow: 'hidden',\n        minWidth: 320,\n      }}\n      data-testid=\"review-changes-pane\"\n    >\n      <PaneHeader\n        actions={\n          <Button\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={onHistoryClose}\n            padding={3}\n            title=\"Hide changes panel\"\n          />\n        }\n        subActions={\n          changeAnnotations.length > 0 && (\n            <Box paddingRight={1}>\n              <DiffTooltip\n                annotations={changeAnnotations}\n                description=\"Changes by\"\n                placement=\"bottom-end\"\n              >\n                <AvatarStack maxLength={4}>\n                  {changeAnnotations.map(({author}) => (\n                    <UserAvatar key={author} user={author} />\n                  ))}\n                </AvatarStack>\n              </DiffTooltip>\n            </Box>\n          )\n        }\n        tabs={<TimelineMenu mode=\"since\" chunk={since} placement=\"bottom-start\" />}\n        title=\"Changes\"\n      />\n\n      <PaneContent>\n        <BoundaryElementProvider element={scrollRef.current}>\n          <Scroller data-ui=\"Scroller\" ref={scrollRef}>\n            <Box flex={1} padding={4}>\n              <Content diff={diff} documentContext={documentContext} loading={loading} />\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </PaneContent>\n    </Flex>\n  )\n}\n\nfunction Content({\n  diff,\n  documentContext,\n  loading,\n}: {\n  diff: ObjectDiff<any> | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n}) {\n  const {schemaType} = useDocumentPane()\n\n  if (loading) {\n    return <LoadingContent />\n  }\n\n  if (!diff) {\n    return <NoChanges />\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={diff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n", "import {useCallback, useEffect, useMemo, useState} from 'react'\nimport {useSettingsStore} from 'sanity'\n\n/**\n * @internal\n */\nexport function useDeskToolSetting<ValueType>(\n  namespace: string | null,\n  key: string,\n  defaultValue?: ValueType\n): [ValueType | undefined, (_value: ValueType) => void] {\n  const settingsStore = useSettingsStore()\n  const [value, setValue] = useState<ValueType | undefined>(defaultValue)\n\n  const deskToolSettings = useMemo(() => settingsStore.forNamespace('desk-tool'), [settingsStore])\n\n  const settings = useMemo(() => {\n    if (namespace) {\n      return deskToolSettings.forNamespace(namespace).forKey(key)\n    }\n\n    return deskToolSettings.forKey(key)\n  }, [deskToolSettings, namespace, key])\n\n  useEffect(() => {\n    const sub = settings.listen(defaultValue).subscribe({\n      next: setValue as any,\n    })\n\n    return () => sub?.unsubscribe()\n  }, [defaultValue, key, namespace, settings])\n\n  const set = useCallback(\n    (newValue: ValueType) => {\n      setValue(newValue)\n      settings.set(newValue as any)\n    },\n    [settings]\n  )\n\n  return useMemo(() => [value, set], [set, value])\n}\n", "export const VIEW_MODE_PARSED = {id: 'parsed', title: 'Parsed'}\nexport const VIEW_MODE_RAW = {id: 'raw', title: 'Raw JSON'}\nexport const VIEW_MODES = [VIEW_MODE_PARSED, VIEW_MODE_RAW]\n", "import {SanityDocumentLike} from '@sanity/types'\nimport HLRU from 'hashlru'\nimport {isRecord, isString} from 'sanity'\n\nconst lru = HLRU(1000)\n\nexport function isExpanded(keyPath: any, value: any): any {\n  const cached = lru.get(keyPath)\n\n  if (cached === undefined) {\n    lru.set(keyPath, Array.isArray(value) || isRecord(value))\n    return isExpanded(keyPath, value)\n  }\n\n  return cached\n}\n\nexport function toggleExpanded(event: any): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nexport function selectElement(element: HTMLElement): void {\n  const sel = window.getSelection()\n\n  if (sel) {\n    const range = document.createRange()\n\n    sel.removeAllRanges()\n    range.selectNodeContents(element)\n    sel.addRange(range)\n  }\n}\n\nexport function select(event: any): void {\n  selectElement(event.currentTarget)\n}\n\nexport function maybeSelectAll(event: any): void {\n  const selectAll = event.keyCode === 65 && (event.metaKey || event.ctrlKey)\n\n  if (!selectAll) {\n    return\n  }\n\n  event.preventDefault()\n\n  selectElement(event.currentTarget)\n}\n\nexport function isDocumentLike(value: unknown): value is SanityDocumentLike {\n  return isRecord(value) && isString(value._id) && isString(value._type)\n}\n", "import {rem, Theme} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const JSONInspectorWrapper = styled.div(({theme}: {theme: Theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[3])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0 - ${rem(space[4])} + 3px);\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[3])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n", "import {SearchIcon} from '@sanity/icons'\nimport {TextInput} from '@sanity/ui'\nimport React, {useCallback} from 'react'\n\nexport function Search(props: {onChange: (q: string) => void; query: string}) {\n  const {onChange, query} = props\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => onChange(event.target.value),\n    [onChange]\n  )\n\n  return (\n    <TextInput\n      icon={SearchIcon}\n      onChange={handleChange}\n      placeholder=\"Search\"\n      radius={2}\n      value={query || ''}\n    />\n  )\n}\n", "import {SanityDocument} from '@sanity/types'\nimport {Card, Code, Dialog, Flex, Tab, TabList, TabPanel} from '@sanity/ui'\nimport React, {useCallback} from 'react'\nimport JSONInspector from '@rexxars/react-json-inspector'\nimport {DocTitle} from '../../../components'\nimport {useDeskToolSetting} from '../../../useDeskToolSetting'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {VIEW_MODE_PARSED, VIEW_MODE_RAW, VIEW_MODES} from './constants'\nimport {isDocumentLike, isExpanded, maybeSelectAll, select, toggleExpanded} from './helpers'\nimport {JSONInspectorWrapper} from './InspectDialog.styles'\nimport {Search} from './Search'\n\ninterface InspectDialogProps {\n  value: Partial<SanityDocument> | null\n}\n\nexport function InspectDialog(props: InspectDialogProps) {\n  const {value} = props\n  const {onInspectClose, paneKey} = useDocumentPane()\n  const dialogIdPrefix = `${paneKey}_inspect_`\n\n  /* this creates a view mode (the default that it opens with is the parsed tab) that is saved based on the paneKey\n  where the inspect dialog lives.\n  This also means that when a page is loaded, the state of the tabs remains and doesn't revert to the pane tab */\n  const [viewModeId, onViewModeChange] = useDeskToolSetting(\n    'desk-tool',\n    `inspect-view-preferred-view-mode-${paneKey}`,\n    'parsed'\n  )\n\n  /* based on the view mode it shows the right tab content */\n  const viewMode = VIEW_MODES.find((mode) => mode.id === viewModeId)\n\n  const setParsedViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_PARSED.id)\n  }, [onViewModeChange])\n\n  const setRawViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_RAW.id)\n  }, [onViewModeChange])\n\n  return (\n    <Dialog\n      id={`${dialogIdPrefix}dialog`}\n      header={\n        isDocumentLike(value) ? (\n          <>\n            Inspecting{' '}\n            <em>\n              <DocTitle document={value} />\n            </em>\n          </>\n        ) : (\n          <em>No value</em>\n        )\n      }\n      onClose={onInspectClose}\n      onClickOutside={onInspectClose}\n      width={3}\n    >\n      <Flex direction=\"column\" height=\"fill\">\n        <Card padding={3} shadow={1} style={{position: 'sticky', bottom: 0, zIndex: 3}}>\n          <TabList space={1}>\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              fontSize={1}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_PARSED.id}`}\n              label={VIEW_MODE_PARSED.title}\n              onClick={setParsedViewMode}\n              selected={viewMode === VIEW_MODE_PARSED}\n            />\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              fontSize={1}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_RAW.id}`}\n              label={VIEW_MODE_RAW.title}\n              onClick={setRawViewMode}\n              selected={viewMode === VIEW_MODE_RAW}\n            />\n          </TabList>\n        </Card>\n\n        <TabPanel\n          aria-labelledby={`${dialogIdPrefix}tab-${viewModeId}`}\n          flex={1}\n          id={`${dialogIdPrefix}tabpanel`}\n          overflow=\"auto\"\n          padding={4}\n          style={{outline: 'none'}}\n        >\n          {viewMode === VIEW_MODE_PARSED && (\n            <JSONInspectorWrapper>\n              <JSONInspector\n                data={value}\n                isExpanded={isExpanded}\n                onClick={toggleExpanded}\n                search={Search}\n              />\n            </JSONInspectorWrapper>\n          )}\n\n          {viewMode === VIEW_MODE_RAW && (\n            <Code\n              language=\"json\"\n              tabIndex={0}\n              onKeyDown={maybeSelectAll}\n              onDoubleClick={select}\n              onFocus={select}\n            >\n              {JSON.stringify(value, null, 2)}\n            </Code>\n          )}\n        </TabPanel>\n      </Flex>\n    </Dialog>\n  )\n}\n", "import {Box, Button, Card, Container, Flex, Text} from '@sanity/ui'\nimport {WarningOutlineIcon, SyncIcon, CloseIcon} from '@sanity/icons'\nimport React, {memo, useCallback, useMemo} from 'react'\nimport styled from 'styled-components'\nimport {fromString as pathFromString, get as pathGet} from '@sanity/util/paths'\nimport {KeyedSegment, Reference} from '@sanity/types'\nimport {debounceTime, map} from 'rxjs/operators'\nimport {concat, Observable, of} from 'rxjs'\nimport {useMemoObservable} from 'react-rx'\nimport {RouterPaneGroup} from '../../../types'\nimport {usePaneRouter} from '../../../components'\nimport {DocumentAvailability, useDocumentPreviewStore, getPublishedId} from 'sanity'\n\nconst Root = styled(Card)`\n  position: relative;\n  z-index: 50;\n`\n\nconst TextOneLine = styled(Text)`\n  & > * {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n`\n\ninterface ParentReferenceInfo {\n  loading: boolean\n  result?: {\n    availability: {draft: DocumentAvailability; published: DocumentAvailability}\n    refValue: string | undefined\n  }\n}\n\nexport const ReferenceChangedBanner = memo(() => {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {params, groupIndex, routerPanesState, replaceCurrent, BackLink} = usePaneRouter()\n  const routerReferenceId = routerPanesState[groupIndex]?.[0].id\n  const parentGroup = routerPanesState[groupIndex - 1] as RouterPaneGroup | undefined\n  const parentSibling = parentGroup?.[0]\n  const parentId = parentSibling?.id\n  const hasHistoryOpen = Boolean(parentSibling?.params?.rev)\n  const parentRefPath = useMemo(() => {\n    return (params?.parentRefPath && pathFromString(params.parentRefPath)) || null\n  }, [params?.parentRefPath])\n\n  /**\n   * Loads information regarding the reference field of the parent pane. This\n   * is only applicable to child references (aka references-in-place).\n   *\n   * It utilizes the pane ID of the parent pane (which is a document ID) along\n   * with the `parentRefPath` router param on the current pane to find the\n   * current value of the reference field on the parent document.\n   *\n   * This is used to compare with the current pane's document ID. If the IDs\n   * don't match then this banner should reveal itself\n   */\n  const referenceInfo = useMemoObservable(\n    (): Observable<ParentReferenceInfo> => {\n      const parentRefPathSegment = parentRefPath?.[0] as string | undefined\n\n      // short-circuit: this document pane is not a child reference pane\n      if (!parentId || !parentRefPathSegment || !parentRefPath) {\n        return of({loading: false})\n      }\n\n      const publishedId = getPublishedId(parentId)\n      const path = pathFromString(parentRefPathSegment)\n\n      // note: observePaths doesn't support keyed path segments, so we need to select the nearest parent\n      const keyedSegmentIndex = path.findIndex(\n        (p): p is KeyedSegment => typeof p == 'object' && '_key' in p\n      )\n\n      return concat(\n        // emit a loading state instantly\n        of({loading: true}),\n        // then emit the values from watching the published ID's path\n        documentPreviewStore\n          .unstable_observePathsDocumentPair(\n            publishedId,\n            (keyedSegmentIndex === -1 ? path : path.slice(0, keyedSegmentIndex)) as string[][]\n          )\n          .pipe(\n            // this debounce time is needed to prevent flashing banners due to\n            // the router state updating faster than the content-lake state. we\n            // debounce to wait for more emissions because the value pulled\n            // initially could be stale.\n            debounceTime(750),\n            map(\n              ({draft, published}): ParentReferenceInfo => ({\n                loading: false,\n                result: {\n                  availability: {\n                    draft: draft.availability,\n                    published: published.availability,\n                  },\n                  refValue: pathGet<Reference>(draft.snapshot || published.snapshot, parentRefPath)\n                    ?._ref,\n                },\n              })\n            )\n          )\n      )\n    },\n    [parentId, parentRefPath],\n    {loading: true}\n  )\n\n  const handleReloadReference = useCallback(() => {\n    if (referenceInfo.loading) return\n\n    if (referenceInfo.result?.refValue) {\n      replaceCurrent({\n        id: referenceInfo.result.refValue,\n        params: params as Record<string, string>,\n      })\n    }\n  }, [referenceInfo.loading, referenceInfo.result, replaceCurrent, params])\n\n  const shouldHide =\n    // if `parentId` or `parentRefPath` is not present then this banner is n/a\n    !parentId ||\n    !parentRefPath ||\n    // if viewing this pane via history, then hide\n    hasHistoryOpen ||\n    // if loading, hide\n    referenceInfo.loading ||\n    // if the parent document is not available (e.g. due to permission denied or\n    // not found) we don't want to display a warning here, but instead rely on the\n    // parent view to display the appropriate message\n    (!referenceInfo.result?.availability.draft.available &&\n      !referenceInfo.result?.availability.published.available) ||\n    // if the references are the same, then hide the reference changed banner\n    referenceInfo.result?.refValue === routerReferenceId\n\n  if (shouldHide) return null\n\n  return (\n    <Root shadow={1} tone=\"caution\" data-testid=\"reference-changed-banner\">\n      <Container paddingX={4} paddingY={2} sizing=\"border\" width={1}>\n        <Flex align=\"center\">\n          <Text size={1}>\n            <WarningOutlineIcon />\n          </Text>\n\n          {referenceInfo.result?.refValue ? (\n            <>\n              <Box flex={1} marginLeft={3}>\n                <TextOneLine title=\"This reference has changed since you opened it.\" size={1}>\n                  This reference has changed since you opened it.\n                </TextOneLine>\n              </Box>\n              <Box marginLeft={3}>\n                <Button\n                  onClick={handleReloadReference}\n                  icon={SyncIcon}\n                  fontSize={1}\n                  mode=\"ghost\"\n                  padding={2}\n                  space={2}\n                  text=\"Reload reference\"\n                />\n              </Box>\n            </>\n          ) : (\n            <>\n              <Box flex={1} marginLeft={3}>\n                <TextOneLine title=\"This reference has been removed since you opened it.\" size={1}>\n                  This reference has been removed since you opened it.\n                </TextOneLine>\n              </Box>\n              <Box marginLeft={3}>\n                <Button\n                  as={BackLink}\n                  icon={CloseIcon}\n                  fontSize={1}\n                  mode=\"ghost\"\n                  padding={2}\n                  space={2}\n                  text=\"Close reference\"\n                />\n              </Box>\n            </>\n          )}\n        </Flex>\n      </Container>\n    </Root>\n  )\n})\n\nReferenceChangedBanner.displayName = 'ReferenceChangedBanner'\n", "import React from 'react'\nimport {Box, Card, Container, Flex, Text} from '@sanity/ui'\nimport {ReadOnlyIcon} from '@sanity/icons'\nimport styled from 'styled-components'\nimport {useCurrentUser} from 'sanity'\n\nconst Root = styled(Card)`\n  position: relative;\n  z-index: 50;\n`\n\ninterface PermissionCheckBannerProps {\n  granted: boolean\n  requiredPermission: string\n}\n\nexport function PermissionCheckBanner({granted, requiredPermission}: PermissionCheckBannerProps) {\n  const currentUser = useCurrentUser()\n  const plural = currentUser?.roles?.length !== 1\n\n  const roles = join(\n    currentUser?.roles?.map((r) => <code key={r.name}>{r.title}</code>) || [],\n    ', '\n  )\n\n  if (granted) return null\n\n  return (\n    <Root data-testid=\"permission-check-banner\" shadow={1} tone=\"transparent\">\n      <Container paddingX={4} paddingY={3} sizing=\"border\" width={1}>\n        <Flex align=\"flex-start\">\n          <Text size={1}>\n            <ReadOnlyIcon />\n          </Text>\n\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              Your role{plural && 's'} {roles} {plural ? 'do' : 'does'} not have permissions to{' '}\n              {requiredPermission} this document.\n            </Text>\n          </Box>\n        </Flex>\n      </Container>\n    </Root>\n  )\n}\n\nfunction join<T, S>(array: Array<T>, sep: S): Array<T | S> | null {\n  return array.reduce((result: Array<T | S> | null, item: T | S) => {\n    if (result === null) {\n      return [item]\n    }\n\n    return result.concat([sep, item])\n  }, null)\n}\n", "import {useEffect, useRef} from 'react'\nimport {ToastParams, useToast} from '@sanity/ui'\n\nfunction usePrevious<T>(value: T) {\n  const ref = useRef<T>()\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n  return ref.current\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value\nconst LONG_ENOUGH_BUT_NOT_TOO_LONG = 1000 * 60 * 60 * 24 * 24\n\n/**\n * Workaround to support conditional toast (e.g. a toast that is visible as long as a condition holds true)\n */\nexport function useConditionalToast(params: ToastParams & {id: string; enabled?: boolean}) {\n  const toast = useToast()\n\n  const wasEnabled = usePrevious(params.enabled)\n  // note1: there's a `duration || 0` in Sanity UI's pushToast(), so make it non-falsey\n  // note2: cannot use `Infinity` as duration, since it exceeds setTimeout's maximum delay value\n  useEffect(() => {\n    if (!wasEnabled && params.enabled) {\n      toast.push({...params, duration: LONG_ENOUGH_BUT_NOT_TOO_LONG})\n    }\n    if (wasEnabled && !params.enabled) {\n      toast.push({\n        ...params,\n        // Note: @sanity/ui fallbacks to the default duration of 4s in case of falsey values\n        duration: 0.01,\n      })\n    }\n  }, [params, toast, wasEnabled])\n}\n", "/* eslint-disable no-nested-ternary */\n\nimport {Box, Container, Flex, Spinner, Text, focusFirstDescendant} from '@sanity/ui'\nimport React, {useEffect, useMemo, useRef} from 'react'\nimport {tap} from 'rxjs/operators'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Delay} from '../../../../components/Delay'\nimport {useConditionalToast} from './useConditionalToast'\nimport {\n  DocumentMutationEvent,\n  DocumentRebaseEvent,\n  FormBuilder,\n  PatchMsg,\n  PresenceOverlay,\n  createPatchChannel,\n  fromMutationPatches,\n  useDocumentPresence,\n  useDocumentStore,\n} from 'sanity'\n\ninterface FormViewProps {\n  hidden: boolean\n  margins: [number, number, number, number]\n}\n\nconst preventDefault = (ev: React.FormEvent) => ev.preventDefault()\n\nexport function FormView(props: FormViewProps) {\n  const {hidden, margins} = props\n\n  const {\n    collapsedFieldSets,\n    collapsedPaths,\n    displayed: value,\n    editState,\n    documentId,\n    documentType,\n    onChange,\n    validation,\n    ready,\n    formState,\n    onFocus,\n    onBlur,\n    onSetCollapsedPath,\n    onPathOpen,\n    onSetCollapsedFieldSet,\n    onSetActiveFieldGroup,\n  } = useDocumentPane()\n  const documentStore = useDocumentStore()\n  const presence = useDocumentPresence(documentId)\n\n  // The `patchChannel` is an INTERNAL publish/subscribe channel that we use to notify form-builder\n  // nodes about both remote and local patches.\n  // - Used by the Portable Text input to modify selections.\n  // - Used by `withDocument` to reset value.\n  const patchChannel = useMemo(() => createPatchChannel(), [])\n\n  const isLocked = editState?.transactionSyncLock?.enabled\n\n  useConditionalToast({\n    id: `sync-lock-${documentId}`,\n    status: 'warning',\n    enabled: isLocked,\n    title: `Syncing document…`,\n    description: `Please hold tight while the document is synced. This usually happens right after the document has been published, and it shouldn't take more than a few seconds`,\n  })\n\n  useEffect(() => {\n    const sub = documentStore.pair\n      .documentEvents(documentId, documentType)\n      .pipe(\n        tap((event) => {\n          if (event.type === 'mutation') {\n            patchChannel.publish(prepareMutationEvent(event))\n          }\n\n          if (event.type === 'rebase') {\n            patchChannel.publish(prepareRebaseEvent(event))\n          }\n        })\n      )\n      .subscribe()\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [documentId, documentStore, documentType, patchChannel])\n\n  const hasRev = Boolean(value?._rev)\n  useEffect(() => {\n    if (hasRev) {\n      // this is a workaround for an issue that caused the document pushed to withDocument to get\n      // stuck at the first initial value.\n      // This effect is triggered only when the document goes from not having a revision, to getting one\n      // so it will kick in as soon as the document is received from the backend\n      patchChannel.publish({\n        type: 'mutation',\n        patches: [],\n        snapshot: value,\n      })\n    }\n    // React to changes in hasRev only\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hasRev])\n\n  const formRef = useRef<null | HTMLDivElement>(null)\n\n  useEffect(() => {\n    focusFirstDescendant(formRef.current!)\n  }, [])\n\n  // const after = useMemo(\n  //   () =>\n  //     Array.isArray(afterEditorComponents) &&\n  //     afterEditorComponents.map(\n  //       (AfterEditorComponent: React.ComponentType<{documentId: string}>, idx: number) => (\n  //         <AfterEditorComponent key={String(idx)} documentId={documentId} />\n  //       )\n  //     ),\n  //   [documentId]\n  // )\n  return (\n    <Container\n      hidden={hidden}\n      paddingX={4}\n      paddingTop={5}\n      paddingBottom={9}\n      sizing=\"border\"\n      width={1}\n    >\n      <PresenceOverlay margins={margins}>\n        <Box as=\"form\" onSubmit={preventDefault} ref={formRef}>\n          {ready ? (\n            formState === null ? (\n              <Box padding={2}>\n                <Text>This form is hidden</Text>\n              </Box>\n            ) : (\n              <FormBuilder\n                __internal_patchChannel={patchChannel}\n                collapsedFieldSets={collapsedFieldSets}\n                collapsedPaths={collapsedPaths}\n                focusPath={formState.focusPath}\n                changed={formState.changed}\n                focused={formState.focused}\n                groups={formState.groups}\n                id=\"root\"\n                members={formState.members}\n                onChange={onChange}\n                onFieldGroupSelect={onSetActiveFieldGroup}\n                onPathBlur={onBlur}\n                onPathFocus={onFocus}\n                onPathOpen={onPathOpen}\n                onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n                onSetPathCollapsed={onSetCollapsedPath}\n                presence={presence}\n                readOnly={formState.readOnly}\n                schemaType={formState.schemaType}\n                validation={validation}\n                value={formState.value}\n              />\n            )\n          ) : (\n            <Delay ms={300}>\n              <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n                <Spinner muted />\n\n                <Box marginTop={3}>\n                  <Text align=\"center\" muted size={1}>\n                    Loading document\n                  </Text>\n                </Box>\n              </Flex>\n            </Delay>\n          )}\n        </Box>\n      </PresenceOverlay>\n    </Container>\n  )\n}\n\nfunction prepareMutationEvent(event: DocumentMutationEvent): PatchMsg {\n  const patches = event.mutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'mutation',\n    snapshot: event.document,\n    patches: fromMutationPatches(event.origin, patches),\n  }\n}\n\nfunction prepareRebaseEvent(event: DocumentRebaseEvent): PatchMsg {\n  const remotePatches = event.remoteMutations.map((mut) => mut.patch).filter(Boolean)\n  const localPatches = event.localMutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'rebase',\n    snapshot: event.document,\n    patches: fromMutationPatches('remote', remotePatches).concat(\n      fromMutationPatches('local', localPatches)\n    ),\n  }\n}\n", "import React, {useCallback} from 'react'\nimport {Tab, TabList} from '@sanity/ui'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {usePaneRouter} from '../../../../components'\n\nexport function DocumentHeaderTabs() {\n  const {activeViewId, paneKey, views} = useDocumentPane()\n  const tabPanelId = `${paneKey}tabpanel`\n\n  return (\n    <TabList space={1}>\n      {views.map((view, index) => (\n        <DocumentHeaderTab\n          icon={view.icon}\n          id={`${paneKey}tab-${view.id}`}\n          isActive={activeViewId === view.id}\n          key={view.id}\n          label={<>{view.title}</>}\n          tabPanelId={tabPanelId}\n          viewId={index === 0 ? null : view.id ?? null}\n        />\n      ))}\n    </TabList>\n  )\n}\n\nfunction DocumentHeaderTab(props: {\n  icon?: React.ComponentType | React.ReactNode\n  id: string\n  isActive: boolean\n  label: React.ReactNode\n  tabPanelId: string\n  viewId: string | null\n}) {\n  const {icon, id, isActive, label, tabPanelId, viewId} = props\n  const {ready} = useDocumentPane()\n  const {setView} = usePaneRouter()\n  const handleClick = useCallback(() => setView(viewId), [setView, viewId])\n\n  return (\n    <Tab\n      aria-controls={tabPanelId}\n      disabled={!ready}\n      fontSize={1}\n      icon={icon}\n      id={id}\n      selected={isActive}\n      label={label as any}\n      onClick={handleClick}\n    />\n  )\n}\n", "import {ErrorOutlineIcon, InfoOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {\n  isValidationInfoMarker,\n  isValidationWarningMarker,\n  isValidationErrorMarker,\n  Path,\n} from '@sanity/types'\nimport {Button, ButtonProps, Menu, MenuButton} from '@sanity/ui'\nimport React, {useCallback, useMemo, useId} from 'react'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {ValidationList} from 'sanity'\n\nexport interface ValidationMenuProps {\n  boundaryElement: HTMLDivElement | null\n  isOpen: boolean\n  setOpen: (val: boolean) => void\n}\n\nconst BUTTON_PROPS: Record<'error' | 'warning' | 'info', ButtonProps> = {\n  error: {\n    tone: 'critical',\n    icon: ErrorOutlineIcon,\n  },\n  warning: {\n    tone: 'caution',\n    icon: WarningOutlineIcon,\n  },\n  info: {\n    tone: 'primary',\n    icon: InfoOutlineIcon,\n  },\n}\n\nexport function ValidationMenu(props: ValidationMenuProps) {\n  const {boundaryElement, isOpen, setOpen} = props\n  const {onFocus, onPathOpen, schemaType, validation} = useDocumentPane()\n  const id = useId()\n  const hasValidationMarkers = validation.length > 0\n  const hasErrorMarkers = validation.some(isValidationErrorMarker)\n  const hasWarningMarkers = validation.some(isValidationWarningMarker)\n  const hasInfoMarkers = validation.some(isValidationInfoMarker)\n\n  const buttonProps = useMemo(() => {\n    if (hasErrorMarkers) return BUTTON_PROPS.error\n    if (hasWarningMarkers) return BUTTON_PROPS.warning\n    if (hasInfoMarkers) return BUTTON_PROPS.info\n    return undefined\n  }, [hasErrorMarkers, hasInfoMarkers, hasWarningMarkers])\n\n  const handleOpen = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onFocus, onPathOpen]\n  )\n\n  const handleClose = useCallback(() => setOpen(false), [setOpen])\n\n  if (!hasValidationMarkers) return null\n\n  return (\n    <MenuButton\n      id={id || ''}\n      button={\n        <Button\n          {...buttonProps}\n          title=\"Show validation issues\"\n          mode=\"bleed\"\n          data-testid=\"validation-list-button\"\n        />\n      }\n      menu={\n        <Menu open={isOpen}>\n          <ValidationList\n            documentType={schemaType}\n            validation={validation}\n            onClose={handleClose}\n            onFocus={handleOpen}\n          />\n        </Menu>\n      }\n      popover={{\n        portal: true,\n        boundaryElement: boundaryElement,\n        constrainSize: true,\n        preventOverflow: true,\n        width: 0,\n      }}\n      placement=\"bottom\"\n    />\n  )\n}\n", "import React, {ReactElement} from 'react'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {unstable_useValuePreview as useValuePreview} from 'sanity'\n\nexport function DocumentHeaderTitle(): ReactElement {\n  const {connectionState, schemaType, title, value: documentValue} = useDocumentPane()\n  const subscribed = Boolean(documentValue) && connectionState === 'connected'\n\n  const {error, value} = useValuePreview({\n    enabled: subscribed,\n    schemaType,\n    value: documentValue,\n  })\n\n  if (connectionState !== 'connected') {\n    return <></>\n  }\n\n  if (!documentValue) {\n    return <>New {schemaType?.title || schemaType?.name}</>\n  }\n\n  if (subscribed) {\n    if (error) {\n      return <>Error: {error.message}</>\n    }\n\n    return (\n      <>{value?.title || <span style={{color: 'var(--card-muted-fg-color)'}}>Untitled</span>}</>\n    )\n  }\n\n  return <>{title}</>\n}\n", "import {ArrowLeftIcon, CloseIcon, SplitVerticalIcon} from '@sanity/icons'\nimport {Button, Inline} from '@sanity/ui'\nimport {negate} from 'lodash'\nimport React, {createElement, memo, forwardRef, useMemo} from 'react'\nimport {PaneMenuItem} from '../../../../types'\nimport {PaneHeader, PaneContextMenuButton, usePaneRouter} from '../../../../components'\nimport {TimelineMenu} from '../../timeline'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDeskTool} from '../../../../useDeskTool'\nimport {DocumentHeaderTabs} from './DocumentHeaderTabs'\nimport {ValidationMenu} from './ValidationMenu'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\n\nexport interface DocumentPanelHeaderProps {\n  // TODO:\n  // eslint-disable-next-line react/no-unused-prop-types\n  rootElement: HTMLDivElement | null\n}\n\nconst isActionButton = (item: PaneMenuItem) => Boolean(item.showAsAction)\nconst isMenuButton = negate(isActionButton)\n\nexport const DocumentPanelHeader = memo(\n  forwardRef(({rootElement}: DocumentPanelHeaderProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n    const {\n      onMenuAction,\n      onPaneClose,\n      onPaneSplit,\n      historyController,\n      validation,\n      menuItems,\n      menuItemGroups,\n      schemaType,\n      ready,\n      views,\n      unstable_languageFilter,\n    } = useDocumentPane()\n    const {revTime: rev} = historyController\n    const {features} = useDeskTool()\n    const {index, BackLink, hasGroupSiblings} = usePaneRouter()\n    const contextMenuItems = useMemo(() => menuItems.filter(isMenuButton), [menuItems])\n    const [isValidationOpen, setValidationOpen] = React.useState<boolean>(false)\n    const showTabs = views.length > 1\n    const showVersionMenu = features.reviewChanges\n\n    // there are three kinds of buttons possible:\n    //\n    // 1. split pane - creates a new split pane\n    // 2. close split pane — closes the current split pane\n    // 3. close pane group — closes the current pane group\n\n    // show the split pane button if they're enabled and there is more than one\n    // view available to use to create a split view\n    const showSplitPaneButton = features.splitViews && onPaneSplit && views.length > 1\n\n    // show the split pane button close button if the split button is showing\n    // and there is more than one split pane open (aka has-siblings)\n    const showSplitPaneCloseButton = showSplitPaneButton && hasGroupSiblings\n\n    // show the pane group close button if the `showSplitPaneCloseButton` is\n    // _not_ showing (the split pane button replaces the group close button)\n    // and if the back button is not showing (the back button and the close\n    // button) do the same thing and shouldn't be shown at the same time)\n    const showPaneGroupCloseButton = !showSplitPaneCloseButton && !features.backButton\n\n    return (\n      <PaneHeader\n        ref={ref}\n        loading={!ready}\n        title={<DocumentHeaderTitle />}\n        tabs={showTabs && <DocumentHeaderTabs />}\n        backButton={\n          features.backButton &&\n          index > 0 && <Button as={BackLink} data-as=\"a\" icon={ArrowLeftIcon} mode=\"bleed\" />\n        }\n        subActions={\n          showVersionMenu && <TimelineMenu chunk={rev} mode=\"rev\" placement=\"bottom-end\" />\n        }\n        actions={\n          <Inline space={1}>\n            {unstable_languageFilter.length > 0 && (\n              <>\n                {unstable_languageFilter.map((languageFilterComponent, idx) => {\n                  return createElement(languageFilterComponent, {\n                    // eslint-disable-next-line react/no-array-index-key\n                    key: `language-filter-${idx}`,\n                    schemaType,\n                  })\n                })}\n              </>\n            )}\n\n            {validation.length > 0 && (\n              <ValidationMenu\n                boundaryElement={rootElement}\n                isOpen={isValidationOpen}\n                key=\"validation-menu\"\n                setOpen={setValidationOpen}\n              />\n            )}\n\n            <PaneContextMenuButton\n              itemGroups={menuItemGroups}\n              items={contextMenuItems}\n              key=\"context-menu\"\n              onAction={onMenuAction}\n            />\n\n            {showSplitPaneButton && (\n              <Button\n                icon={SplitVerticalIcon}\n                key=\"split-pane-button\"\n                mode=\"bleed\"\n                onClick={onPaneSplit}\n                title=\"Split pane right\"\n              />\n            )}\n\n            {showSplitPaneCloseButton && (\n              <Button\n                icon={CloseIcon}\n                key=\"close-view-button\"\n                mode=\"bleed\"\n                onClick={onPaneClose}\n                title=\"Close split pane\"\n              />\n            )}\n\n            {showPaneGroupCloseButton && (\n              <Button\n                icon={CloseIcon}\n                key=\"close-view-button\"\n                mode=\"bleed\"\n                title=\"Close pane group\"\n                as={BackLink}\n              />\n            )}\n          </Inline>\n        }\n      />\n    )\n  })\n)\n\nDocumentPanelHeader.displayName = 'DocumentPanelHeader'\n", "import {BoundaryElementProvider, Flex, PortalProvider, usePortal, useElementRect} from '@sanity/ui'\nimport React, {createElement, useEffect, useMemo, useRef, useState} from 'react'\nimport styled, {css} from 'styled-components'\nimport {PaneContent, usePaneLayout} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {InspectDialog} from '../inspectDialog'\nimport {useDeskTool} from '../../../useDeskTool'\nimport {ReferenceChangedBanner} from './ReferenceChangedBanner'\nimport {PermissionCheckBanner} from './PermissionCheckBanner'\nimport {FormView} from './documentViews'\nimport {DocumentPanelHeader} from './header'\nimport {ScrollContainer} from 'sanity'\n\ninterface DocumentPanelProps {\n  footerHeight: number | null\n  rootElement: HTMLDivElement | null\n  isInspectOpen: boolean\n  setDocumentPanelPortalElement: (el: HTMLElement | null) => void\n}\n\nconst Scroller = styled(ScrollContainer)<{$disabled: boolean}>(({$disabled}) => {\n  if ($disabled) {\n    return {height: '100%'}\n  }\n\n  return css`\n    height: 100%;\n    overflow: auto;\n    position: relative;\n    scroll-behavior: smooth;\n    outline: none;\n  `\n})\n\nexport const DocumentPanel = function DocumentPanel(props: DocumentPanelProps) {\n  const {footerHeight, isInspectOpen, rootElement, setDocumentPanelPortalElement} = props\n  const {\n    activeViewId,\n    displayed,\n    documentId,\n    editState,\n    value,\n    views,\n    ready,\n    schemaType,\n    permissions,\n    isPermissionsLoading,\n  } = useDocumentPane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const parentPortal = usePortal()\n  const {features} = useDeskTool()\n  const [headerElement, setHeaderElement] = useState<HTMLDivElement | null>(null)\n  const headerRect = useElementRect(headerElement)\n  const portalRef = useRef<HTMLDivElement | null>(null)\n  const [documentScrollElement, setDocumentScrollElement] = useState<HTMLDivElement | null>(null)\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n\n  const activeView = useMemo(\n    () => views.find((view) => view.id === activeViewId) || views[0] || {type: 'form'},\n    [activeViewId, views]\n  )\n\n  // Use a local portal container when split panes is supported\n  const portalElement: HTMLElement | null = features.splitPanes\n    ? portalRef.current || parentPortal.element\n    : parentPortal.element\n\n  // Calculate the height of the header\n  const margins: [number, number, number, number] = useMemo(() => {\n    if (layoutCollapsed) {\n      return [headerRect?.height || 0, 0, footerHeight ? footerHeight + 2 : 2, 0]\n    }\n\n    return [0, 0, 2, 0]\n  }, [layoutCollapsed, footerHeight, headerRect])\n\n  const formViewHidden = activeView.type !== 'form'\n\n  const activeViewNode = useMemo(\n    () =>\n      activeView.type === 'component' &&\n      activeView.component &&\n      createElement(activeView.component, {\n        document: {\n          draft: editState?.draft || null,\n          displayed: displayed || value,\n          historical: displayed,\n          published: editState?.published || null,\n        },\n        documentId,\n        options: activeView.options,\n        schemaType,\n      }),\n    [activeView, displayed, documentId, editState?.draft, editState?.published, schemaType, value]\n  )\n\n  // Scroll to top as `documentId` changes\n  useEffect(() => {\n    if (!documentScrollElement?.scrollTo) return\n    documentScrollElement.scrollTo(0, 0)\n  }, [documentId, documentScrollElement])\n\n  // Pass portal element to `DocumentPane`\n  useEffect(() => {\n    if (portalElement) {\n      setDocumentPanelPortalElement(portalElement)\n    }\n  }, [portalElement, setDocumentPanelPortalElement])\n\n  const inspectDialog = useMemo(() => {\n    return isInspectOpen ? <InspectDialog value={displayed || value} /> : null\n  }, [isInspectOpen, displayed, value])\n\n  return (\n    <Flex direction=\"column\" flex={2} overflow={layoutCollapsed ? undefined : 'hidden'}>\n      <DocumentPanelHeader rootElement={rootElement} ref={setHeaderElement} />\n\n      <PaneContent>\n        <PortalProvider\n          element={portalElement}\n          __unstable_elements={{documentScrollElement: documentScrollElement}}\n        >\n          <BoundaryElementProvider element={documentScrollElement}>\n            {activeView.type === 'form' && !isPermissionsLoading && ready && (\n              <>\n                <PermissionCheckBanner\n                  granted={Boolean(permissions?.granted)}\n                  requiredPermission={requiredPermission}\n                />\n                <ReferenceChangedBanner />\n              </>\n            )}\n\n            <Scroller\n              $disabled={layoutCollapsed || false}\n              data-testid=\"document-panel-scroller\"\n              ref={setDocumentScrollElement}\n            >\n              <FormView\n                hidden={formViewHidden}\n                key={documentId + (ready ? '_ready' : '_pending')}\n                margins={margins}\n              />\n              {activeViewNode}\n            </Scroller>\n\n            {inspectDialog}\n\n            <div data-testid=\"document-panel-portal\" ref={portalRef} />\n          </BoundaryElementProvider>\n        </PortalProvider>\n      </PaneContent>\n    </Flex>\n  )\n}\n", "import {DialogProps, Placement} from '@sanity/ui'\n\nexport const POPOVER_FALLBACK_PLACEMENTS: Placement[] = ['left', 'bottom']\n\nexport const DIALOG_WIDTH_TO_UI_WIDTH: {[key: string]: DialogProps['width']} = {\n  small: 0,\n  medium: 1,\n  large: 2,\n  full: 'auto',\n}\n", "import {\n  Box,\n  Button,\n  Flex,\n  Grid,\n  Popover,\n  Text,\n  useClickOutside,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport React, {useCallback, useState} from 'react'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\nimport {DocumentActionConfirmDialogProps} from 'sanity'\n\nexport function ConfirmDialog(props: {\n  dialog: DocumentActionConfirmDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<ConfirmDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\nfunction ConfirmDialogContent(props: {dialog: DocumentActionConfirmDialogProps}) {\n  const {dialog} = props\n  const {\n    cancelButtonIcon,\n    cancelButtonText,\n    confirmButtonIcon,\n    confirmButtonText,\n    // color,\n    message,\n    onCancel,\n    onConfirm,\n    tone,\n  } = dialog\n  const {isTopLayer} = useLayer()\n  const [element, setElement] = useState<HTMLElement | null>(null)\n\n  const handleClickOutside = useCallback(() => {\n    if (isTopLayer) onCancel()\n  }, [isTopLayer, onCancel])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onCancel()\n    },\n    [isTopLayer, onCancel]\n  )\n\n  useClickOutside(handleClickOutside, [element])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  return (\n    <Flex direction=\"column\" ref={setElement} style={{minWidth: 320 - 16, maxWidth: 400}}>\n      <Box flex={1} overflow=\"auto\" padding={4}>\n        <Text>{message}</Text>\n      </Box>\n      <Box paddingX={4} paddingY={3} style={{borderTop: '1px solid var(--card-border-color)'}}>\n        <Grid columns={2} gap={2}>\n          <Button\n            icon={cancelButtonIcon}\n            onClick={onCancel}\n            mode=\"ghost\"\n            text={cancelButtonText || 'Cancel'}\n          />\n          <Button\n            icon={confirmButtonIcon}\n            onClick={onConfirm}\n            text={confirmButtonText || 'Confirm'}\n            tone={tone}\n          />\n        </Grid>\n      </Box>\n    </Flex>\n  )\n}\n", "import {Box, Dialog} from '@sanity/ui'\nimport React, {useId} from 'react'\nimport {DIALOG_WIDTH_TO_UI_WIDTH} from './constants'\nimport {DocumentActionModalDialogProps, LegacyLayerProvider} from 'sanity'\n\nexport function ModalDialog(props: {dialog: DocumentActionModalDialogProps}) {\n  const {dialog} = props\n  const dialogId = useId()\n\n  const footer = dialog.footer && (\n    <Box paddingX={4} paddingY={3}>\n      {dialog.footer}\n    </Box>\n  )\n\n  return (\n    <LegacyLayerProvider zOffset=\"fullscreen\">\n      <Dialog\n        __unstable_hideCloseButton={dialog.showCloseButton === false}\n        footer={footer}\n        header={dialog.header}\n        id={dialogId}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClose={dialog.onClose}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClickOutside={dialog.onClose}\n        width={dialog.width === undefined ? 1 : DIALOG_WIDTH_TO_UI_WIDTH[dialog.width]}\n        // Custom portal element configured in `DocumentPane` so that the dialog is scoped to the current pane\n        portal=\"documentPanelPortalElement\"\n      >\n        <Box padding={4}>{dialog.content}</Box>\n      </Dialog>\n    </LegacyLayerProvider>\n  )\n}\n", "import {Popover, useClickOutside, useGlobalKeyDown, useLayer} from '@sanity/ui'\nimport React, {useCallback, useState} from 'react'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\nimport {DocumentActionPopoverDialogProps} from 'sanity'\n\nexport function PopoverDialog(props: {\n  dialog: DocumentActionPopoverDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<PopoverDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\nfunction PopoverDialogContent(props: {dialog: DocumentActionPopoverDialogProps}) {\n  const {dialog} = props\n  const {content, onClose} = dialog\n  const {isTopLayer} = useLayer()\n  const [element, setElement] = useState<HTMLElement | null>(null)\n\n  const handleClickOutside = useCallback(() => {\n    if (isTopLayer) onClose()\n  }, [isTopLayer, onClose])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onClose()\n    },\n    [isTopLayer, onClose]\n  )\n\n  useClickOutside(handleClickOutside, [element])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  return <div ref={setElement}>{content}</div>\n}\n", "import {Box, Dialog} from '@sanity/ui'\nimport React, {useId} from 'react'\nimport {ConfirmDialog} from './dialogs/ConfirmDialog'\nimport {ModalDialog} from './dialogs/ModalDialog'\nimport {PopoverDialog} from './dialogs/PopoverDialog'\nimport {DocumentActionDialogProps} from 'sanity'\n\nexport interface ActionStateDialogProps {\n  dialog: DocumentActionDialogProps\n  referenceElement?: HTMLElement | null\n}\n\nexport function ActionStateDialog(props: ActionStateDialogProps) {\n  const {dialog, referenceElement = null} = props\n  const modalId = useId()\n\n  if (dialog.type === 'confirm') {\n    return <ConfirmDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'popover') {\n    return <PopoverDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'dialog' || !dialog.type) {\n    return <ModalDialog dialog={dialog} />\n  }\n\n  // @todo: add validation?\n  const unknownModal: any = dialog\n\n  // eslint-disable-next-line no-console\n  console.warn(`Unsupported modal type ${unknownModal.type}`)\n\n  return (\n    <Dialog\n      id={modalId}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClose={unknownModal.onClose}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClickOutside={unknownModal.onClose}\n      width={2}\n    >\n      <Box padding={4}>\n        {unknownModal.content || (\n          <>\n            Unexpected modal type (<code>{unknownModal.type}</code>)\n          </>\n        )}\n      </Box>\n    </Dialog>\n  )\n}\n", "import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Box,\n  Button,\n  Flex,\n  Hotkeys,\n  Menu,\n  MenuButton,\n  MenuItem,\n  PopoverProps,\n  Text,\n  Tooltip,\n} from '@sanity/ui'\nimport React, {\n  createElement,\n  isValidElement,\n  useCallback,\n  useRef,\n  useState,\n  useMemo,\n  useId,\n} from 'react'\nimport {isValidElementType} from 'react-is'\nimport {ActionStateDialog} from './ActionStateDialog'\nimport {DocumentActionDescription, LegacyLayerProvider} from 'sanity'\n\nexport interface ActionMenuButtonProps {\n  actionStates: DocumentActionDescription[]\n  disabled: boolean\n}\n\nexport function ActionMenuButton(props: ActionMenuButtonProps) {\n  const {actionStates, disabled} = props\n  const idPrefix = useId()\n  const buttonRef = useRef<HTMLButtonElement | null>(null)\n  const [actionIndex, setActionIndex] = useState(-1)\n  const [referenceElement, setReferenceElement] = useState<HTMLButtonElement | null>(null)\n\n  const handleAction = useCallback((idx: number) => {\n    setActionIndex(idx)\n  }, [])\n\n  const popoverProps: PopoverProps = useMemo(\n    () => ({\n      placement: 'top-end',\n      portal: true,\n      preventOverflow: true,\n    }),\n    []\n  )\n\n  const currentAction = actionStates[actionIndex]\n\n  return (\n    <>\n      <MenuButton\n        id={`${idPrefix}-action-menu`}\n        button={\n          <Button\n            data-testid=\"action-menu-button\"\n            aria-label=\"Open document actions\"\n            disabled={disabled}\n            icon={ChevronDownIcon}\n            mode=\"ghost\"\n            ref={buttonRef}\n          />\n        }\n        menu={\n          <Menu padding={1}>\n            {actionStates.map((actionState, idx) => (\n              <ActionMenuListItem\n                actionState={actionState}\n                disabled={disabled}\n                index={idx}\n                // eslint-disable-next-line react/no-array-index-key\n                key={idx}\n                onAction={handleAction}\n              />\n            ))}\n          </Menu>\n        }\n        popover={popoverProps}\n        ref={setReferenceElement}\n      />\n\n      {currentAction && currentAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={currentAction.dialog} referenceElement={referenceElement} />\n        </LegacyLayerProvider>\n      )}\n    </>\n  )\n}\n\ninterface ActionMenuListItemProps {\n  actionState: DocumentActionDescription\n  disabled: boolean\n  index: number\n  onAction: (idx: number) => void\n}\n\nfunction ActionMenuListItem(props: ActionMenuListItemProps) {\n  const {actionState, disabled, index, onAction} = props\n  const {onHandle} = actionState\n\n  const handleClick = useCallback(() => {\n    onAction(index)\n    if (onHandle) onHandle()\n  }, [index, onAction, onHandle])\n\n  const tooltipContent = actionState.title && (\n    <Box padding={2}>\n      <Text size={1}>{actionState.title}</Text>\n    </Box>\n  )\n\n  return (\n    <MenuItem\n      data-testid={`action-${actionState.label.replace(' ', '')}`}\n      disabled={disabled || Boolean(actionState.disabled)}\n      onClick={handleClick}\n      padding={0}\n      tone={actionState.tone}\n    >\n      <Tooltip\n        content={tooltipContent}\n        disabled={!tooltipContent}\n        fallbackPlacements={['left', 'bottom']}\n        placement=\"top\"\n        portal\n      >\n        <Flex align=\"center\" paddingX={3}>\n          <Flex flex={1} paddingY={3}>\n            {actionState.icon && (\n              <Box marginRight={3}>\n                <Text>\n                  {isValidElement(actionState.icon) && actionState.icon}\n                  {isValidElementType(actionState.icon) && createElement(actionState.icon)}\n                </Text>\n              </Box>\n            )}\n\n            <Text>{actionState.label}</Text>\n          </Flex>\n\n          {actionState.shortcut && (\n            <Box marginLeft={3}>\n              <Hotkeys\n                keys={String(actionState.shortcut)\n                  .split('+')\n                  .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1))}\n              />\n            </Box>\n          )}\n        </Flex>\n      </Tooltip>\n    </MenuItem>\n  )\n}\n", "import {Box, Flex, Tooltip, Stack, Button, Hotkeys, LayerProvider, Text} from '@sanity/ui'\nimport React, {memo, useMemo, useState} from 'react'\nimport {RenderActionCollectionState} from '../../../components'\nimport {HistoryRestoreAction} from '../../../documentActions'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {ActionMenuButton} from './ActionMenuButton'\nimport {ActionStateDialog} from './ActionStateDialog'\nimport {DocumentActionDescription} from 'sanity'\n\ninterface DocumentStatusBarActionsInnerProps {\n  disabled: boolean\n  showMenu: boolean\n  states: DocumentActionDescription[]\n}\n\nfunction DocumentStatusBarActionsInner(props: DocumentStatusBarActionsInnerProps) {\n  const {disabled, showMenu, states} = props\n  const [firstActionState, ...menuActionStates] = states\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n\n  const tooltipContent = useMemo(() => {\n    if (!firstActionState || (!firstActionState.title && !firstActionState.shortcut)) return null\n\n    return (\n      <Flex padding={2} style={{maxWidth: 300}} align=\"center\">\n        <Text size={1}>{firstActionState.title}</Text>\n        {firstActionState.shortcut && (\n          <Box marginLeft={firstActionState.title ? 2 : 0}>\n            <Hotkeys\n              keys={String(firstActionState.shortcut)\n                .split('+')\n                .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1).toLowerCase())}\n            />\n          </Box>\n        )}\n      </Flex>\n    )\n  }, [firstActionState])\n\n  return (\n    <Flex>\n      {firstActionState && (\n        <LayerProvider zOffset={200}>\n          <Tooltip disabled={!tooltipContent} content={tooltipContent} portal placement=\"top\">\n            <Stack flex={1}>\n              <Button\n                data-testid={`action-${firstActionState.label}`}\n                disabled={disabled || Boolean(firstActionState.disabled)}\n                icon={firstActionState.icon}\n                // eslint-disable-next-line react/jsx-handler-names\n                onClick={firstActionState.onHandle}\n                ref={setButtonElement}\n                text={firstActionState.label}\n                tone={firstActionState.tone || 'primary'}\n              />\n            </Stack>\n          </Tooltip>\n        </LayerProvider>\n      )}\n\n      {showMenu && menuActionStates.length > 0 && (\n        <Box marginLeft={1}>\n          <ActionMenuButton actionStates={menuActionStates} disabled={disabled} />\n        </Box>\n      )}\n\n      {firstActionState && firstActionState.dialog && (\n        <ActionStateDialog dialog={firstActionState.dialog} referenceElement={buttonElement} />\n      )}\n    </Flex>\n  )\n}\n\nexport const DocumentStatusBarActions = memo(function DocumentStatusBarActions() {\n  const {actions, connectionState, documentId, editState} = useDocumentPane()\n  // const [isMenuOpen, setMenuOpen] = useState(false)\n  // const handleMenuOpen = useCallback(() => setMenuOpen(true), [])\n  // const handleMenuClose = useCallback(() => setMenuOpen(false), [])\n  // const handleActionComplete = useCallback(() => setMenuOpen(false), [])\n\n  if (!actions || !editState) {\n    return null\n  }\n\n  return (\n    <RenderActionCollectionState\n      // component={}\n      // onActionComplete={handleActionComplete}\n      actions={actions}\n      // @ts-expect-error TODO: fix the document actions\n      actionProps={editState}\n    >\n      {({states}) => (\n        <DocumentStatusBarActionsInner\n          disabled={connectionState !== 'connected'}\n          // isMenuOpen={isMenuOpen}\n          // onMenuOpen={handleMenuOpen}\n          // onMenuClose={handleMenuClose}\n          showMenu={actions.length > 1}\n          states={states}\n          // Use document ID as key to make sure that the actions state is reset when the document changes\n          key={documentId}\n        />\n      )}\n    </RenderActionCollectionState>\n  )\n})\n\nexport const HistoryStatusBarActions = memo(function HistoryStatusBarActions() {\n  const {connectionState, editState, historyController} = useDocumentPane()\n  const revision = historyController.revTime?.id || ''\n  const disabled = (editState?.draft || editState?.published || {})._rev === revision\n  const actionProps = useMemo(() => ({...(editState || {}), revision}), [editState, revision])\n  const historyActions = useMemo(() => [HistoryRestoreAction], [])\n\n  return (\n    <RenderActionCollectionState actions={historyActions} actionProps={actionProps as any}>\n      {({states}) => (\n        <DocumentStatusBarActionsInner\n          disabled={connectionState !== 'connected' || Boolean(disabled)}\n          showMenu={false}\n          states={states}\n        />\n      )}\n    </RenderActionCollectionState>\n  )\n})\n", "import {Badge, BadgeTone, Box, Inline, Text, Tooltip} from '@sanity/ui'\nimport React from 'react'\nimport {RenderBadgeCollectionState} from '../../../../components'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentBadgeDescription} from 'sanity'\n\ninterface DocumentBadgesInnerProps {\n  states: DocumentBadgeDescription[]\n}\n\nconst BADGE_TONES: Record<string, BadgeTone | undefined> = {\n  primary: 'primary',\n  success: 'positive',\n  warning: 'caution',\n  danger: 'critical',\n}\n\nfunction DocumentBadgesInner({states}: DocumentBadgesInnerProps) {\n  return (\n    <Inline space={1}>\n      {states.map((badge, index) => (\n        <Tooltip\n          content={\n            badge.title && (\n              <Box padding={2}>\n                <Text size={1}>{badge.title}</Text>\n              </Box>\n            )\n          }\n          disabled={!badge.title}\n          key={String(index)}\n          placement=\"top\"\n          portal\n        >\n          <Badge\n            fontSize={1}\n            mode=\"outline\"\n            paddingX={2}\n            paddingY={1}\n            radius={4}\n            tone={badge.color ? BADGE_TONES[badge.color] : undefined}\n            style={{whiteSpace: 'nowrap'}}\n          >\n            {badge.label}\n          </Badge>\n        </Tooltip>\n      ))}\n    </Inline>\n  )\n}\n\nexport function DocumentBadges() {\n  const {badges, editState} = useDocumentPane()\n\n  if (!editState || !badges) return null\n\n  return (\n    <RenderBadgeCollectionState badges={badges} badgeProps={editState as any}>\n      {({states}) => <DocumentBadgesInner states={states} />}\n    </RenderBadgeCollectionState>\n  )\n}\n", "import {Box, Button, Flex, Stack, Text, Tooltip} from '@sanity/ui'\nimport {PlayIcon, PublishIcon} from '@sanity/icons'\nimport React from 'react'\nimport styled from 'styled-components'\nimport {useTimeAgo} from 'sanity'\n\ninterface PublishStatusProps {\n  collapsed?: boolean\n  disabled: boolean\n  lastPublished?: string\n  lastUpdated?: string\n  liveEdit: boolean\n}\n\nconst Root = styled(Flex)`\n  cursor: default;\n`\n\nexport function PublishStatus(props: PublishStatusProps) {\n  const {collapsed, disabled, lastPublished, lastUpdated, liveEdit} = props\n\n  const lastPublishedTimeAgo = useTimeAgo(lastPublished || '', {minimal: true, agoSuffix: true})\n  const lastPublishedTime = useTimeAgo(lastPublished || '', {minimal: true})\n\n  const lastUpdatedTimeAgo = useTimeAgo(lastUpdated || '', {minimal: true, agoSuffix: true})\n  const lastUpdatedTime = useTimeAgo(lastUpdated || '', {minimal: true})\n\n  return (\n    <Root align=\"center\" data-ui=\"SessionLayout\" sizing=\"border\">\n      <Tooltip\n        placement=\"top\"\n        portal\n        content={\n          <Stack padding={3} space={3}>\n            <Text size={1} muted>\n              {liveEdit ? (\n                <>Last updated {lastUpdated ? lastUpdatedTimeAgo : lastPublishedTimeAgo}</>\n              ) : (\n                <>Last published {lastPublishedTimeAgo}</>\n              )}\n            </Text>\n          </Stack>\n        }\n      >\n        <Button\n          mode=\"bleed\"\n          tone={liveEdit ? 'critical' : 'positive'}\n          tabIndex={-1}\n          disabled={disabled}\n        >\n          <Flex align=\"center\">\n            <Box marginRight={collapsed ? 0 : 3}>\n              <Text size={2}>{liveEdit ? <PlayIcon /> : <PublishIcon />}</Text>\n            </Box>\n            {!collapsed && (\n              <Text size={1} weight=\"medium\">\n                {liveEdit ? (\n                  <>{lastUpdated ? lastUpdatedTime : lastPublishedTime}</>\n                ) : (\n                  lastPublishedTime\n                )}\n              </Text>\n            )}\n          </Flex>\n        </Button>\n      </Tooltip>\n    </Root>\n  )\n}\n", "import React, {ComponentProps} from 'react'\nimport {motion} from 'framer-motion'\nimport styled, {keyframes} from 'styled-components'\n\nconst StyledMotionPath = styled(motion.path)`\n  transform-origin: center;\n`\n\ntype MotionCircleProps = Omit<ComponentProps<typeof motion.circle>, 'd'>\ntype MotionPathProps = Omit<ComponentProps<typeof motion.path>, 'd'>\n\nconst Circle = (props: MotionCircleProps) => (\n  <motion.circle fill=\"none\" r=\"8\" cx=\"12.5\" cy=\"12.5\" strokeWidth=\"1.2\" {...props} />\n)\nconst Arrows = (props: MotionPathProps) => (\n  <StyledMotionPath\n    fill=\"none\"\n    d=\"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\"\n    {...props}\n  />\n)\nconst Checkmark = (props: MotionPathProps) => (\n  <motion.path d=\"M9.5 12.1316L11.7414 14.5L16 10\" {...props} />\n)\nconst Edit = (props: MotionPathProps) => (\n  <motion.path d=\"M15 7L18 10M6 19L7 15L17 5L20 8L10 18L6 19Z\" {...props} />\n)\n\nconst rotateAnimation = keyframes`\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\nconst RotateGroup = styled.g`\n  transform-origin: center;\n\n  &[data-rotate] {\n    animation: ${rotateAnimation} 1s ease-in-out infinite;\n  }\n`\n\nconst root = {\n  syncing: {\n    scale: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    scale: [1, 0.8, 1.2, 0.9, 1.1, 0.95, 1.05, 0.99, 1],\n    transition: {\n      duration: 0.5,\n      delay: 0.2,\n    },\n  },\n  changes: {transition: {duration: 0}},\n}\n\nconst circle = {\n  syncing: {\n    strokeDasharray: '0, 0, 23, 3, 23, 3',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    strokeDasharray: '0, 0, 23, 0, 23, 0',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    strokeDasharray: '0, 60, 23, 0, 23, 0',\n    strokeDashoffset: 0,\n    opacity: 0,\n    transition: {\n      duration: 0.5,\n    },\n  },\n}\n\nconst arrows = {\n  syncing: {\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    opacity: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    opacity: 0,\n  },\n}\n\nconst checkmark = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 1,\n    transition: {\n      delay: 0.4,\n      duration: 0.3,\n    },\n  },\n  changes: {\n    pathLength: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n}\n\nconst edit = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  changes: {\n    pathLength: 1,\n    transition: {\n      duration: 0.4,\n      delay: 0.5,\n    },\n  },\n}\n\ninterface AnimatedStatusIconProps {\n  status?: 'changes' | 'saved' | 'syncing'\n}\n\nexport function AnimatedStatusIcon(props: AnimatedStatusIconProps) {\n  const {status} = props\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 25 25\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.2\"\n      data-sanity-icon=\"\"\n    >\n      <motion.g variants={root} initial={status} animate={status}>\n        <RotateGroup data-rotate={status === 'changes' ? undefined : ''}>\n          <Arrows variants={arrows} initial={status} animate={status} />\n          <Circle variants={circle} initial={status} animate={status} />\n        </RotateGroup>\n        <Checkmark variants={checkmark} initial={status} animate={status} />\n        <Edit variants={edit} initial={status} animate={status} />\n      </motion.g>\n    </svg>\n  )\n}\n", "import React, {useMemo} from 'react'\nimport {Box, Button, ButtonProps, Flex, Stack, Text, Tooltip} from '@sanity/ui'\nimport {AnimatedStatusIcon} from './AnimatedStatusIcon'\nimport {useTimeAgo} from 'sanity'\n\ninterface ReviewChangesButtonProps extends React.HTMLProps<HTMLButtonElement> {\n  status?: 'changes' | 'saved' | 'syncing'\n  lastUpdated?: string\n  collapsed?: boolean\n}\n\nconst ReviewButton = React.forwardRef(function ReviewButton(\n  props: ReviewChangesButtonProps & ButtonProps,\n  ref: React.ForwardedRef<HTMLButtonElement>\n) {\n  const {collapsed, status, lastUpdated, ...rest} = props\n  const lastUpdatedTime = useTimeAgo(lastUpdated || '', {minimal: true})\n  const lastUpdatedTimeAgo = useTimeAgo(lastUpdated || '', {minimal: true, agoSuffix: true})\n\n  const buttonProps: ButtonProps = useMemo(() => {\n    if (status === 'syncing') {\n      return {\n        text: 'Saving...',\n        tone: undefined,\n      }\n    }\n    if (status === 'changes') {\n      return {\n        text: lastUpdatedTime,\n        tone: 'caution',\n      }\n    }\n    if (status === 'saved') {\n      return {\n        text: 'Saved!',\n        tone: 'positive',\n      }\n    }\n\n    return {}\n  }, [status, lastUpdatedTime])\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <Tooltip\n      placement=\"top\"\n      portal\n      disabled={status !== 'changes'}\n      content={\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"semibold\">\n            Review changes\n          </Text>\n          <Text size={1} muted>\n            Changes saved {lastUpdatedTimeAgo}\n          </Text>\n        </Stack>\n      }\n    >\n      <Button\n        mode=\"bleed\"\n        justify=\"flex-start\"\n        tone={buttonProps?.tone}\n        {...rest}\n        data-testid=\"review-changes-button\"\n        ref={ref}\n      >\n        <Flex align=\"center\">\n          <Box marginRight={collapsed ? 0 : 3}>\n            <Text>\n              <AnimatedStatusIcon status={status} />\n            </Text>\n          </Box>\n          {!collapsed && (\n            <Text size={1} weight=\"medium\">\n              {buttonProps?.text}\n            </Text>\n          )}\n        </Flex>\n      </Button>\n    </Tooltip>\n  )\n})\n\nexport const ReviewChangesButton = React.memo(ReviewButton)\n", "import {Box, Flex, useElementRect} from '@sanity/ui'\nimport React, {useEffect, useMemo, useState, memo, useLayoutEffect} from 'react'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentBadges} from './DocumentBadges'\nimport {PublishStatus} from './PublishStatus'\nimport {ReviewChangesButton} from './ReviewChangesButton'\nimport {useSyncState} from 'sanity'\n\nconst SYNCING_TIMEOUT = 1000\nconst SAVED_TIMEOUT = 3000\n\nexport const DocumentSparkline = memo(function DocumentSparkline() {\n  const {\n    changesOpen,\n    documentId,\n    documentType,\n    editState,\n    onHistoryClose,\n    onHistoryOpen,\n    historyController,\n    value,\n  } = useDocumentPane()\n  const syncState = useSyncState(documentId, documentType)\n\n  const lastUpdated = value?._updatedAt\n  const lastPublished = editState?.published?._updatedAt\n  const showingRevision = historyController.onOlderRevision()\n  const liveEdit = Boolean(editState?.liveEdit)\n  const published = Boolean(editState?.published)\n  const changed = Boolean(editState?.draft)\n\n  const [rootFlexElement, setRootFlexElement] = useState<HTMLDivElement | null>(null)\n  const rootFlexRect = useElementRect(rootFlexElement)\n  const collapsed = !rootFlexRect || rootFlexRect?.width < 300\n\n  const [status, setStatus] = useState<'saved' | 'syncing' | null>(null)\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    // Schedule an update to set the status to 'saved' when status changed to 'syncing.\n    // We use `syncState.isSyncing` here to avoid the status being set to 'saved' when the document is syncing.\n    if (status === 'syncing' && !syncState.isSyncing) {\n      const timerId = setTimeout(() => setStatus('saved'), SYNCING_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n    // Schedule an update to clear the status when status changed to 'saved'\n    if (status === 'saved') {\n      const timerId = setTimeout(() => setStatus(null), SAVED_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n  }, [status, lastUpdated, syncState.isSyncing])\n\n  // Clear the status when documentId changes to make sure we don't show the wrong status when opening a new document\n  useLayoutEffect(() => {\n    setStatus(null)\n  }, [documentId])\n\n  // Set status to 'syncing' when lastUpdated changes and we go from not syncing to syncing\n  useLayoutEffect(() => {\n    if (syncState.isSyncing) {\n      setStatus('syncing')\n    }\n  }, [syncState.isSyncing, lastUpdated])\n\n  const reviewButton = useMemo(\n    () => (\n      <ReviewChangesButton\n        lastUpdated={lastUpdated}\n        status={status || (changed ? 'changes' : undefined)}\n        onClick={changesOpen ? onHistoryClose : onHistoryOpen}\n        disabled={showingRevision}\n        selected={changesOpen}\n        collapsed={collapsed}\n      />\n    ),\n    [\n      changed,\n      changesOpen,\n      onHistoryClose,\n      onHistoryOpen,\n      lastUpdated,\n      showingRevision,\n      status,\n      collapsed,\n    ]\n  )\n\n  const publishStatus = useMemo(\n    () =>\n      (liveEdit || published) && (\n        <Box marginRight={1}>\n          <PublishStatus\n            disabled={showingRevision}\n            lastPublished={lastPublished}\n            lastUpdated={lastUpdated}\n            liveEdit={liveEdit}\n            collapsed={collapsed}\n          />\n        </Box>\n      ),\n    [collapsed, lastPublished, lastUpdated, liveEdit, published, showingRevision]\n  )\n\n  return (\n    <Flex align=\"center\" data-ui=\"DocumentSparkline\" ref={setRootFlexElement}>\n      {publishStatus}\n\n      <Flex align=\"center\" flex={1}>\n        {reviewButton}\n        {!collapsed && (\n          <Box marginLeft={3}>\n            <DocumentBadges />\n          </Box>\n        )}\n      </Flex>\n    </Flex>\n  )\n})\n", "import React, {useMemo} from 'react'\nimport styled from 'styled-components'\nimport {Box, Flex} from '@sanity/ui'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentStatusBarActions, HistoryStatusBarActions} from './DocumentStatusBarActions'\nimport {DocumentSparkline} from './sparkline/DocumentSparkline'\n\nexport interface DocumentStatusBarProps {\n  actionsBoxRef?: React.Ref<HTMLDivElement>\n}\n\nconst DocumentActionsBox = styled(Box)`\n  min-width: 10em;\n  max-width: 16em;\n`\n\nexport function DocumentStatusBar(props: DocumentStatusBarProps) {\n  const {actionsBoxRef} = props\n  const {badges, historyController} = useDocumentPane()\n  const showingRevision = historyController.onOlderRevision()\n\n  return useMemo(\n    () => (\n      <Box paddingLeft={2} paddingRight={[2, 3]} paddingY={2}>\n        <Flex align=\"center\">\n          <Box flex={[1, 2]}>{badges && <DocumentSparkline />}</Box>\n\n          <DocumentActionsBox flex={1} marginLeft={[1, 3]} ref={actionsBoxRef}>\n            {showingRevision ? <HistoryStatusBarActions /> : <DocumentStatusBarActions />}\n          </DocumentActionsBox>\n        </Flex>\n      </Box>\n    ),\n    [actionsBoxRef, badges, showingRevision]\n  )\n}\n", "import isHotkey from 'is-hotkey'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {ActionStateDialog} from '../statusBar'\nimport {Pane, RenderActionCollectionState} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentActionDescription, DocumentActionProps, LegacyLayerProvider} from 'sanity'\n\nexport interface KeyboardShortcutResponderProps {\n  actionsBoxElement: HTMLElement | null\n  activeIndex: number\n  currentMinWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  onActionStart: (index: number) => void\n  rootRef: React.Ref<HTMLDivElement>\n  states: DocumentActionDescription[]\n}\n\nfunction KeyboardShortcutResponder(\n  props: KeyboardShortcutResponderProps & Omit<React.HTMLProps<HTMLDivElement>, 'height'>\n) {\n  const {\n    actionsBoxElement,\n    activeIndex,\n    children,\n    id,\n    onActionStart,\n    onKeyDown,\n    rootRef,\n    states,\n    ...rest\n  } = props\n\n  const activeAction = states[activeIndex]\n\n  const handleKeyDown = useCallback(\n    (event: any) => {\n      const matchingStates = states.filter(\n        (state) => state.shortcut && isHotkey(state.shortcut, event)\n      )\n\n      const matchingState = matchingStates[0]\n\n      if (matchingStates.length > 1) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `Keyboard shortcut conflict: More than one document action matches the shortcut \"${matchingState.shortcut}\"`\n        )\n      }\n\n      if (matchingState && !matchingState.disabled && matchingState.onHandle) {\n        event.preventDefault()\n        matchingState.onHandle()\n        onActionStart(states.indexOf(matchingState))\n        return\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event)\n      }\n    },\n    [onActionStart, onKeyDown, states]\n  )\n\n  return (\n    <Pane id={id} onKeyDown={handleKeyDown} tabIndex={-1} {...rest} ref={rootRef}>\n      {children}\n\n      {activeAction && activeAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={activeAction.dialog} referenceElement={actionsBoxElement} />\n        </LegacyLayerProvider>\n      )}\n    </Pane>\n  )\n}\n\nexport interface DocumentActionShortcutsProps {\n  actionsBoxElement: HTMLElement | null\n  currentMinWidth?: number\n  debug?: boolean\n  flex: number\n  id: string\n  minWidth: number\n  rootRef: React.Ref<HTMLDivElement>\n}\n\nexport const DocumentActionShortcuts = React.memo(\n  (props: DocumentActionShortcutsProps & React.HTMLProps<HTMLDivElement>) => {\n    const {actionsBoxElement, children, ...rest} = props\n    const {actions, editState} = useDocumentPane()\n    const [activeIndex, setActiveIndex] = useState(-1)\n\n    const onActionStart = useCallback((idx: number) => {\n      setActiveIndex(idx)\n    }, [])\n\n    const actionProps: DocumentActionProps | null = useMemo(\n      () =>\n        editState && {\n          ...editState,\n\n          // @todo: what to call here?\n          onComplete: () => undefined,\n\n          // @todo: get revision string\n          revision: undefined,\n        },\n      [editState]\n    )\n\n    if (!actionProps || !actions) return null\n\n    return (\n      <RenderActionCollectionState actionProps={actionProps} actions={actions}>\n        {({states}) => (\n          <KeyboardShortcutResponder\n            {...rest}\n            activeIndex={activeIndex}\n            actionsBoxElement={actionsBoxElement}\n            onActionStart={onActionStart}\n            states={states}\n          >\n            {children}\n          </KeyboardShortcutResponder>\n        )}\n      </RenderActionCollectionState>\n    )\n  }\n)\n\nDocumentActionShortcuts.displayName = 'DocumentActionShortcuts'\n", "import {\n  BoundaryElementProvider,\n  Card,\n  Code,\n  DialogProvider,\n  DialogProviderProps,\n  Flex,\n  PortalProvider,\n  Stack,\n  Text,\n  useElementRect,\n} from '@sanity/ui'\nimport React, {memo, useCallback, useMemo, useState} from 'react'\nimport styled from 'styled-components'\nimport {fromString as pathFromString} from '@sanity/util/paths'\nimport {Path} from '@sanity/types'\nimport {DocumentPaneNode} from '../../types'\nimport {usePaneRouter} from '../../components'\nimport {PaneFooter} from '../../components/pane'\nimport {usePaneLayout} from '../../components/pane/usePaneLayout'\nimport {useDeskTool} from '../../useDeskTool'\nimport {ErrorPane} from '../error'\nimport {LoadingPane} from '../loading'\nimport {DocumentOperationResults} from './DocumentOperationResults'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {ChangesPanel} from './changesPanel'\nimport {DocumentPanel} from './documentPanel'\nimport {DocumentActionShortcuts} from './keyboardShortcuts'\nimport {DocumentStatusBar} from './statusBar'\nimport {DocumentPaneProviderProps} from './types'\nimport {useDocumentPane} from './useDocumentPane'\nimport {\n  ChangeConnectorRoot,\n  ReferenceInputOptionsProvider,\n  SourceProvider,\n  isDev,\n  useDocumentType,\n  useSource,\n  useTemplatePermissions,\n  useTemplates,\n  useZIndex,\n} from 'sanity'\n\ntype DocumentPaneOptions = DocumentPaneNode['options']\n\nconst DOCUMENT_PANEL_MIN_WIDTH = 320\nconst DOCUMENT_PANEL_INITIAL_MIN_WIDTH = 600\nconst CHANGES_PANEL_MIN_WIDTH = 320\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrow screens (< 512px).\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nconst StyledChangeConnectorRoot = styled(ChangeConnectorRoot)`\n  flex: 1;\n  display: flex;\n  min-height: 0;\n  min-width: 0;\n`\n\nexport const DocumentPane = memo(function DocumentPane(props: DocumentPaneProviderProps) {\n  const {name: parentSourceName} = useSource()\n\n  return (\n    <SourceProvider name={props.pane.source || parentSourceName}>\n      <DocumentPaneInner {...props} />\n    </SourceProvider>\n  )\n})\n\nfunction DocumentPaneInner(props: DocumentPaneProviderProps) {\n  const {pane, paneKey} = props\n  const {resolveNewDocumentOptions} = useSource().document\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n  const {documentType, isLoaded: isDocumentLoaded} = useDocumentType(options.id, options.type)\n\n  const templateItems = useMemo(() => {\n    return resolveNewDocumentOptions({\n      type: 'global',\n    })\n  }, [resolveNewDocumentOptions])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n  const isLoaded = isDocumentLoaded && !isTemplatePermissionsLoading\n\n  const providerProps = useMemo(() => {\n    return isLoaded && documentType && options.type !== documentType\n      ? mergeDocumentType(props, options, documentType)\n      : props\n  }, [props, documentType, isLoaded, options])\n\n  const {ReferenceChildLink, handleEditReference, groupIndex, routerPanesState} = paneRouter\n  const childParams = routerPanesState[groupIndex + 1]?.[0].params || {}\n  const routerPanesStateLength = routerPanesState.length\n  const {parentRefPath} = childParams\n\n  const activePath: {path: Path; state: 'selected' | 'pressed' | 'none'} = useMemo(() => {\n    return parentRefPath\n      ? {\n          path: pathFromString(parentRefPath),\n          state:\n            // eslint-disable-next-line no-nested-ternary\n            groupIndex >= routerPanesStateLength - 1\n              ? 'none'\n              : groupIndex >= routerPanesStateLength - 2\n              ? 'selected'\n              : 'pressed',\n        }\n      : {path: [], state: 'none'}\n  }, [parentRefPath, groupIndex, routerPanesStateLength])\n\n  if (options.type === '*' && !isLoaded) {\n    return <LoadingPane flex={2.5} minWidth={320} paneKey={paneKey} title=\"Loading document…\" />\n  }\n\n  if (!documentType) {\n    return (\n      <ErrorPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={<>The document was not found</>}\n      >\n        <Stack space={4}>\n          <Text as=\"p\">\n            The document type is not defined, and a document with the <code>{options.id}</code>{' '}\n            identifier could not be found.\n          </Text>\n        </Stack>\n      </ErrorPane>\n    )\n  }\n\n  return (\n    <DocumentPaneProvider\n      // this needs to be here to avoid formState from being re-used across (incompatible) document types\n      // see https://github.com/sanity-io/sanity/discussions/3794 for a description of the problem\n      key={documentType}\n      {...providerProps}\n    >\n      {/* NOTE: this is a temporary location for this provider until we */}\n      {/* stabilize the reference input options formally in the form builder */}\n      {/* eslint-disable-next-line react/jsx-pascal-case */}\n      <ReferenceInputOptionsProvider\n        EditReferenceLinkComponent={ReferenceChildLink as any}\n        onEditReference={handleEditReference as any}\n        initialValueTemplateItems={templatePermissions}\n        activePath={activePath}\n      >\n        <InnerDocumentPane />\n      </ReferenceInputOptionsProvider>\n    </DocumentPaneProvider>\n  )\n}\n\nfunction usePaneOptions(\n  options: DocumentPaneOptions,\n  params: Record<string, string | undefined> = {}\n): DocumentPaneOptions {\n  const templates = useTemplates()\n\n  return useMemo(() => {\n    // The document type is provided, so return\n    if (options.type && options.type !== '*') {\n      return options\n    }\n\n    // Attempt to derive document type from the template configuration\n    const templateName = options.template || params.template\n    const template = templateName ? templates.find((t) => t.id === templateName) : undefined\n    const documentType = template?.schemaType\n\n    // No document type was found in a template\n    if (!documentType) {\n      return options\n    }\n\n    // The template provided the document type, so modify the pane’s `options` property\n    return {...options, type: documentType}\n  }, [options, params.template, templates])\n}\n\nfunction mergeDocumentType(\n  props: DocumentPaneProviderProps,\n  options: DocumentPaneOptions,\n  documentType: string\n): DocumentPaneProviderProps {\n  return {\n    ...props,\n    pane: {\n      ...props.pane,\n      options: {...options, type: documentType},\n    },\n  }\n}\n\nfunction InnerDocumentPane() {\n  const {\n    changesOpen,\n    documentType,\n    onFocus,\n    onPathOpen,\n    onHistoryOpen,\n    onKeyUp,\n    inspectOpen,\n    paneKey,\n    schemaType,\n    value,\n  } = useDocumentPane()\n  const {features} = useDeskTool()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const zOffsets = useZIndex()\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const [footerElement, setFooterElement] = useState<HTMLDivElement | null>(null)\n  const [actionsBoxElement, setActionsBoxElement] = useState<HTMLDivElement | null>(null)\n  const [documentPanelPortalElement, setDocumentPanelPortalElement] = useState<HTMLElement | null>(\n    null\n  )\n  const footerRect = useElementRect(footerElement)\n  const footerH = footerRect?.height\n\n  const documentPanel = useMemo(\n    () => (\n      <DocumentPanel\n        footerHeight={footerH || null}\n        isInspectOpen={inspectOpen}\n        rootElement={rootElement}\n        setDocumentPanelPortalElement={setDocumentPanelPortalElement}\n      />\n    ),\n    [footerH, rootElement, inspectOpen]\n  )\n\n  // These providers are added because we want the dialogs in `DocumentStatusBar` to be scoped to the document pane.\n  // The portal element comes from `DocumentPanel`.\n  const footer = useMemo(\n    () => (\n      <PortalProvider __unstable_elements={{documentPanelPortalElement}}>\n        <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n          <PaneFooter ref={setFooterElement}>\n            <DocumentStatusBar actionsBoxRef={setActionsBoxElement} />\n          </PaneFooter>\n        </DialogProvider>\n      </PortalProvider>\n    ),\n    [documentPanelPortalElement, zOffsets.portal]\n  )\n\n  const changesPanel = useMemo(() => {\n    if (!features.reviewChanges) return null\n    if (!changesOpen) return null\n\n    return (\n      <BoundaryElementProvider element={rootElement}>\n        <ChangesPanel />\n      </BoundaryElementProvider>\n    )\n  }, [changesOpen, features.reviewChanges, rootElement])\n\n  const onConnectorSetFocus = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onPathOpen, onFocus]\n  )\n\n  const children = useMemo(() => {\n    if (!schemaType) {\n      return (\n        <ErrorPane\n          flex={2.5}\n          minWidth={320}\n          paneKey={paneKey}\n          title={\n            <>\n              Unknown document type: <code>{documentType}</code>\n            </>\n          }\n          tone=\"caution\"\n        >\n          <Stack space={4}>\n            {documentType && (\n              <Text as=\"p\">\n                This document has the schema type <code>{documentType}</code>, which is not defined\n                as a type in the local content studio schema.\n              </Text>\n            )}\n\n            {!documentType && (\n              <Text as=\"p\">\n                This document does not exist, and no schema type was specified for it.\n              </Text>\n            )}\n\n            {isDev && value && (\n              <>\n                <Text as=\"p\">Here is the JSON representation of the document:</Text>\n                <Card padding={3} overflow=\"auto\" radius={2} shadow={1} tone=\"inherit\">\n                  <Code language=\"json\" size={[1, 1, 2]}>\n                    {JSON.stringify(value, null, 2)}\n                  </Code>\n                </Card>\n              </>\n            )}\n          </Stack>\n        </ErrorPane>\n      )\n    }\n\n    return (\n      <>\n        <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n          <Flex direction=\"column\" flex={1} height={layoutCollapsed ? undefined : 'fill'}>\n            <StyledChangeConnectorRoot\n              data-testid=\"change-connector-root\"\n              isReviewChangesOpen={changesOpen}\n              onOpenReviewChanges={onHistoryOpen}\n              onSetFocus={onConnectorSetFocus}\n            >\n              {documentPanel}\n              {changesPanel}\n            </StyledChangeConnectorRoot>\n          </Flex>\n        </DialogProvider>\n        {footer}\n        <DocumentOperationResults />\n      </>\n    )\n  }, [\n    schemaType,\n    zOffsets.portal,\n    layoutCollapsed,\n    changesOpen,\n    onHistoryOpen,\n    onConnectorSetFocus,\n    documentPanel,\n    changesPanel,\n    footer,\n    paneKey,\n    documentType,\n    value,\n  ])\n\n  const currentMinWidth = changesOpen\n    ? DOCUMENT_PANEL_INITIAL_MIN_WIDTH + CHANGES_PANEL_MIN_WIDTH\n    : DOCUMENT_PANEL_INITIAL_MIN_WIDTH\n\n  const minWidth = changesOpen\n    ? DOCUMENT_PANEL_MIN_WIDTH + CHANGES_PANEL_MIN_WIDTH\n    : DOCUMENT_PANEL_MIN_WIDTH\n\n  return (\n    <DocumentActionShortcuts\n      actionsBoxElement={actionsBoxElement}\n      currentMinWidth={currentMinWidth}\n      data-testid=\"document-pane\"\n      flex={2.5}\n      id={paneKey}\n      minWidth={minWidth}\n      onKeyUp={onKeyUp}\n      rootRef={setRootElement}\n    >\n      {children}\n    </DocumentActionShortcuts>\n  )\n}\n", "import {WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Container, Flex, Stack, Text} from '@sanity/ui'\nimport React from 'react'\n\nexport function NoDocumentTypesScreen() {\n  return (\n    <Card height=\"fill\">\n      <Flex align=\"center\" height=\"fill\" justify=\"center\" padding={4} sizing=\"border\">\n        <Container width={0}>\n          <Card padding={4} radius={2} shadow={1} tone=\"caution\">\n            <Flex>\n              <Box>\n                <Text size={1}>\n                  <WarningOutlineIcon />\n                </Text>\n              </Box>\n              <Stack flex={1} marginLeft={3} space={3}>\n                <Text as=\"h1\" size={1} weight=\"bold\">\n                  No document types\n                </Text>\n                <Text as=\"p\" muted size={1}>\n                  Please define at least one document type in your schema.\n                </Text>\n                <Text as=\"p\" muted size={1}>\n                  <a\n                    href=\"https://www.sanity.io/docs/create-a-schema-and-configure-sanity-studio\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    Learn how to add a document type &rarr;\n                  </a>\n                </Text>\n              </Stack>\n            </Flex>\n          </Card>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n", "import {PortalProvider, useToast, useMediaIndex} from '@sanity/ui'\nimport React, {memo, Fragment, useState, useEffect, useCallback} from 'react'\nimport styled from 'styled-components'\nimport isHotkey from 'is-hotkey'\nimport {LOADING_PANE} from '../../constants'\nimport {LoadingPane, DeskToolPane} from '../../panes'\nimport {useResolvedPanes} from '../../structureResolvers'\nimport {PaneNode} from '../../types'\nimport {PaneLayout} from '../pane'\nimport {useDeskTool} from '../../useDeskTool'\nimport {NoDocumentTypesScreen} from './NoDocumentTypesScreen'\nimport {useRouter} from 'sanity/router'\nimport {useSchema, _isCustomDocumentTypeDefinition} from 'sanity'\n\ninterface DeskToolProps {\n  onPaneChange: (panes: Array<PaneNode | typeof LOADING_PANE>) => void\n}\n\nconst StyledPaneLayout = styled(PaneLayout)`\n  min-height: 100%;\n  min-width: 320px;\n`\n\nconst isSaveHotkey = isHotkey('mod+s')\n\n/**\n * @internal\n */\nexport const DeskTool = memo(function DeskTool({onPaneChange}: DeskToolProps) {\n  const {navigate} = useRouter()\n  const {push: pushToast} = useToast()\n  const schema = useSchema()\n  const mediaIndex = useMediaIndex()\n  const {layoutCollapsed, setLayoutCollapsed} = useDeskTool()\n  const {paneDataItems, resolvedPanes, routerPanes} = useResolvedPanes()\n\n  const [portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n\n  const handleRootCollapse = useCallback(() => setLayoutCollapsed(true), [setLayoutCollapsed])\n  const handleRootExpand = useCallback(() => setLayoutCollapsed(false), [setLayoutCollapsed])\n\n  useEffect(() => {\n    // we check for length before emitting here to skip the initial empty array\n    // state from the `useResolvedPanes` hook. there should always be a root\n    // pane emitted on subsequent emissions\n    if (resolvedPanes.length) {\n      onPaneChange(resolvedPanes)\n    }\n  }, [onPaneChange, resolvedPanes])\n\n  // The pane layout is \"collapsed\" on small screens, and only shows 1 pane at a time.\n  // Remove pane siblings (i.e. split panes) as the pane layout collapses.\n  useEffect(() => {\n    if (mediaIndex > 1 || !layoutCollapsed) return\n    const hasSiblings = routerPanes.some((group) => group.length > 1)\n\n    if (!hasSiblings) return\n    const withoutSiblings = routerPanes.map((group) => [group[0]])\n\n    navigate({panes: withoutSiblings}, {replace: true})\n  }, [mediaIndex, navigate, layoutCollapsed, routerPanes])\n\n  useEffect(() => {\n    const handleGlobalKeyDown = (event: KeyboardEvent) => {\n      // Prevent `Cmd+S`\n      if (isSaveHotkey(event)) {\n        event.preventDefault()\n\n        pushToast({\n          closable: true,\n          id: 'auto-save-message',\n          status: 'info',\n          title: 'Your work is automatically saved!',\n          duration: 4000,\n        })\n      }\n    }\n\n    window.addEventListener('keydown', handleGlobalKeyDown)\n    return () => window.removeEventListener('keydown', handleGlobalKeyDown)\n  }, [pushToast])\n\n  const hasDefinedDocumentTypes = schema._original?.types.some(_isCustomDocumentTypeDefinition)\n\n  if (!hasDefinedDocumentTypes) {\n    return <NoDocumentTypesScreen />\n  }\n\n  return (\n    <PortalProvider element={portalElement || null}>\n      <StyledPaneLayout\n        flex={1}\n        height={layoutCollapsed ? undefined : 'fill'}\n        minWidth={512}\n        onCollapse={handleRootCollapse}\n        onExpand={handleRootExpand}\n      >\n        {paneDataItems.map(\n          ({\n            active,\n            childItemId,\n            groupIndex,\n            itemId,\n            key: paneKey,\n            pane,\n            index: paneIndex,\n            params: paneParams,\n            path,\n            payload,\n            siblingIndex,\n            selected,\n          }) => (\n            <Fragment key={`${pane === LOADING_PANE ? 'loading' : pane.type}-${paneIndex}`}>\n              {pane === LOADING_PANE ? (\n                <LoadingPane paneKey={paneKey} path={path} selected={selected} />\n              ) : (\n                <DeskToolPane\n                  active={active}\n                  groupIndex={groupIndex}\n                  index={paneIndex}\n                  pane={pane}\n                  childItemId={childItemId}\n                  itemId={itemId}\n                  paneKey={paneKey}\n                  params={paneParams}\n                  payload={payload}\n                  selected={selected}\n                  siblingIndex={siblingIndex}\n                />\n              )}\n            </Fragment>\n          )\n        )}\n      </StyledPaneLayout>\n      <div data-portal=\"\" ref={setPortalElement} />\n    </PortalProvider>\n  )\n})\n", "import React, {useEffect, useMemo, useState} from 'react'\nimport {ErrorBoundary} from '@sanity/ui'\nimport {DeskToolOptions} from '../../types'\nimport {DeskToolProvider} from '../../DeskToolProvider'\nimport {setActivePanes} from '../../getIntentState'\nimport {IntentResolver} from './intentResolver'\nimport {StructureError} from './StructureError'\nimport {DeskTool} from './DeskTool'\nimport {useRouter} from 'sanity/router'\nimport {SourceProvider, useWorkspace, Tool, isRecord} from 'sanity'\n\nconst EMPTY_RECORD = {}\n\ninterface DeskToolBoundaryProps {\n  tool: Tool<DeskToolOptions>\n}\n\nexport function DeskToolBoundary({tool: {options}}: DeskToolBoundaryProps) {\n  const {unstable_sources: sources} = useWorkspace()\n  const [firstSource] = sources\n  const {source, defaultDocumentNode, structure} = options || {}\n\n  const {state: routerState} = useRouter()\n  const intent = useMemo(() => {\n    const intentName = typeof routerState.intent === 'string' ? routerState.intent : undefined\n    const params = isRecord(routerState.params) ? routerState.params : EMPTY_RECORD\n    const payload = routerState.payload\n\n    return intentName ? {intent: intentName, params, payload} : undefined\n  }, [routerState])\n\n  // Set active panes to blank on mount and unmount\n  useEffect(() => {\n    setActivePanes([])\n    return () => setActivePanes([])\n  }, [])\n\n  const [{error}, setError] = useState<{error: unknown}>({error: null})\n  // this re-throws if the error it catches is not a PaneResolutionError\n  if (error) return <StructureError error={error} />\n\n  return (\n    <ErrorBoundary onCatch={setError}>\n      <SourceProvider name={source || firstSource.name}>\n        <DeskToolProvider defaultDocumentNode={defaultDocumentNode} structure={structure}>\n          {/* when an intent is found, we render the intent resolver component */}\n          {/* which asynchronously resolves the intent then navigates to it */}\n          {intent ? <IntentResolver {...intent} /> : <DeskTool onPaneChange={setActivePanes} />}\n        </DeskToolProvider>\n      </SourceProvider>\n    </ErrorBoundary>\n  )\n}\n"],
  "mappings": "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",
  "names": ["Delay", "children", "ms", "ready", "setReady", "useState", "useEffect", "timeoutId", "setTimeout", "clearTimeout", "jsx", "Fragment", "RenderActionCollectionState", "props", "actions", "actionProps", "onActionComplete", "GetHookCollectionState", "onReset", "hooks", "args", "RenderBadgeCollectionState", "badges", "badgeProps", "rest", "emptyArray", "PaneRouterProvider", "flatIndex", "index", "params", "payload", "siblingIndex", "navigate", "navigateIntent", "useRouter", "routerState", "useRouterState", "routerPaneGroups", "useMemo", "panes", "groupIndex", "modifyCurrentGroup", "useCallback", "modifier", "currentGroup", "currentItem", "nextGroup", "nextPanes", "slice", "nextRouterState", "setPayload", "nextPayload", "siblings", "item", "setParams", "nextParams", "handleEditReference", "id", "parentRefPath", "type", "template", "pathToString", "ctx", "hasGroupSiblings", "length", "groupLength", "routerPanesState", "ChildLink", "BackLink", "ReferenceChildLink", "ParameterizedLink", "replaceCurrent", "opts", "closeCurrent", "filter", "sibling", "duplicateCurrent", "options", "duplicatedItem", "setView", "viewId", "restParams", "omit", "view", "PaneRouterContext", "Provider", "value", "_calcPaneResize", "cache", "left", "right", "deltaX", "_a", "_b", "sum", "flex", "width", "leftMinWidth", "minWidth", "PANE_DEFAULT_MIN_WIDTH", "rightMinWidth", "leftMaxWidth", "Math", "min", "maxWidth", "Infinity", "rightMaxWidth", "minDeltaX", "rightMinDeltaX", "maxDeltaX", "leftMaxDeltaX", "_deltaX", "max", "leftW", "rightW", "leftFlex", "rightFlex", "_getDOMPath", "rootElement", "el", "path", "e", "parentElement", "Array", "from", "childNodes", "indexOf", "unshift", "EMPTY_PATH", "_sortElements", "elements", "map", "WeakMap", "element", "set", "_sortByElementPath", "a", "b", "get", "len", "i", "aIndex", "bIndex", "sort", "createPaneLayoutController", "observers", "optionsMap", "userCollapsedElementSet", "Set", "rootWidth", "expandedElement", "resizeDataMap", "Map", "resizing", "collapse", "add", "_notifyObservers", "expand", "delete", "mount", "original", "push", "idx", "splice", "resize", "leftElement", "_c", "_d", "leftIndex", "leftOptions", "rightElement", "rightOptions", "offsetWidth", "leftResizeData", "rightResizeData", "currentMinWidth", "currentMaxWidth", "setRootElement", "nextRootElement", "setRootWidth", "nextRootWidth", "subscribe", "observer", "_elements", "dataMap", "lastElement", "collapsedWidth", "PANE_COLLAPSED_WIDTH", "remaingWidth", "isLast", "userCollapsed", "has", "sizeCollapsed", "collapsed", "resizeData", "data", "PaneLayout", "onCollapse", "onExpand", "restProps", "controller", "rootRect", "useElementRect", "state", "setState", "paneLayout", "PaneLayoutContext", "Root", "ref", "PaneResolutionError", "Error", "constructor", "message", "context", "helpId", "cause", "randomIdCache", "assignId", "obj", "cachedValue", "nanoid", "bindCache", "memoBind", "methodKey", "boundMethods", "bound", "method", "bind", "isPromise", "thing", "then", "isSerializable", "isRecord", "serialize", "rethrowWithPaneResolutionErrors", "next", "unresolvedPane", "wrapWithPublishReplay", "pipe", "publishReplay", "refCount", "createPaneResolver", "middleware", "resolvePane", "isObservable", "switchMap", "result", "observableOf", "resolveIntent", "resolvedPaneCache", "memoize", "nextFn", "key", "join", "cachedResolvedPane", "fallbackEditorPanes", "traverse", "currentId", "intent", "parent", "levelIndex", "structureContext", "targetId", "schemaTypeName", "otherParams", "splitIndex", "resolvedPane", "firstValueFrom", "depthIndex", "canHandleIntent", "call", "pane", "child", "items", "Promise", "all", "nextLevelIndex", "resolve", "_id", "flat", "matchingPanes", "rootPaneNode", "closestPaneToRoot", "useDeskTool", "deskTool", "useContext", "DeskToolContext", "fallbackEditorChild", "nodeId", "replace", "resolveDocumentNode", "defaultDocumentBuilder", "schemaType", "documentId", "title", "initialValueTemplate", "hashContext", "JSON", "stringify", "parentId", "serializeOptionsIndex", "serializeOptions", "serializeOptionsPath", "hashResolvedPaneMeta", "meta", "normalized", "routerPaneSibling", "paneNode", "resolvePaneTree", "flattenedRouterPanes", "current", "resolvedPaneMeta", "loadingPanes", "restIndex", "loadingPanePath", "_", "currentIndex", "loadingPane", "nextStream", "startsWith", "concat", "nextResolvedPanes", "console", "warn", "generateHelpUrl", "createResolvedPaneNodeStream", "routerPanesStream", "initialCacheState", "cacheKeysByFlatIndex", "NEVER", "resolvedPanes$", "rawRouterPanes", "routerPanes", "flatMap", "routerPaneGroup", "startWith", "pairwise", "prev", "curr", "prevValue", "currValue", "isEqual", "diffIndex", "scan", "acc", "beforeDiffIndex", "afterDiffIndex", "keysToKeep", "keySet", "keysToDelete", "cacheKeySet", "nextPane", "prevPane", "distinctUntilChanged", "nextValue", "useRouterPanesStream", "routerStateSubject", "ReplaySubject", "routerPanes$", "asObservable", "_routerState", "useResolvedPanes", "error", "setError", "setData", "paneDataItems", "resolvedPanes", "reduce", "groupsLen", "itemId", "paneDataItem", "active", "childItemId", "LOADING_PANE", "selected", "subscription", "unsubscribe", "Redirect", "Card", "height", "jsxs", "Flex", "align", "direction", "justify", "Spinner", "muted", "Box", "marginTop", "Text", "size", "ensureDocumentIdAndType", "documentStore", "uuid", "resolvedType", "resolveTypeForDocument", "IntentResolver", "paramsProp", "payloadProp", "useDocumentStore", "useUnique", "nextRouterPanes", "setNextRouterPanes", "idParam", "typeParam", "cancelledRef", "getNextRouterPanes", "catch", "PathSegment", "styled", "span", "formatStack", "stack", "RegExp", "window", "location", "host", "StructureError", "showStack", "SerializeError", "includes", "handleReload", "reload", "overflow", "padding", "sizing", "tone", "Container", "Heading", "as", "radius", "shadow", "Stack", "space", "Label", "Code", "segment", "href", "rel", "target", "Button", "text", "icon", "SyncIcon", "onClick", "UnknownPane", "isSelected", "paneKey", "Pane", "PaneHeader", "PaneContent", "getWaitMessages", "thresholds", "isDev", "src", "of", "merge", "mapTo", "delay", "DEFAULT_MESSAGE", "Content", "LoadingPane", "memo", "messageProp", "resolvedMessage", "split", "currentMessage", "setCurrentMessage", "sub", "contentElement", "setContentElement", "mounted", "setMounted", "_raf2", "content", "displayName", "paneMap", "component", "lazy", "document", "documentList", "list", "DeskToolPane", "PaneComponent", "Suspense", "fallback", "isActive", "prevParams", "prevPayload", "keys", "Object", "ErrorPane", "paddingX", "paddingY", "getOpErrorTitle", "op", "getOpSuccessTitle", "IGNORE_OPS", "DocumentOperationResults", "pushToast", "useToast", "documentType", "useDocumentPane", "event", "useDocumentOperationEvent", "prevEvent", "useRef", "closable", "duration", "status", "description", "getHistoryMenuItem", "features", "hasValue", "changesOpen", "reviewChanges", "action", "RestoreIcon", "isDisabled", "getInspectItem", "BinaryDocumentIcon", "shortcut", "getProductionPreviewItem", "previewUrl", "EarthAmericasIcon", "getMenuItems", "Boolean", "fn", "isSanityDocument", "_type", "usePreviewUrl", "setPreviewUrl", "resolveProductionUrl", "useSource", "value$", "useAsObservable", "debounceTime", "catchError", "getInitialValueTemplateOpts", "templates", "panePayload", "structureNodeTemplate", "templateName", "urlTemplate", "typeTemplates", "t", "templateParams", "emptyObject", "DocumentPaneProvider", "client", "useClient", "DEFAULT_STUDIO_CLIENT_OPTIONS", "schema", "useSchema", "useTemplates", "documentActions", "documentBadges", "unstable_languageFilter", "languageFilterResolver", "historyStore", "useHistoryStore", "presenceStore", "usePresenceStore", "paneRouter", "usePaneRouter", "menuItemGroups", "views", "viewsProp", "paneOptions", "documentIdRaw", "getPublishedId", "paneParams", "templateParameters", "initialValueRaw", "useInitialValue", "initialValue", "patch", "useDocumentOperation", "editState", "useEditState", "validation", "validationRaw", "useValidationStatus", "connectionState", "useConnectionState", "draft", "published", "languageFilter", "focusPath", "setFocusPath", "pathFromString", "activeViewId", "timeline", "getTimeline", "publishedId", "enableTrace", "timelineMode", "setTimelineMode", "historyController", "useMemoObservable", "getTimelineController", "setRange", "since", "rev", "changesPanelActive", "presence", "setPresence", "documentPresence", "nextPresence", "menuItems", "inspectOpen", "inspect", "compareValue", "sinceAttributes", "viewOlderVersion", "onOlderRevision", "displayed", "setTimelineRange", "newSince", "newRev", "handleFocus", "nextFocusPath", "setLocation", "lastActiveAt", "Date", "toISOString", "handleBlur", "blurredPath", "patchRef", "execute", "toMutationPatches", "patches", "handleChange", "handleHistoryClose", "handleHistoryOpen", "handlePaneClose", "handlePaneSplit", "toggleInspect", "toggle", "handleMenuAction", "open", "handleKeyUp", "isHotkey", "preventDefault", "stopPropagation", "handleInspectClose", "openPath", "onSetOpenPath", "fieldGroupState", "onSetFieldGroupState", "collapsedPaths", "onSetCollapsedPath", "collapsedFieldSets", "onSetCollapsedFieldSets", "handleOnSetCollapsedPath", "prevState", "setAtPath", "handleOnSetCollapsedFieldSet", "handleSetActiveFieldGroup", "groupName", "requiredPermission", "_createdAt", "liveEdit", "docId", "docPermissionsInput", "getDraftId", "permissions", "isPermissionsLoading", "useDocumentValuePermissions", "permission", "revTime", "isNonExistent", "readOnly", "hasNoPermission", "granted", "updateActionDisabled", "isActionEnabled", "createActionDisabled", "reconnecting", "formState", "useFormState", "comparisonValue", "formStateRef", "handleOpenPath", "ops", "getExpandOperations", "forEach", "documentPane", "onBlur", "onChange", "onFocus", "onPathOpen", "onHistoryClose", "onHistoryOpen", "onInspectClose", "onKeyUp", "onMenuAction", "onPaneClose", "onPaneSplit", "onSetActiveFieldGroup", "onSetCollapsedFieldSet", "DocumentPaneContext", "TIMELINE_LABELS", "create", "discardDraft", "initial", "editDraft", "editLive", "publish", "unpublish", "TIMELINE_ICON_COMPONENTS", "AddCircleIcon", "TrashIcon", "CloseIcon", "EditIcon", "PublishIcon", "UnpublishIcon", "formatTimelineEventLabel", "getTimelineEventIconComponent", "sinceTimelineProps", "topSelection", "bottomSelection", "disabledBeforeSelection", "revTimelineProps", "UserAvatarStack", "maxLength", "userIds", "AvatarStack", "userId", "UserAvatar", "user", "withTooltip", "IconWrapper", "theme", "borderColor", "sanity", "color", "base", "skeleton", "css", "MenuItem", "isHovered", "selectedState", "button", "default", "primary", "enabled", "bg", "fg", "IconBox", "EventLabel", "TimestampBox", "rem", "TIMELINE_ITEM_EVENT_TONE", "withinSelection", "TimelineItem", "isSelectionBottom", "isSelectionTop", "onSelect", "timestamp", "chunk", "iconComponent", "authorUserIds", "authors", "timeAgo", "useTimeAgo", "minimal", "formattedTimestamp", "parsedDate", "formattedDate", "format", "isWithinSelection", "setHovered", "handleClick", "evt", "pressed", "disabled", "Tooltip", "portal", "placement", "fallbackPlacements", "onMouseEnter", "onMouseLeave", "createElement", "margin", "weight", "StackWrapper", "MenuWrapper", "Menu", "LOAD_MORE_OFFSET", "Timeline", "onLoadMore", "rootRef", "listRef", "loadingElement", "setLoadingElement", "checkIfLoadIsNeeded", "rootEl", "offsetHeight", "scrollTop", "bottomPosition", "isVisible", "offsetTop", "requestAnimationFrame", "onScroll", "chunkCount", "mapChunks", "endTimestamp", "reachedEarliestEntry", "Popover", "TimelineMenu", "mode", "setOpen", "setButton", "menuContent", "setMenuContent", "handleOpen", "handleClose", "handleClickOutside", "handleGlobalKeyDown", "focus", "useClickOutside", "useGlobalKeyDown", "selectRev", "revChunk", "sinceId", "revId", "findRangeForNewRev", "selectSince", "sinceChunk", "findRangeForNewSince", "loadMoreHistory", "setLoadMore", "realRevChunk", "sinceTime", "agoSuffix", "revLabel", "upperFirst", "sinceLabel", "openLabel", "buttonLabel", "constrainSize", "fontSize", "iconRight", "SelectIcon", "LoadingContent", "collectLatestAuthorAnnotations", "diff", "authorMap", "visitDiff", "annotation", "author", "previous", "values", "Scroller", "ScrollContainer", "ChangesPanel", "usePane", "scrollRef", "historyState", "selectionState", "loading", "currentObjectDiff", "isComparingCurrent", "documentContext", "React", "FieldWrapper", "ChangeFieldWrapper", "rootDiff", "changeAnnotations", "style", "borderLeft", "subActions", "paddingRight", "DiffTooltip", "annotations", "tabs", "BoundaryElementProvider", "NoChanges", "DocumentChangeContext", "ChangeList", "useDeskToolSetting", "namespace", "defaultValue", "settingsStore", "useSettingsStore", "setValue", "deskToolSettings", "forNamespace", "settings", "forKey", "listen", "newValue", "VIEW_MODE_PARSED", "VIEW_MODE_RAW", "VIEW_MODES", "lru", "HLRU", "isExpanded", "keyPath", "cached", "isArray", "toggleExpanded", "selectElement", "sel", "getSelection", "range", "createRange", "removeAllRanges", "selectNodeContents", "addRange", "select", "currentTarget", "maybeSelectAll", "selectAll", "keyCode", "metaKey", "ctrlKey", "isDocumentLike", "isString", "JSONInspectorWrapper", "div", "fonts", "code", "family", "sizes", "lineHeight", "syntax", "property", "constant", "string", "boolean", "number", "Search", "query", "TextInput", "SearchIcon", "placeholder", "InspectDialog", "dialogIdPrefix", "viewModeId", "onViewModeChange", "viewMode", "find", "setParsedViewMode", "setRawViewMode", "Dialog", "header", "DocTitle", "onClose", "onClickOutside", "position", "bottom", "zIndex", "TabList", "Tab", "label", "TabPanel", "outline", "JSONInspector", "search", "language", "tabIndex", "onKeyDown", "onDoubleClick", "TextOneLine", "ReferenceChangedBanner", "_e", "_f", "documentPreviewStore", "useDocumentPreviewStore", "routerReferenceId", "parentGroup", "parentSibling", "hasHistoryOpen", "referenceInfo", "parentRefPathSegment", "keyedSegmentIndex", "findIndex", "p", "unstable_observePathsDocumentPair", "availability", "refValue", "pathGet", "snapshot", "_ref", "handleReloadReference", "shouldHide", "available", "WarningOutlineIcon", "marginLeft", "PermissionCheckBanner", "currentUser", "useCurrentUser", "plural", "roles", "r", "name", "ReadOnlyIcon", "array", "sep", "usePrevious", "LONG_ENOUGH_BUT_NOT_TOO_LONG", "useConditionalToast", "toast", "wasEnabled", "ev", "FormView", "hidden", "margins", "useDocumentPresence", "patchChannel", "createPatchChannel", "isLocked", "transactionSyncLock", "pair", "documentEvents", "tap", "prepareMutationEvent", "prepareRebaseEvent", "hasRev", "_rev", "formRef", "focusFirstDescendant", "paddingTop", "paddingBottom", "PresenceOverlay", "onSubmit", "FormBuilder", "__internal_patchChannel", "changed", "focused", "groups", "members", "onFieldGroupSelect", "onPathBlur", "onPathFocus", "onSetFieldSetCollapsed", "onSetPathCollapsed", "mutations", "mut", "fromMutationPatches", "origin", "remotePatches", "remoteMutations", "localPatches", "localMutations", "DocumentHeaderTabs", "tabPanelId", "DocumentHeaderTab", "BUTTON_PROPS", "ErrorOutlineIcon", "warning", "info", "InfoOutlineIcon", "ValidationMenu", "boundaryElement", "isOpen", "useId", "hasValidationMarkers", "hasErrorMarkers", "some", "isValidationErrorMarker", "hasWarningMarkers", "isValidationWarningMarker", "hasInfoMarkers", "isValidationInfoMarker", "buttonProps", "MenuButton", "menu", "ValidationList", "popover", "preventOverflow", "DocumentHeaderTitle", "documentValue", "subscribed", "useValuePreview", "isActionButton", "showAsAction", "isMenuButton", "negate", "DocumentPanelHeader", "forwardRef", "contextMenuItems", "isValidationOpen", "setValidationOpen", "showTabs", "showVersionMenu", "showSplitPaneButton", "splitViews", "showSplitPaneCloseButton", "showPaneGroupCloseButton", "backButton", "ArrowLeftIcon", "Inline", "languageFilterComponent", "PaneContextMenuButton", "itemGroups", "onAction", "SplitVerticalIcon", "$disabled", "DocumentPanel", "footerHeight", "isInspectOpen", "setDocumentPanelPortalElement", "layoutCollapsed", "usePaneLayout", "parentPortal", "usePortal", "headerElement", "setHeaderElement", "headerRect", "portalRef", "documentScrollElement", "setDocumentScrollElement", "activeView", "portalElement", "splitPanes", "formViewHidden", "activeViewNode", "historical", "scrollTo", "inspectDialog", "PortalProvider", "__unstable_elements", "POPOVER_FALLBACK_PLACEMENTS", "DIALOG_WIDTH_TO_UI_WIDTH", "small", "medium", "large", "full", "ConfirmDialog", "dialog", "referenceElement", "ConfirmDialogContent", "cancelButtonIcon", "cancelButtonText", "confirmButtonIcon", "confirmButtonText", "onCancel", "onConfirm", "isTopLayer", "useLayer", "setElement", "borderTop", "Grid", "columns", "gap", "ModalDialog", "dialogId", "footer", "LegacyLayerProvider", "zOffset", "__unstable_hideCloseButton", "showCloseButton", "PopoverDialog", "PopoverDialogContent", "ActionStateDialog", "modalId", "unknownModal", "ActionMenuButton", "actionStates", "idPrefix", "buttonRef", "actionIndex", "setActionIndex", "setReferenceElement", "handleAction", "popoverProps", "currentAction", "ChevronDownIcon", "actionState", "ActionMenuListItem", "onHandle", "tooltipContent", "marginRight", "isValidElement", "isValidElementType", "Hotkeys", "String", "s", "toUpperCase", "DocumentStatusBarActionsInner", "showMenu", "states", "firstActionState", "menuActionStates", "buttonElement", "setButtonElement", "toLowerCase", "LayerProvider", "DocumentStatusBarActions", "HistoryStatusBarActions", "revision", "historyActions", "HistoryRestoreAction", "BADGE_TONES", "success", "danger", "DocumentBadgesInner", "badge", "Badge", "whiteSpace", "DocumentBadges", "PublishStatus", "lastPublished", "lastUpdated", "lastPublishedTimeAgo", "lastPublishedTime", "lastUpdatedTimeAgo", "lastUpdatedTime", "PlayIcon", "StyledMotionPath", "motion", "Circle", "circle", "fill", "cx", "cy", "strokeWidth", "Arrows", "d", "Checkmark", "Edit", "rotateAnimation", "keyframes", "RotateGroup", "g", "root", "syncing", "scale", "transition", "saved", "changes", "strokeDasharray", "strokeDashoffset", "opacity", "arrows", "checkmark", "pathLength", "edit", "AnimatedStatusIcon", "viewBox", "stroke", "variants", "animate", "ReviewButton", "ReviewChangesButton", "SYNCING_TIMEOUT", "SAVED_TIMEOUT", "DocumentSparkline", "syncState", "useSyncState", "_updatedAt", "showingRevision", "rootFlexElement", "setRootFlexElement", "rootFlexRect", "setStatus", "isSyncing", "timerId", "useLayoutEffect", "reviewButton", "publishStatus", "DocumentActionsBox", "DocumentStatusBar", "actionsBoxRef", "paddingLeft", "KeyboardShortcutResponder", "actionsBoxElement", "activeIndex", "onActionStart", "activeAction", "handleKeyDown", "matchingStates", "matchingState", "DocumentActionShortcuts", "setActiveIndex", "onComplete", "DOCUMENT_PANEL_MIN_WIDTH", "DOCUMENT_PANEL_INITIAL_MIN_WIDTH", "CHANGES_PANEL_MIN_WIDTH", "DIALOG_PROVIDER_POSITION", "StyledChangeConnectorRoot", "ChangeConnectorRoot", "DocumentPane", "parentSourceName", "SourceProvider", "source", "DocumentPaneInner", "resolveNewDocumentOptions", "usePaneOptions", "isLoaded", "isDocumentLoaded", "useDocumentType", "templateItems", "templatePermissions", "isTemplatePermissionsLoading", "useTemplatePermissions", "providerProps", "mergeDocumentType", "childParams", "routerPanesStateLength", "activePath", "ReferenceInputOptionsProvider", "EditReferenceLinkComponent", "onEditReference", "initialValueTemplateItems", "InnerDocumentPane", "zOffsets", "useZIndex", "footerElement", "setFooterElement", "setActionsBoxElement", "documentPanelPortalElement", "footerRect", "footerH", "documentPanel", "DialogProvider", "PaneFooter", "changesPanel", "onConnectorSetFocus", "isReviewChangesOpen", "onOpenReviewChanges", "onSetFocus", "NoDocumentTypesScreen", "StyledPaneLayout", "isSaveHotkey", "DeskTool", "onPaneChange", "mediaIndex", "useMediaIndex", "setLayoutCollapsed", "setPortalElement", "handleRootCollapse", "handleRootExpand", "hasSiblings", "group", "withoutSiblings", "addEventListener", "removeEventListener", "hasDefinedDocumentTypes", "_original", "types", "_isCustomDocumentTypeDefinition", "paneIndex", "EMPTY_RECORD", "DeskToolBoundary", "tool", "unstable_sources", "sources", "useWorkspace", "firstSource", "defaultDocumentNode", "structure", "intentName", "setActivePanes", "ErrorBoundary", "onCatch", "DeskToolProvider"]
}
